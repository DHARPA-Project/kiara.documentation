{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kiara plugin: documentation \u00b6 This package contains a set of commonly used/useful modules, pipelines, types and metadata schemas for Kiara . Description \u00b6 Kiara user documentation. Package content \u00b6 module_types \u00b6 documentation.example : A very simple example module; concatenate two strings. operations \u00b6 documentation.example : A very simple example module; concatenate two strings. Links \u00b6 Documentation: https://DHARPA-Project.github.io/kiara.documentation Code: https://github.com/DHARPA-Project/kiara.documentation","title":"Home"},{"location":"#kiara-plugin-documentation","text":"This package contains a set of commonly used/useful modules, pipelines, types and metadata schemas for Kiara .","title":"kiara plugin: documentation"},{"location":"#description","text":"Kiara user documentation.","title":"Description"},{"location":"#package-content","text":"","title":"Package content"},{"location":"#module_types","text":"documentation.example : A very simple example module; concatenate two strings.","title":"module_types"},{"location":"#operations","text":"documentation.example : A very simple example module; concatenate two strings.","title":"operations"},{"location":"#links","text":"Documentation: https://DHARPA-Project.github.io/kiara.documentation Code: https://github.com/DHARPA-Project/kiara.documentation","title":"Links"},{"location":"SUMMARY/","text":"Home Usage","title":"SUMMARY"},{"location":"info/SUMMARY/","text":"module_types operations","title":"SUMMARY"},{"location":"info/module_types/","text":"documentation.example \u00b6 Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleCo\u2026 and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.Kiar\u2026 method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 This example module can be tested on the \u2502 \u2502 commandline with the ``kiara run`` command: \u2502 \u2502 \u2502 \u2502 ``` \u2502 \u2502 kiara run core_types.example text_1=\"xxx\" \u2502 \u2502 text_2=\"yyy\" \u2502 \u2502 ``` \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kia\u2026 documentation : https://DHARPA-Project.github.io/kiar\u2026 Module config schema Field Type Descript\u2026 Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 constants object Value no constants for this module. defaults object Value no defaults for this module. separator string The no \" - \" seperator between the two strings. Python class python_class_name ExampleModule python_module_name kiara_plugin.documentation.do\u2026 full_name kiara_plugin.documentation.do\u2026 Processing source code \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 def process (self, inputs: ValueMap, outputs: Value\u2026 separator = self . get_config_value( \"separator\" ) text_1 = inputs . get_value_data( \"text_1\" ) text_2 = inputs . get_value_data( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value( \"text\" , result) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500","title":"Module types"},{"location":"info/module_types/#kiara_info.module_types.documentation.example","text":"Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleCo\u2026 and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.Kiar\u2026 method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 This example module can be tested on the \u2502 \u2502 commandline with the ``kiara run`` command: \u2502 \u2502 \u2502 \u2502 ``` \u2502 \u2502 kiara run core_types.example text_1=\"xxx\" \u2502 \u2502 text_2=\"yyy\" \u2502 \u2502 ``` \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kia\u2026 documentation : https://DHARPA-Project.github.io/kiar\u2026 Module config schema Field Type Descript\u2026 Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 constants object Value no constants for this module. defaults object Value no defaults for this module. separator string The no \" - \" seperator between the two strings. Python class python_class_name ExampleModule python_module_name kiara_plugin.documentation.do\u2026 full_name kiara_plugin.documentation.do\u2026 Processing source code \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 def process (self, inputs: ValueMap, outputs: Value\u2026 separator = self . get_config_value( \"separator\" ) text_1 = inputs . get_value_data( \"text_1\" ) text_2 = inputs . get_value_data( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value( \"text\" , result) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500","title":"documentation.example"},{"location":"info/operations/","text":"documentation.example \u00b6 Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModu\u2026 method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 This example module can be tested on the commandline \u2502 \u2502 with the ``kiara run`` command: \u2502 \u2502 \u2502 \u2502 ``` \u2502 \u2502 kiara run core_types.example text_1=\"xxx\" \u2502 \u2502 text_2=\"yyy\" \u2502 \u2502 ``` \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_pl\u2026 documentation : https://DHARPA-Project.github.io/kiara_plu\u2026 Operation details Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Inputs field name type desc\u2026 Req\u2026 Defa\u2026 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text\u2026 stri\u2026 The yes -- no first defa\u2026 text. -- text\u2026 stri\u2026 The yes -- no seco\u2026 defa\u2026 text. -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text string The concatenated text.","title":"Operations"},{"location":"info/operations/#kiara_info.operations.documentation.example","text":"Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModu\u2026 method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 This example module can be tested on the commandline \u2502 \u2502 with the ``kiara run`` command: \u2502 \u2502 \u2502 \u2502 ``` \u2502 \u2502 kiara run core_types.example text_1=\"xxx\" \u2502 \u2502 text_2=\"yyy\" \u2502 \u2502 ``` \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_pl\u2026 documentation : https://DHARPA-Project.github.io/kiara_plu\u2026 Operation details Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Inputs field name type desc\u2026 Req\u2026 Defa\u2026 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text\u2026 stri\u2026 The yes -- no first defa\u2026 text. -- text\u2026 stri\u2026 The yes -- no seco\u2026 defa\u2026 text. -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text string The concatenated text.","title":"documentation.example"},{"location":"reference/SUMMARY/","text":"kiara_plugin documentation data_types documentation interfaces cli doc commands models pipelines","title":"SUMMARY"},{"location":"reference/kiara_plugin/documentation/__init__/","text":"Top-level package for kiara.documentation. KIARA_METADATA \u00b6 find_data_types : Union [ Type , Tuple , Callable ] \u00b6 find_model_classes : Union [ Type , Tuple , Callable ] \u00b6 find_modules : Union [ Type , Tuple , Callable ] \u00b6 find_pipelines : Union [ Type , Tuple , Callable ] \u00b6 get_version () \u00b6 Source code in documentation/__init__.py def get_version (): from pkg_resources import DistributionNotFound , get_distribution try : # Change here if project is renamed and does not equal the package name dist_name = __name__ __version__ = get_distribution ( dist_name ) . version except DistributionNotFound : try : version_file = os . path . join ( os . path . dirname ( __file__ ), \"version.txt\" ) if os . path . exists ( version_file ): with open ( version_file , encoding = \"utf-8\" ) as vf : __version__ = vf . read () else : __version__ = \"unknown\" except ( Exception ): pass if __version__ is None : __version__ = \"unknown\" return __version__ Modules \u00b6 data_types \u00b6 This module contains the value type classes that are used in the kiara.documentation package. documentation \u00b6 Classes \u00b6 ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/documentation.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"documentation.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/documentation.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/documentation.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/documentation.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. interfaces special \u00b6 cli special \u00b6 doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict models \u00b6 This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes. pipelines special \u00b6 Default (empty) module that is used as a base path for pipelines contained in this package.","title":"  init  "},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.KIARA_METADATA","text":"","title":"KIARA_METADATA"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_data_types","text":"","title":"find_data_types"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_model_classes","text":"","title":"find_model_classes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_modules","text":"","title":"find_modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_pipelines","text":"","title":"find_pipelines"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.get_version","text":"Source code in documentation/__init__.py def get_version (): from pkg_resources import DistributionNotFound , get_distribution try : # Change here if project is renamed and does not equal the package name dist_name = __name__ __version__ = get_distribution ( dist_name ) . version except DistributionNotFound : try : version_file = os . path . join ( os . path . dirname ( __file__ ), \"version.txt\" ) if os . path . exists ( version_file ): with open ( version_file , encoding = \"utf-8\" ) as vf : __version__ = vf . read () else : __version__ = \"unknown\" except ( Exception ): pass if __version__ is None : __version__ = \"unknown\" return __version__","title":"get_version()"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation-modules","text":"","title":"Modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.data_types","text":"This module contains the value type classes that are used in the kiara.documentation package.","title":"data_types"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation","text":"","title":"documentation"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation.ExampleModule","text":"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/documentation.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"documentation.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"ExampleModule"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation.ExampleModule-classes","text":"_config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Classes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation.ExampleModule-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/documentation.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/documentation.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/documentation.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation.ExampleModuleConfig","text":"Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"ExampleModuleConfig"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.documentation.ExampleModuleConfig-attributes","text":"separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.interfaces","text":"","title":"interfaces"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.interfaces.cli","text":"doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"cli"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.models","text":"This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes.","title":"models"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.pipelines","text":"Default (empty) module that is used as a base path for pipelines contained in this package.","title":"pipelines"},{"location":"reference/kiara_plugin/documentation/data_types/","text":"This module contains the value type classes that are used in the kiara.documentation package.","title":"Data types"},{"location":"reference/kiara_plugin/documentation/documentation/","text":"Classes \u00b6 ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/documentation.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"documentation.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/documentation.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/documentation.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/documentation.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Documentation"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule","text":"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/documentation.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"documentation.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"ExampleModule"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule._config_cls","text":"Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"_config_cls"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule._config_cls-attributes","text":"separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/documentation.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/documentation.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModule.process","text":"Source code in documentation/documentation.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"process()"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModuleConfig","text":"Source code in documentation/documentation.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"ExampleModuleConfig"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModuleConfig-attributes","text":"","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/documentation/#kiara_plugin.documentation.documentation.ExampleModuleConfig.separator","text":"The seperator between the two strings.","title":"separator"},{"location":"reference/kiara_plugin/documentation/models/","text":"This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes.","title":"Models"},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/","text":"cli special \u00b6 doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/#kiara_plugin.documentation.interfaces.cli","text":"","title":"cli"},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/#kiara_plugin.documentation.interfaces.cli.doc","text":"commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"doc"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/","text":"doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/#kiara_plugin.documentation.interfaces.cli.doc","text":"","title":"doc"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands","text":"get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/","text":"commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands","text":"","title":"commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands.get_cmd_infos","text":"Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"get_cmd_infos()"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/commands/","text":"get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"Commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/commands/#kiara_plugin.documentation.interfaces.cli.doc.commands.get_cmd_infos","text":"Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"get_cmd_infos()"},{"location":"reference/kiara_plugin/documentation/pipelines/__init__/","text":"Default (empty) module that is used as a base path for pipelines contained in this package.","title":"  init  "},{"location":"usage/","text":"Usage \u00b6 This page will give you an overview on how to use kiara via its command-line interface. For a more walk-through introduction, have a look at the Getting started page. Subcommands \u00b6 Sub-command specific information can be found on the following pages: run : run a workflow from the command-line module : get information about modules and pipelines data : get information about data in the kiara data store Getting help \u00b6 To get information for the kiara command itself use the --help flag: kiara --help Usage: kiara [OPTIONS] COMMAND [ARGS]... kiara ia a data-orchestration framework; this is the command-line frontend for it. For more information, visit the kiara homepage: https://dharpa.org/kiara.documentation . \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 --config -cnf TEXT A kiara config file (or folder \u2502 \u2502 containing one named 'kiara.config'). \u2502 \u2502 --context -ctx,-c TEXT The name of the kiara context to use (or \u2502 \u2502 the path to a context file). \u2502 \u2502 --pipeline-folder -p TEXT Folder(s) that contain extra pipeline \u2502 \u2502 definitions. \u2502 \u2502 --help Show this message and exit. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 context Kiara context related sub-commands. \u2502 \u2502 data Data-related sub-commands. \u2502 \u2502 data-type Information about available value data_types, and details about \u2502 \u2502 them. \u2502 \u2502 doc Documentation helpers. \u2502 \u2502 module Module-related sub-commands. \u2502 \u2502 operation Metadata-related sub-commands. \u2502 \u2502 pipeline Pipeline-related sub-commands. \u2502 \u2502 run Run a kiara operation. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f The same goes for any of the sub (or sub-sub...) commands: kiara module --help Usage: kiara module [OPTIONS] COMMAND [ARGS]... Module-related sub-commands. \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 --help Show this message and exit. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 explain Print details of a module type. \u2502 \u2502 explain-instance Describe a module instance. \u2502 \u2502 list List available module data_types. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Complex inputs \u00b6 TBD","title":"Usage"},{"location":"usage/#usage","text":"This page will give you an overview on how to use kiara via its command-line interface. For a more walk-through introduction, have a look at the Getting started page.","title":"Usage"},{"location":"usage/#subcommands","text":"Sub-command specific information can be found on the following pages: run : run a workflow from the command-line module : get information about modules and pipelines data : get information about data in the kiara data store","title":"Subcommands"},{"location":"usage/#getting-help","text":"To get information for the kiara command itself use the --help flag: kiara --help Usage: kiara [OPTIONS] COMMAND [ARGS]... kiara ia a data-orchestration framework; this is the command-line frontend for it. For more information, visit the kiara homepage: https://dharpa.org/kiara.documentation . \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 --config -cnf TEXT A kiara config file (or folder \u2502 \u2502 containing one named 'kiara.config'). \u2502 \u2502 --context -ctx,-c TEXT The name of the kiara context to use (or \u2502 \u2502 the path to a context file). \u2502 \u2502 --pipeline-folder -p TEXT Folder(s) that contain extra pipeline \u2502 \u2502 definitions. \u2502 \u2502 --help Show this message and exit. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 context Kiara context related sub-commands. \u2502 \u2502 data Data-related sub-commands. \u2502 \u2502 data-type Information about available value data_types, and details about \u2502 \u2502 them. \u2502 \u2502 doc Documentation helpers. \u2502 \u2502 module Module-related sub-commands. \u2502 \u2502 operation Metadata-related sub-commands. \u2502 \u2502 pipeline Pipeline-related sub-commands. \u2502 \u2502 run Run a kiara operation. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f The same goes for any of the sub (or sub-sub...) commands: kiara module --help Usage: kiara module [OPTIONS] COMMAND [ARGS]... Module-related sub-commands. \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 --help Show this message and exit. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 explain Print details of a module type. \u2502 \u2502 explain-instance Describe a module instance. \u2502 \u2502 list List available module data_types. \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Getting help"},{"location":"usage/#complex-inputs","text":"TBD","title":"Complex inputs"},{"location":"usage/getting_started/","tags":["tutorial"],"text":"Getting started \u00b6 This guide walks through some of the important (and some of the lesser important) features of kiara , the goal is to introduce new users to the overall framework, so they can get a feeling for what it can do, and whether it might be useful for their own usage scenarios. Setting up kiara \u00b6 In order to use kiara , we'll need to install it into a Python virtual (or conda-) environment, along all the plugins we might want to use. For the purpose of this tutorial, we'll use conda to create such an environment, but you can of course use a 'normal' virtualenv if you prefer. How to install conda itself is out of scope of this tutorial, but you should not have problems finding instructions online. One simple way is to install the Anaconda (individual edition) , then use the Anaconda navigator to create a new environment, install the 'git' package in it (if your system does not already have it), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment already activated. Here's how to create the environment, activate it, then install the necessary dependencies (assuming conda is installed): conda create -n kiara_tutorial python=3.9 conda activate kiara_tutorial conda install -c conda-forge mamba mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular kiara_plugin.network_analysis Note We are using mamba as our package manager here, instead of 'pure' conda. This is optional, but recommended since it makes things a lot faster. Getting some example data \u00b6 For this tutorial, we'll need some example data, so we can use kiara against it. We've prepared a git repository for that purpose: git clone https://github.com/DHARPA-Project/kiara.examples.git cd kiara.examples Specifically, here we'll be using two csv files that were created by my colleague Lena Jaskov : files The files contain information about connection (edges) between medical journals ( JournalEdges1902.csv ), as well as additional metadata for the journals themselves ( JournalNodes1902.csv ). We'll use that data to create table and graph structures with kiara . Checking for available operations \u00b6 First, let's have a look which operations are available, and what we can do with them: kiara operation list \u256d\u2500 Available operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from -- n/a -- \u2502 \u2502 create.database.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 create.database.from.table create_from -- n/a -- \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from -- n/a -- \u2502 \u2502 create.table.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 date.check_range Check whether a date falls within a specified date range. \u2502 \u2502 date.extract_from_string Extract a date object from a string. \u2502 \u2502 deserialize.from_json -- n/a -- \u2502 \u2502 documentation.example A very simple example module; concatenate two strings. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.table.from.csv_file pipeline Load a table from a csv file. \u2502 \u2502 list.contains Check whether an element is in a list. \u2502 \u2502 logic.and Returns 'True' if both inputs are 'True'. \u2502 \u2502 logic.nand pipeline Returns 'False' if both inputs are 'True'. \u2502 \u2502 logic.nor pipeline Returns 'True' if both inputs are 'False'. \u2502 \u2502 logic.not Negates the input. \u2502 \u2502 logic.or Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 logic.xor pipeline Returns 'True' if exactly one of it's two inputs is 'True'. \u2502 \u2502 query.database -- n/a -- \u2502 \u2502 query.table Execute a sql query against an (Arrow) table. \u2502 \u2502 table.cut_column Cut off one column from a table, returning an array. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this guide we'll use the term operation to indicate an entity that transforms data in some way or form. kiara also has the concept of module (the differences are explained in more detail here ), and in most cases the meaning of ' module ' and ' operation ' is roughly the same. Especially in the context of this 'Getting started' guide. Nonetheless, keep in mind that technically both terms refer to different things. Importing data, and creating a table \u00b6 Tables are arguably the most used (and useful) data structures in data science and data engineering. They come in different forms; some people call them spreadsheets, or dataframes. We're not fancy, so we won't do that: we'll call them tables. A depressingly large amount of (tabular) data comes in csv files, which is why we'll use one as an example here. Specifically, we will use JournalNodes1902.csv . As stated above, this file contains information about historical medical journals (name, type, where it was from, etc.), and we'll later use it as the table which will provide node information in a network graph. We want to convert this file into a 'proper' table structure, because that will make subsequent processing faster, and also simpler in a lot of cases. 'Proper\", in this case means we'll convert it into a better format for internal use, for example containing information about the data type in each column, among other things. Finding the right command, and how to use it \u00b6 kiara likes its data 'onboarded' (or: 'imported'), meaning it prefers to work with data that was imported into its internal data store. This effectively duplicates a file on a users filesystem (and depending on the filesystem used this could mean doubling the hard-disk space required for that particular dataset). The reason behind this preference is that this ensures the data won't be modified by an external application after import. This enables kiara to employ some techniques to save memory, hard-disk space as well as cpu-resources down the line. So, in most cases, the first thing you (as a user) want to do is 'import' the source data you want to work with. So, let's run the operation list command again, but let's filter using the term 'import': kiara operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.table.from.csv_file pipeline Load a table from a csv file. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Importing the 'raw' file \u00b6 After looking at the kiara operation list output, it looks like the import.file module might be just what we need (to be honest, import.table.from.csv_file is what we'd really use if we weren't stuck in this getting-started guide, but doing that would skip over a few important basics that are worth understanding). kiara has the run sub-command, which is used to execute operations. If we only provide a module name, and not any input, this command will tell us what it expects: kiara run import.file \u256d\u2500 Run info: import.file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: import.file \u2502 \u2502 \u2502 \u2502 Import a file from the local filesystem. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path not set string The local path to yes \u2502 \u2502 the file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file The loaded files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As makes obvious sense, we need to provide a path input, of type string , letting kiara know where to pick up the file. The kiara commandline interface can take complex inputs like dicts, but fortunately this is not necessary here. If you ever come into a situation where you need that, check out this section . For simple inputs like string-type things, all we need to do is provide the input name, followed by '=' and the value itself: kiara run import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see from the terminal output, this produced one piece of output data: file (referring to the imported file), and it displays a preview of the file in question for us. By itself, this doesn't do anything yet, it just reads the file and then stops. What we want in this case is to 'save' the file, so we can refer to it again later. The process of 'saving' a value in kiara persists it into the kiara data store, giving it an internal unique id (string), and allows the user to 'tag' the value with one or multiple aliases. Aliases are names that are meaningful to the user, in order to amke it easy to find datasets later on. kiara supports saving any of the output values of a kiara run command via the --save flag. This --save parameter takes a single string as argument, and can be used in two ways: if you want to save all output fields of a run you can just provide a single string (for example imported_journal_csv ) as the parameter. In this case, kiara will store all result items with an auto-generated alias in the form of [save_argument].[field_name] . In our case this would result in one item being store in the data store, with the alias imported_journal_csv.file . if you want to save only a subset of result values, or want to have more control about the aliases those results get, you can use the --save parameter for every field you want to persist. In this case the argument to --save must be in the form of: [field_name]=[alias] . You can use the parameter multiple times, with different field names. In our case, lets opt for the second option: kiara run --save file=journal_nodes_file import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file 80f5aee4-aa44-4831-a597-c88f79\u2026 journal_nodes_file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Checking the data store \u00b6 To check whether that worked, we can list all of our items in the data store, and see if the one we just created is in there: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All right! Looks like this worked. Creating a table from an imported csv file \u00b6 Csv files are usually not much use by themselves, in most cases we want to create a table-like structure from them, so we can efficiently query the data. This usually also makes sure that the structure and format of the file is valid. Let's ask kiara what 'create' related operations it has available: kiara operation list create \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from -- n/a -- \u2502 \u2502 create.database.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 create.database.from.table create_from -- n/a -- \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from -- n/a -- \u2502 \u2502 create.table.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Righto, looks like create.table.from.csv_file might be our ticket! Let's see what it does: kiara operation explain create.table.from.csv_file \u256d\u2500 Operation: create.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file csv_file The yes -- no \u2502 \u2502 source default \u2502 \u2502 value. -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, it needs an input csv_file of type file , and will return a 'table'-named output of type, well ... table . Looks good. Here is how we run this: kiara run create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische specialized: psychiatry and Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 bladen neurology \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 neurology \u2502 \u2502 208 The American Journal of specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 Psychology \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 des zwanzigsten Jahrhunderts \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Nervenkrankheiten neurology \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 und Neurologie neurology \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 and pathology \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische specialized: psychology and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Psychologie und Pathologie pedagogy \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr specialized: anthropology, Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 gerichtliche Medizin und criminology and forensics \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 und Psychiatrie neurology \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische specialized: anthropology, Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Gerichts-Zeitung criminology and forensics \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 neurology \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Wochenschrift \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Gesundheitspflege \u2502 \u2502 93 Klinisch-therapeutische general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Wochenschrift \u2502 \u2502 151 Medicinisch-chirurgisches specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Centralblatt \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und specialized: psychiatry and Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Seelenlebens neurology \u2502 \u2502 206 Ergebnisse der Allgemeinen specialized: anatomy, physiology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Pathologie und Pathologischen and pathology \u2502 \u2502 Anatomie \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this example we pre-pend the right side of the csv_file= argument with alias: . This is necessary to make it clear to kiara that we mean a dataset that lives in its data store, and we want to refer to it via its alias. Otherwise, kiara would have just interpreted the input as a string, and since that is of the wrong input type (we needed a table), it would have thrown an error. That output looks good, right? Much more table-y then before. Only thing is: we want to again 'save' this output, so we can use it later directly. No big deal, just like last time: kiara run --output silent --save table=journal_nodes_table create.table.from.csv_file csv_file=alias:journal_nodes_file Note Here we use the --output silent command line option to surpress any output of values. We've seen this already in the last invocation of this command. kiara will still tell us the id of the value it just saved. Checking the data store, again \u00b6 Now, let's look again at the content of the kiara data store: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 journal_nodes_table table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, there are 2 items now: one file , and one table . If you ever want to get more details about any of the items in the data store, you can use one of those commands: kiara data explain \u00b6 kiara data explain alias:journal_nodes_table \u256d\u2500 Value details for: alias:journal_nodes_table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 5f83b3bb-2046-4695-91dc-047937ec1878 \u2502 \u2502 aliases journal_nodes_table \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"6c94b0ba-4d67-423f-9f28-08c5539abc1f\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"d2d5138a-3fc3-4874-8f74-7ca1a85b0257\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAn89Et1ENzfoASJRYcWEceyfRiPg664mN4nnHLFnjRLyg \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The result value. \u2502 \u2502 \u2502 \u2502 value_size 42.79 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This command prints out the metadata kiara has stored about a value item. This commands supports displaying several internally important metadata details of stored datasets, check out the available options with kiara data explain --help . One option that is particularly interesting is the -p one, which displays all the metadata properties kiara has collected about a value. One thing that is noteworthy here is the load_config section in the metadata. When saving the value, kiara automatically generated this configuration, and it can be used later to load and use the exact same table file, in another workflow. kiara data load \u00b6 kiara data load -s alias:journal_nodes_table Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German 296 Die deutsche Klinik am Eingange des general medicine Berlin German Empire Germany 52.52 13.405 German zwanzigsten Jahrhunderts 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German Pathologie 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin specialized: anthropology, criminology and Berlin German Empire Germany 52.52 13.405 German und \u00f6ffentliches Sanit\u00e4tswesen forensics 47 Centralblatt f\u00fcr Nervenheilkunde und specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German Psychiatrie 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German forensics 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German 206 Ergebnisse der Allgemeinen Pathologie und specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German Pathologischen Anatomie Note If you omit the -s flag, this command will let you browse the table (or any other supported data type) interactively, similar to a pager application. This command loads the actual data, and prints out its content (or a representation of it that makes sense in a terminal-context). Querying the table data \u00b6 This section is a bit more advanced, so you can skip it if you want. It's just to show an example of what can be done with a stored table data item. We'll be using the sql query language to find the names and types of all journals from Berlin. The query for this is: select Label , JournalType from data where City = 'Berlin' The kiara module we are going to use is called query.table . Let's check again the parameters this module expects: kiara run query.table \u256d\u2500 Run info: query.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: query.table \u2502 \u2502 \u2502 \u2502 Execute a sql query against an (Arrow) table. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query not set string The query. yes \u2502 \u2502 relation_name valid string The name the no data \u2502 \u2502 table is \u2502 \u2502 referred to in \u2502 \u2502 the sql query. \u2502 \u2502 table not set table The table to yes \u2502 \u2502 query \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table The query result. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Aha. table , and query are required. Good, we have both. In this example we'll use the data item we've stored as input for another workflow. That goes like this: kiara run query.table table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table \u2502 \u2502 Label JournalType \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 Die Krankenpflege specialized: \u2502 \u2502 therapy \u2502 \u2502 Die deutsche Klinik general medicine \u2502 \u2502 am Eingange des \u2502 \u2502 zwanzigsten \u2502 \u2502 Jahrhunderts \u2502 \u2502 Therapeutische specialized: \u2502 \u2502 Monatshefte therapy \u2502 \u2502 Allgemeine specialized: \u2502 \u2502 Zeitschrift f\u00fcr psychiatry and \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 Archiv f\u00fcr specialized: \u2502 \u2502 Psychiatrie und psychiatry and \u2502 \u2502 Nervenkrankheiten neurology \u2502 \u2502 Berliner klinische general medicine \u2502 \u2502 Wochenschrift \u2502 \u2502 Charit\u00e9 Annalen general medicine \u2502 \u2502 Monatsschrift f\u00fcr specialized: \u2502 \u2502 Psychiatrie und psychiatry and \u2502 \u2502 Neurologie neurology \u2502 \u2502 Virchows Archiv specialized: \u2502 \u2502 anatomy, physiology \u2502 \u2502 and pathology \u2502 \u2502 Zeitschrift f\u00fcr specialized: \u2502 \u2502 p\u00e4dagogische psychology and \u2502 \u2502 Psychologie und pedagogy \u2502 \u2502 Pathologie \u2502 \u2502 Vierteljahrsschrift specialized: \u2502 \u2502 f\u00fcr gerichtliche anthropology, \u2502 \u2502 Medizin und criminology and \u2502 \u2502 \u00f6ffentliches forensics \u2502 \u2502 Sanit\u00e4tswesen \u2502 \u2502 Centralblatt f\u00fcr specialized: \u2502 \u2502 Nervenheilkunde und psychiatry and \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 Russische general medicine \u2502 \u2502 medicinische \u2502 \u2502 Rundschau \u2502 \u2502 Deutsche general medicine \u2502 \u2502 Aerzte-Zeitung \u2502 \u2502 Monatsschrift f\u00fcr specialized: \u2502 \u2502 Geburtsh\u00fclfe und gynecology \u2502 \u2502 Gyn\u00e4kologie \u2502 \u2502 Archiv f\u00fcr specialized: \u2502 \u2502 klinische Chirurgie surgery \u2502 \u2502 Zeitschrift f\u00fcr general medicine \u2502 \u2502 klinische Medicin \u2502 \u2502 Deutsche specialized: \u2502 \u2502 milit\u00e4r\u00e4rztliche military medicine \u2502 \u2502 Zeitschrift \u2502 \u2502 Jahresbericht \u00fcber specialized: \u2502 \u2502 die Leistungen und psychiatry and \u2502 \u2502 Fortschritte auf neurology \u2502 \u2502 dem Gebiete der \u2502 \u2502 Neurologi ... \u2502 \u2502 \u00c4rztliche general medicine \u2502 \u2502 Sachverst\u00e4ndigen-Z\u2026 \u2502 \u2502 Zeitschrift f\u00fcr die specialized: \u2502 \u2502 Behandlung psychiatry and \u2502 \u2502 Schwachsinniger und neurology \u2502 \u2502 Epileptischer \u2502 \u2502 Der Pfarrbote news media \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note how we use the alias: -prefix again here, to signify to kiara that what follows is indeed a reference to a dataset, and not a string... Saving the result of the query \u00b6 As it is, the result of this query won't be saved anywhere. This might be fine for queries in exploratory-type situations. But in some cases we might want to store the result of our work, similar to how we imported the original table in the first place. The kiara run command can do that, using the --save flag. It takes as argument a string. If that string contains a '=', it is interpreted as a key value pair where the key is the name of the field we want to save, and the value the alias we want to save it under. Here is how that goes: kiara run query.table --output=silent --save query_result=berlin_journals table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" Here we've also used the --output=silent option, since we've seen that result before. From looking at the output, it seems that saving our result has worked. We can make sure by letting kiara 'explain' to us the data that is stored under the alias 'berlin_journals': kiara data explain --properties alias:berlin_journals \u256d\u2500 Value details for: alias:berlin_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 2f13241d-72f3-452b-ba20-cde561e9242b \u2502 \u2502 aliases berlin_journals \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"9352d8e8-ab86-46b4-b8ac-9dcb39a8d0b5\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"e81d227b-0479-4371-8bb9-8d58b6edafc4\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAq5Ty5hNtUaKWouPmS75LxteiQQv6Ue6Jsq9v39QoMPyw \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The query result. \u2502 \u2502 \u2502 \u2502 value_size 2.63 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1666 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Generating a network graph \u00b6 Our goal for this tutorial is to create a network graph, and investigate its properties. Network graphs are usually created from one or two pieces of data (both tabular in nature: edges (mandataor): information about what nodes exist, and if and how they are connected nodes information (optional): information about attributes of each node Note In this tutorial we'll go through all the steps necessary to create a network graph object from two csv files, one by one. This is a bit cumbersome, but it'll help you understand what actually happens. In a later tutorial we'll show how to create a kiara pipeline to combine all those steps into one. Importing edges data, creating a table item from it \u00b6 We already have our nodes imported into kiara (with the alias my_first_table ). Now we need to do the same for our edges. Simliar to what we have done above, we want to import the file into the kiara data store, and then convert it into a table. This time, let's just use a pre-pared (so-called) pipeline operation, which basically runs both operations in one, and feeds the right input(s) into the right input(s): kiara operation explain import.table.from.csv_file \u256d\u2500 Operation: import.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Load a table from a csv file. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path string The yes -- no \u2502 \u2502 local default \u2502 \u2502 path to -- \u2502 \u2502 the \u2502 \u2502 file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file The loaded files. \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, let's see: kiara run --save journal_edges import.table.from.csv_file path=examples/data/journals/JournalEdges1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffSource,Target,weight \u2502 \u2502 1,1,11 \u2502 \u2502 1,5,1 \u2502 \u2502 1,7,6 \u2502 \u2502 1,8,15 \u2502 \u2502 1,10,24 \u2502 \u2502 1,13,1 \u2502 \u2502 1,14,2 \u2502 \u2502 1,15,8 \u2502 \u2502 1,18,7 \u2502 \u2502 1,20,48 \u2502 \u2502 1,21,7 \u2502 \u2502 1,22,4 \u2502 \u2502 1,23,75 \u2502 \u2502 1,24,1 \u2502 \u2502 1,26,8 \u2502 \u2502 1,29,1 \u2502 \u2502 1,30,14 \u2502 \u2502 1,35,16 \u2502 \u2502 1,36,23 \u2502 \u2502 1,37,4 \u2502 \u2502 1,38,5 \u2502 \u2502 1,39,4 \u2502 \u2502 1,40,10 \u2502 \u2502 1,41,2 \u2502 \u2502 1,42,4 \u2502 \u2502 1,43,2 \u2502 \u2502 1,44,1 \u2502 \u2502 1,45,5 \u2502 \u2502 1,46,7 \u2502 \u2502 1,47,2 \u2502 \u2502 1,56,1 \u2502 \u2502 1,58,34 \u2502 \u2502 1,61,9 \u2502 \u2502 1,63,12 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Source Target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result values \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file efbf1919-4068-4a6d-9\u2026 journal_edges.impor\u2026 \u2502 \u2502 table table baf0f848-fb77-413d-a\u2026 journal_edges.table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we've used a simple string (without '=') with the --save option, and as you can see, kiara created two namespaced aliases for the result items. At this stage we'll have two relevant tables in our store: journal_edges.table , and journal_nodes_table : kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 journal_nodes_table table \u2502 \u2502 berlin_journals table \u2502 \u2502 journal_edges.imported_file file \u2502 \u2502 journal_edges.table table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Creating the graph \u00b6 Now that we have the edges data in kiara in a useful format, we can create the graph object. The data type for graphs in kiara is called network_data , so let's check out all the operations kiara has to offer related to network_data : kiara operation list network_data \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Hm, create.network_data.from.tables looks good, right? Let's see that operations interface: kiara operation explain create.network_data.from.tables \u256d\u2500 Operation: create.network_data.from.tables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 edges table A table that contains the edges yes -- no default -- \u2502 \u2502 data. \u2502 \u2502 source_column_name string The name of the source column no source \u2502 \u2502 name in the edges table. \u2502 \u2502 target_column_name string The name of the target column no target \u2502 \u2502 name in the edges table. \u2502 \u2502 edges_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 nodes table A table that contains the nodes no -- no default -- \u2502 \u2502 data. \u2502 \u2502 id_column_name string The name (before any potential no id \u2502 \u2502 column mapping) of the \u2502 \u2502 node-table column that contains \u2502 \u2502 the node identifier (used in the \u2502 \u2502 edges table). \u2502 \u2502 label_column_name string The name of a column that no -- no default -- \u2502 \u2502 contains the node label (before \u2502 \u2502 any potential column name \u2502 \u2502 mapping). If not specified, the \u2502 \u2502 value of the id value will be \u2502 \u2502 used as label. \u2502 \u2502 nodes_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data The network/graph data. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From this information we can assemble our command, using alias:edges_table as the main input, and saving it using the alias journals_graph . We can figure the values for the other inputs out be running kiara data explain --properties journal_edges.table , which will give us the edge column names, among other things (and, subsequently, `kiara data explain --properties journal_nodes_table. So, here goes nothing: kiara run --save network_data=journals_graph create.network_data.from.tables edges=alias:journal_edges.table source_column_name=Source target_column_name=Target nodes=alias:journal_nodes_table id_column_name=Id label_column_name=Label \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data \u2502 \u2502 Table: edges \u2502 \u2502 \u2502 \u2502 source target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 Table: nodes \u2502 \u2502 \u2502 \u2502 id label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Jahrhunderts \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Pathologie \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen forensics \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 forensics \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Pathologischen Anatomie \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 journals_graph \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To confirm our graph data is created, let's check the data store: kiara data explain --properties alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 \u2502 \u2502 aliases journals_graph \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analysis.data_types \u2502 \u2502 full_name kiara_plugin.network_analysis.data_types.NetworkDataType \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \"412aa529-f182-4a4b-9ced-edbaa955f03b\", \u2502 \u2502 \"metadata.graph_properties\": \"fb9f1abc-586e-4c2f-b7ef-8c5b2bab0d98\", \u2502 \u2502 \"metadata.python_class\": \"c3822dc8-5e92-4c9a-9654-d28e0365926d\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAvzKSkXr3q9X66LTA8G5TT56jsT5SaMwFRATECSd7XtPb \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All good. Also, check out the meteadata kiara knows about the graph already. Side-note: investigating the graph value lineage \u00b6 kiara keeps track of all the modules and inputs that went into producing a value, basically its entire ancestry. This is not the place to explain why, and how that can be very power- and use-full. But if you are ever interested about what went into creating a particular value, you can do this with: kiara data explain --lineage alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 \u2502 \u2502 aliases journals_graph \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analy\u2026 \u2502 \u2502 full_name kiara_plugin.network_analy\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \u2502 \u2502 \"412aa529-f182-4a4b-9ced-edbaa955f03b\", \u2502 \u2502 \"metadata.graph_properties\": \u2502 \u2502 \"fb9f1abc-586e-4c2f-b7ef-8c5b2bab0d98\", \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"c3822dc8-5e92-4c9a-9654-d28e0365926d\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAvzKSkXr3q9X66LTA8G5TT56jsT5SaMwFRATECSd7XtPb \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) = \u2502 \u2502 \u2502 baf0f848-fb77-413d-a009-85365c44e8b3 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 efbf1919-4068-4a6d-969d-7a3c3cfac571 \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 f7c8c234-17f9-4edf-99cc-c72c08b\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (none) = \u2502 \u2502 \u2502 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) = \u2502 \u2502 \u2502 73153121-0072-466c-b39f-14e44d1941a5 \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) = \u2502 \u2502 \u2502 4b5f26b0-6c2b-4bee-adf9-3a0802b7f74c \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) = \u2502 \u2502 \u2502 5f83b3bb-2046-4695-91dc-047937ec1878 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 80f5aee4-aa44-4831-a597-c88f794bbc8d \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 1f71ddd4-ec59-468d-8e18-83003aa\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (none) = \u2502 \u2502 \u2502 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) = \u2502 \u2502 \u2502 536db02a-07b4-44a1-a1f2-65ecb5f60e87 \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) = \u2502 \u2502 e11f4610-cf45-455c-a168-1943a962dad0 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, this basically describes what we've done so far, to get to this stage. You could now do a kiara explain data value:<value_id> on each of the value ids you see here, if you were so inclined. More \u00b6 ... to come ...","title":"Getting started"},{"location":"usage/getting_started/#getting-started","text":"This guide walks through some of the important (and some of the lesser important) features of kiara , the goal is to introduce new users to the overall framework, so they can get a feeling for what it can do, and whether it might be useful for their own usage scenarios.","title":"Getting started"},{"location":"usage/getting_started/#setting-up-kiara","text":"In order to use kiara , we'll need to install it into a Python virtual (or conda-) environment, along all the plugins we might want to use. For the purpose of this tutorial, we'll use conda to create such an environment, but you can of course use a 'normal' virtualenv if you prefer. How to install conda itself is out of scope of this tutorial, but you should not have problems finding instructions online. One simple way is to install the Anaconda (individual edition) , then use the Anaconda navigator to create a new environment, install the 'git' package in it (if your system does not already have it), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment already activated. Here's how to create the environment, activate it, then install the necessary dependencies (assuming conda is installed): conda create -n kiara_tutorial python=3.9 conda activate kiara_tutorial conda install -c conda-forge mamba mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular kiara_plugin.network_analysis Note We are using mamba as our package manager here, instead of 'pure' conda. This is optional, but recommended since it makes things a lot faster.","title":"Setting up kiara"},{"location":"usage/getting_started/#getting-some-example-data","text":"For this tutorial, we'll need some example data, so we can use kiara against it. We've prepared a git repository for that purpose: git clone https://github.com/DHARPA-Project/kiara.examples.git cd kiara.examples Specifically, here we'll be using two csv files that were created by my colleague Lena Jaskov : files The files contain information about connection (edges) between medical journals ( JournalEdges1902.csv ), as well as additional metadata for the journals themselves ( JournalNodes1902.csv ). We'll use that data to create table and graph structures with kiara .","title":"Getting some example data"},{"location":"usage/getting_started/#checking-for-available-operations","text":"First, let's have a look which operations are available, and what we can do with them: kiara operation list \u256d\u2500 Available operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from -- n/a -- \u2502 \u2502 create.database.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 create.database.from.table create_from -- n/a -- \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from -- n/a -- \u2502 \u2502 create.table.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 date.check_range Check whether a date falls within a specified date range. \u2502 \u2502 date.extract_from_string Extract a date object from a string. \u2502 \u2502 deserialize.from_json -- n/a -- \u2502 \u2502 documentation.example A very simple example module; concatenate two strings. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.table.from.csv_file pipeline Load a table from a csv file. \u2502 \u2502 list.contains Check whether an element is in a list. \u2502 \u2502 logic.and Returns 'True' if both inputs are 'True'. \u2502 \u2502 logic.nand pipeline Returns 'False' if both inputs are 'True'. \u2502 \u2502 logic.nor pipeline Returns 'True' if both inputs are 'False'. \u2502 \u2502 logic.not Negates the input. \u2502 \u2502 logic.or Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 logic.xor pipeline Returns 'True' if exactly one of it's two inputs is 'True'. \u2502 \u2502 query.database -- n/a -- \u2502 \u2502 query.table Execute a sql query against an (Arrow) table. \u2502 \u2502 table.cut_column Cut off one column from a table, returning an array. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this guide we'll use the term operation to indicate an entity that transforms data in some way or form. kiara also has the concept of module (the differences are explained in more detail here ), and in most cases the meaning of ' module ' and ' operation ' is roughly the same. Especially in the context of this 'Getting started' guide. Nonetheless, keep in mind that technically both terms refer to different things.","title":"Checking for available operations"},{"location":"usage/getting_started/#importing-data-and-creating-a-table","text":"Tables are arguably the most used (and useful) data structures in data science and data engineering. They come in different forms; some people call them spreadsheets, or dataframes. We're not fancy, so we won't do that: we'll call them tables. A depressingly large amount of (tabular) data comes in csv files, which is why we'll use one as an example here. Specifically, we will use JournalNodes1902.csv . As stated above, this file contains information about historical medical journals (name, type, where it was from, etc.), and we'll later use it as the table which will provide node information in a network graph. We want to convert this file into a 'proper' table structure, because that will make subsequent processing faster, and also simpler in a lot of cases. 'Proper\", in this case means we'll convert it into a better format for internal use, for example containing information about the data type in each column, among other things.","title":"Importing data, and creating a table"},{"location":"usage/getting_started/#finding-the-right-command-and-how-to-use-it","text":"kiara likes its data 'onboarded' (or: 'imported'), meaning it prefers to work with data that was imported into its internal data store. This effectively duplicates a file on a users filesystem (and depending on the filesystem used this could mean doubling the hard-disk space required for that particular dataset). The reason behind this preference is that this ensures the data won't be modified by an external application after import. This enables kiara to employ some techniques to save memory, hard-disk space as well as cpu-resources down the line. So, in most cases, the first thing you (as a user) want to do is 'import' the source data you want to work with. So, let's run the operation list command again, but let's filter using the term 'import': kiara operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.table.from.csv_file pipeline Load a table from a csv file. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Finding the right command, and how to use it"},{"location":"usage/getting_started/#importing-the-raw-file","text":"After looking at the kiara operation list output, it looks like the import.file module might be just what we need (to be honest, import.table.from.csv_file is what we'd really use if we weren't stuck in this getting-started guide, but doing that would skip over a few important basics that are worth understanding). kiara has the run sub-command, which is used to execute operations. If we only provide a module name, and not any input, this command will tell us what it expects: kiara run import.file \u256d\u2500 Run info: import.file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: import.file \u2502 \u2502 \u2502 \u2502 Import a file from the local filesystem. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path not set string The local path to yes \u2502 \u2502 the file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file The loaded files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As makes obvious sense, we need to provide a path input, of type string , letting kiara know where to pick up the file. The kiara commandline interface can take complex inputs like dicts, but fortunately this is not necessary here. If you ever come into a situation where you need that, check out this section . For simple inputs like string-type things, all we need to do is provide the input name, followed by '=' and the value itself: kiara run import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see from the terminal output, this produced one piece of output data: file (referring to the imported file), and it displays a preview of the file in question for us. By itself, this doesn't do anything yet, it just reads the file and then stops. What we want in this case is to 'save' the file, so we can refer to it again later. The process of 'saving' a value in kiara persists it into the kiara data store, giving it an internal unique id (string), and allows the user to 'tag' the value with one or multiple aliases. Aliases are names that are meaningful to the user, in order to amke it easy to find datasets later on. kiara supports saving any of the output values of a kiara run command via the --save flag. This --save parameter takes a single string as argument, and can be used in two ways: if you want to save all output fields of a run you can just provide a single string (for example imported_journal_csv ) as the parameter. In this case, kiara will store all result items with an auto-generated alias in the form of [save_argument].[field_name] . In our case this would result in one item being store in the data store, with the alias imported_journal_csv.file . if you want to save only a subset of result values, or want to have more control about the aliases those results get, you can use the --save parameter for every field you want to persist. In this case the argument to --save must be in the form of: [field_name]=[alias] . You can use the parameter multiple times, with different field names. In our case, lets opt for the second option: kiara run --save file=journal_nodes_file import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file 80f5aee4-aa44-4831-a597-c88f79\u2026 journal_nodes_file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Importing the 'raw' file"},{"location":"usage/getting_started/#checking-the-data-store","text":"To check whether that worked, we can list all of our items in the data store, and see if the one we just created is in there: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All right! Looks like this worked.","title":"Checking the data store"},{"location":"usage/getting_started/#creating-a-table-from-an-imported-csv-file","text":"Csv files are usually not much use by themselves, in most cases we want to create a table-like structure from them, so we can efficiently query the data. This usually also makes sure that the structure and format of the file is valid. Let's ask kiara what 'create' related operations it has available: kiara operation list create \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from -- n/a -- \u2502 \u2502 create.database.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 create.database.from.table create_from -- n/a -- \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from -- n/a -- \u2502 \u2502 create.table.from.csv_file_bundle create_from -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Righto, looks like create.table.from.csv_file might be our ticket! Let's see what it does: kiara operation explain create.table.from.csv_file \u256d\u2500 Operation: create.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file csv_file The yes -- no \u2502 \u2502 source default \u2502 \u2502 value. -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, it needs an input csv_file of type file , and will return a 'table'-named output of type, well ... table . Looks good. Here is how we run this: kiara run create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische specialized: psychiatry and Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 bladen neurology \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 neurology \u2502 \u2502 208 The American Journal of specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 Psychology \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 des zwanzigsten Jahrhunderts \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Nervenkrankheiten neurology \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 und Neurologie neurology \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 and pathology \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische specialized: psychology and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Psychologie und Pathologie pedagogy \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr specialized: anthropology, Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 gerichtliche Medizin und criminology and forensics \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde specialized: psychiatry and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 und Psychiatrie neurology \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische specialized: anthropology, Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Gerichts-Zeitung criminology and forensics \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 neurology \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Wochenschrift \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Gesundheitspflege \u2502 \u2502 93 Klinisch-therapeutische general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Wochenschrift \u2502 \u2502 151 Medicinisch-chirurgisches specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 Centralblatt \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und specialized: psychiatry and Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Seelenlebens neurology \u2502 \u2502 206 Ergebnisse der Allgemeinen specialized: anatomy, physiology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Pathologie und Pathologischen and pathology \u2502 \u2502 Anatomie \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this example we pre-pend the right side of the csv_file= argument with alias: . This is necessary to make it clear to kiara that we mean a dataset that lives in its data store, and we want to refer to it via its alias. Otherwise, kiara would have just interpreted the input as a string, and since that is of the wrong input type (we needed a table), it would have thrown an error. That output looks good, right? Much more table-y then before. Only thing is: we want to again 'save' this output, so we can use it later directly. No big deal, just like last time: kiara run --output silent --save table=journal_nodes_table create.table.from.csv_file csv_file=alias:journal_nodes_file Note Here we use the --output silent command line option to surpress any output of values. We've seen this already in the last invocation of this command. kiara will still tell us the id of the value it just saved.","title":"Creating a table from an imported csv file"},{"location":"usage/getting_started/#checking-the-data-store-again","text":"Now, let's look again at the content of the kiara data store: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 journal_nodes_table table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, there are 2 items now: one file , and one table . If you ever want to get more details about any of the items in the data store, you can use one of those commands:","title":"Checking the data store, again"},{"location":"usage/getting_started/#kiara-data-explain","text":"kiara data explain alias:journal_nodes_table \u256d\u2500 Value details for: alias:journal_nodes_table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 5f83b3bb-2046-4695-91dc-047937ec1878 \u2502 \u2502 aliases journal_nodes_table \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"6c94b0ba-4d67-423f-9f28-08c5539abc1f\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"d2d5138a-3fc3-4874-8f74-7ca1a85b0257\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAn89Et1ENzfoASJRYcWEceyfRiPg664mN4nnHLFnjRLyg \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The result value. \u2502 \u2502 \u2502 \u2502 value_size 42.79 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This command prints out the metadata kiara has stored about a value item. This commands supports displaying several internally important metadata details of stored datasets, check out the available options with kiara data explain --help . One option that is particularly interesting is the -p one, which displays all the metadata properties kiara has collected about a value. One thing that is noteworthy here is the load_config section in the metadata. When saving the value, kiara automatically generated this configuration, and it can be used later to load and use the exact same table file, in another workflow.","title":"kiara data explain"},{"location":"usage/getting_started/#kiara-data-load","text":"kiara data load -s alias:journal_nodes_table Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German 296 Die deutsche Klinik am Eingange des general medicine Berlin German Empire Germany 52.52 13.405 German zwanzigsten Jahrhunderts 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German Pathologie 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin specialized: anthropology, criminology and Berlin German Empire Germany 52.52 13.405 German und \u00f6ffentliches Sanit\u00e4tswesen forensics 47 Centralblatt f\u00fcr Nervenheilkunde und specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German Psychiatrie 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German forensics 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German 206 Ergebnisse der Allgemeinen Pathologie und specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German Pathologischen Anatomie Note If you omit the -s flag, this command will let you browse the table (or any other supported data type) interactively, similar to a pager application. This command loads the actual data, and prints out its content (or a representation of it that makes sense in a terminal-context).","title":"kiara data load"},{"location":"usage/getting_started/#querying-the-table-data","text":"This section is a bit more advanced, so you can skip it if you want. It's just to show an example of what can be done with a stored table data item. We'll be using the sql query language to find the names and types of all journals from Berlin. The query for this is: select Label , JournalType from data where City = 'Berlin' The kiara module we are going to use is called query.table . Let's check again the parameters this module expects: kiara run query.table \u256d\u2500 Run info: query.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: query.table \u2502 \u2502 \u2502 \u2502 Execute a sql query against an (Arrow) table. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query not set string The query. yes \u2502 \u2502 relation_name valid string The name the no data \u2502 \u2502 table is \u2502 \u2502 referred to in \u2502 \u2502 the sql query. \u2502 \u2502 table not set table The table to yes \u2502 \u2502 query \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table The query result. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Aha. table , and query are required. Good, we have both. In this example we'll use the data item we've stored as input for another workflow. That goes like this: kiara run query.table table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table \u2502 \u2502 Label JournalType \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 Die Krankenpflege specialized: \u2502 \u2502 therapy \u2502 \u2502 Die deutsche Klinik general medicine \u2502 \u2502 am Eingange des \u2502 \u2502 zwanzigsten \u2502 \u2502 Jahrhunderts \u2502 \u2502 Therapeutische specialized: \u2502 \u2502 Monatshefte therapy \u2502 \u2502 Allgemeine specialized: \u2502 \u2502 Zeitschrift f\u00fcr psychiatry and \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 Archiv f\u00fcr specialized: \u2502 \u2502 Psychiatrie und psychiatry and \u2502 \u2502 Nervenkrankheiten neurology \u2502 \u2502 Berliner klinische general medicine \u2502 \u2502 Wochenschrift \u2502 \u2502 Charit\u00e9 Annalen general medicine \u2502 \u2502 Monatsschrift f\u00fcr specialized: \u2502 \u2502 Psychiatrie und psychiatry and \u2502 \u2502 Neurologie neurology \u2502 \u2502 Virchows Archiv specialized: \u2502 \u2502 anatomy, physiology \u2502 \u2502 and pathology \u2502 \u2502 Zeitschrift f\u00fcr specialized: \u2502 \u2502 p\u00e4dagogische psychology and \u2502 \u2502 Psychologie und pedagogy \u2502 \u2502 Pathologie \u2502 \u2502 Vierteljahrsschrift specialized: \u2502 \u2502 f\u00fcr gerichtliche anthropology, \u2502 \u2502 Medizin und criminology and \u2502 \u2502 \u00f6ffentliches forensics \u2502 \u2502 Sanit\u00e4tswesen \u2502 \u2502 Centralblatt f\u00fcr specialized: \u2502 \u2502 Nervenheilkunde und psychiatry and \u2502 \u2502 Psychiatrie neurology \u2502 \u2502 Russische general medicine \u2502 \u2502 medicinische \u2502 \u2502 Rundschau \u2502 \u2502 Deutsche general medicine \u2502 \u2502 Aerzte-Zeitung \u2502 \u2502 Monatsschrift f\u00fcr specialized: \u2502 \u2502 Geburtsh\u00fclfe und gynecology \u2502 \u2502 Gyn\u00e4kologie \u2502 \u2502 Archiv f\u00fcr specialized: \u2502 \u2502 klinische Chirurgie surgery \u2502 \u2502 Zeitschrift f\u00fcr general medicine \u2502 \u2502 klinische Medicin \u2502 \u2502 Deutsche specialized: \u2502 \u2502 milit\u00e4r\u00e4rztliche military medicine \u2502 \u2502 Zeitschrift \u2502 \u2502 Jahresbericht \u00fcber specialized: \u2502 \u2502 die Leistungen und psychiatry and \u2502 \u2502 Fortschritte auf neurology \u2502 \u2502 dem Gebiete der \u2502 \u2502 Neurologi ... \u2502 \u2502 \u00c4rztliche general medicine \u2502 \u2502 Sachverst\u00e4ndigen-Z\u2026 \u2502 \u2502 Zeitschrift f\u00fcr die specialized: \u2502 \u2502 Behandlung psychiatry and \u2502 \u2502 Schwachsinniger und neurology \u2502 \u2502 Epileptischer \u2502 \u2502 Der Pfarrbote news media \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note how we use the alias: -prefix again here, to signify to kiara that what follows is indeed a reference to a dataset, and not a string...","title":"Querying the table data"},{"location":"usage/getting_started/#saving-the-result-of-the-query","text":"As it is, the result of this query won't be saved anywhere. This might be fine for queries in exploratory-type situations. But in some cases we might want to store the result of our work, similar to how we imported the original table in the first place. The kiara run command can do that, using the --save flag. It takes as argument a string. If that string contains a '=', it is interpreted as a key value pair where the key is the name of the field we want to save, and the value the alias we want to save it under. Here is how that goes: kiara run query.table --output=silent --save query_result=berlin_journals table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" Here we've also used the --output=silent option, since we've seen that result before. From looking at the output, it seems that saving our result has worked. We can make sure by letting kiara 'explain' to us the data that is stored under the alias 'berlin_journals': kiara data explain --properties alias:berlin_journals \u256d\u2500 Value details for: alias:berlin_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 2f13241d-72f3-452b-ba20-cde561e9242b \u2502 \u2502 aliases berlin_journals \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.data_\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"9352d8e8-ab86-46b4-b8ac-9dcb39a8d0b5\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"e81d227b-0479-4371-8bb9-8d58b6edafc4\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAq5Ty5hNtUaKWouPmS75LxteiQQv6Ue6Jsq9v39QoMPyw \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The query result. \u2502 \u2502 \u2502 \u2502 value_size 2.63 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1666 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Saving the result of the query"},{"location":"usage/getting_started/#generating-a-network-graph","text":"Our goal for this tutorial is to create a network graph, and investigate its properties. Network graphs are usually created from one or two pieces of data (both tabular in nature: edges (mandataor): information about what nodes exist, and if and how they are connected nodes information (optional): information about attributes of each node Note In this tutorial we'll go through all the steps necessary to create a network graph object from two csv files, one by one. This is a bit cumbersome, but it'll help you understand what actually happens. In a later tutorial we'll show how to create a kiara pipeline to combine all those steps into one.","title":"Generating a network graph"},{"location":"usage/getting_started/#importing-edges-data-creating-a-table-item-from-it","text":"We already have our nodes imported into kiara (with the alias my_first_table ). Now we need to do the same for our edges. Simliar to what we have done above, we want to import the file into the kiara data store, and then convert it into a table. This time, let's just use a pre-pared (so-called) pipeline operation, which basically runs both operations in one, and feeds the right input(s) into the right input(s): kiara operation explain import.table.from.csv_file \u256d\u2500 Operation: import.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Load a table from a csv file. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path string The yes -- no \u2502 \u2502 local default \u2502 \u2502 path to -- \u2502 \u2502 the \u2502 \u2502 file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file The loaded files. \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, let's see: kiara run --save journal_edges import.table.from.csv_file path=examples/data/journals/JournalEdges1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffSource,Target,weight \u2502 \u2502 1,1,11 \u2502 \u2502 1,5,1 \u2502 \u2502 1,7,6 \u2502 \u2502 1,8,15 \u2502 \u2502 1,10,24 \u2502 \u2502 1,13,1 \u2502 \u2502 1,14,2 \u2502 \u2502 1,15,8 \u2502 \u2502 1,18,7 \u2502 \u2502 1,20,48 \u2502 \u2502 1,21,7 \u2502 \u2502 1,22,4 \u2502 \u2502 1,23,75 \u2502 \u2502 1,24,1 \u2502 \u2502 1,26,8 \u2502 \u2502 1,29,1 \u2502 \u2502 1,30,14 \u2502 \u2502 1,35,16 \u2502 \u2502 1,36,23 \u2502 \u2502 1,37,4 \u2502 \u2502 1,38,5 \u2502 \u2502 1,39,4 \u2502 \u2502 1,40,10 \u2502 \u2502 1,41,2 \u2502 \u2502 1,42,4 \u2502 \u2502 1,43,2 \u2502 \u2502 1,44,1 \u2502 \u2502 1,45,5 \u2502 \u2502 1,46,7 \u2502 \u2502 1,47,2 \u2502 \u2502 1,56,1 \u2502 \u2502 1,58,34 \u2502 \u2502 1,61,9 \u2502 \u2502 1,63,12 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Source Target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result values \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file efbf1919-4068-4a6d-9\u2026 journal_edges.impor\u2026 \u2502 \u2502 table table baf0f848-fb77-413d-a\u2026 journal_edges.table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we've used a simple string (without '=') with the --save option, and as you can see, kiara created two namespaced aliases for the result items. At this stage we'll have two relevant tables in our store: journal_edges.table , and journal_nodes_table : kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file \u2502 \u2502 journal_nodes_table table \u2502 \u2502 berlin_journals table \u2502 \u2502 journal_edges.imported_file file \u2502 \u2502 journal_edges.table table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Importing edges data, creating a table item from it"},{"location":"usage/getting_started/#creating-the-graph","text":"Now that we have the edges data in kiara in a useful format, we can create the graph object. The data type for graphs in kiara is called network_data , so let's check out all the operations kiara has to offer related to network_data : kiara operation list network_data \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Hm, create.network_data.from.tables looks good, right? Let's see that operations interface: kiara operation explain create.network_data.from.tables \u256d\u2500 Operation: create.network_data.from.tables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 edges table A table that contains the edges yes -- no default -- \u2502 \u2502 data. \u2502 \u2502 source_column_name string The name of the source column no source \u2502 \u2502 name in the edges table. \u2502 \u2502 target_column_name string The name of the target column no target \u2502 \u2502 name in the edges table. \u2502 \u2502 edges_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 nodes table A table that contains the nodes no -- no default -- \u2502 \u2502 data. \u2502 \u2502 id_column_name string The name (before any potential no id \u2502 \u2502 column mapping) of the \u2502 \u2502 node-table column that contains \u2502 \u2502 the node identifier (used in the \u2502 \u2502 edges table). \u2502 \u2502 label_column_name string The name of a column that no -- no default -- \u2502 \u2502 contains the node label (before \u2502 \u2502 any potential column name \u2502 \u2502 mapping). If not specified, the \u2502 \u2502 value of the id value will be \u2502 \u2502 used as label. \u2502 \u2502 nodes_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data The network/graph data. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From this information we can assemble our command, using alias:edges_table as the main input, and saving it using the alias journals_graph . We can figure the values for the other inputs out be running kiara data explain --properties journal_edges.table , which will give us the edge column names, among other things (and, subsequently, `kiara data explain --properties journal_nodes_table. So, here goes nothing: kiara run --save network_data=journals_graph create.network_data.from.tables edges=alias:journal_edges.table source_column_name=Source target_column_name=Target nodes=alias:journal_nodes_table id_column_name=Id label_column_name=Label \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data \u2502 \u2502 Table: edges \u2502 \u2502 \u2502 \u2502 source target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 Table: nodes \u2502 \u2502 \u2502 \u2502 id label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Jahrhunderts \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 Pathologie \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen forensics \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 forensics \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 Pathologischen Anatomie \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 journals_graph \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To confirm our graph data is created, let's check the data store: kiara data explain --properties alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 \u2502 \u2502 aliases journals_graph \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analysis.data_types \u2502 \u2502 full_name kiara_plugin.network_analysis.data_types.NetworkDataType \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \"412aa529-f182-4a4b-9ced-edbaa955f03b\", \u2502 \u2502 \"metadata.graph_properties\": \"fb9f1abc-586e-4c2f-b7ef-8c5b2bab0d98\", \u2502 \u2502 \"metadata.python_class\": \"c3822dc8-5e92-4c9a-9654-d28e0365926d\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAvzKSkXr3q9X66LTA8G5TT56jsT5SaMwFRATECSd7XtPb \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All good. Also, check out the meteadata kiara knows about the graph already.","title":"Creating the graph"},{"location":"usage/getting_started/#side-note-investigating-the-graph-value-lineage","text":"kiara keeps track of all the modules and inputs that went into producing a value, basically its entire ancestry. This is not the place to explain why, and how that can be very power- and use-full. But if you are ever interested about what went into creating a particular value, you can do this with: kiara data explain --lineage alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id d3e77cf7-3034-4311-8e8d-8e260bc3b0b1 \u2502 \u2502 aliases journals_graph \u2502 \u2502 kiara_id f41eb75a-50fa-426c-9112-5914b54f79d9 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analy\u2026 \u2502 \u2502 full_name kiara_plugin.network_analy\u2026 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 destiny_links {} \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \u2502 \u2502 \"412aa529-f182-4a4b-9ced-edbaa955f03b\", \u2502 \u2502 \"metadata.graph_properties\": \u2502 \u2502 \"fb9f1abc-586e-4c2f-b7ef-8c5b2bab0d98\", \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"c3822dc8-5e92-4c9a-9654-d28e0365926d\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAvzKSkXr3q9X66LTA8G5TT56jsT5SaMwFRATECSd7XtPb \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) = \u2502 \u2502 \u2502 baf0f848-fb77-413d-a009-85365c44e8b3 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 efbf1919-4068-4a6d-969d-7a3c3cfac571 \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 f7c8c234-17f9-4edf-99cc-c72c08b\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (none) = \u2502 \u2502 \u2502 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) = \u2502 \u2502 \u2502 73153121-0072-466c-b39f-14e44d1941a5 \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) = \u2502 \u2502 \u2502 4b5f26b0-6c2b-4bee-adf9-3a0802b7f74c \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) = \u2502 \u2502 \u2502 5f83b3bb-2046-4695-91dc-047937ec1878 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 80f5aee4-aa44-4831-a597-c88f794bbc8d \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 1f71ddd4-ec59-468d-8e18-83003aa\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (none) = \u2502 \u2502 \u2502 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) = \u2502 \u2502 \u2502 536db02a-07b4-44a1-a1f2-65ecb5f60e87 \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) = \u2502 \u2502 e11f4610-cf45-455c-a168-1943a962dad0 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, this basically describes what we've done so far, to get to this stage. You could now do a kiara explain data value:<value_id> on each of the value ids you see here, if you were so inclined.","title":"Side-note: investigating the graph value lineage"},{"location":"usage/getting_started/#more","text":"... to come ...","title":"More"}]}