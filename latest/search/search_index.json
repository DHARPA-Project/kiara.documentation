{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kiara plugin: documentation \u00b6 This package contains a set of commonly used/useful modules, pipelines, types and metadata schemas for Kiara . Description \u00b6 Kiara user documentation. Package content \u00b6 module_types \u00b6 my_kiara_module.example : A very simple example module; concatenate two strings. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module : -- n/a -- filter.table : Filter a table. filter.table_2 : Filter a table. filter.table_3 : Filter a table. filter.table_4 : Filter a table. filter.table_5 : Filter a table. operations \u00b6 filter.table : Filter a table. filter.table_2 : Filter a table. filter.table_3 : Filter a table. filter.table_4 : Filter a table. filter.table_5 : Filter a table. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module : -- n/a -- my_kiara_module.example : A very simple example module; concatenate two strings. Links \u00b6 Documentation: https://DHARPA-Project.github.io/kiara.documentation Code: https://github.com/DHARPA-Project/kiara.documentation","title":"Home"},{"location":"#kiara-plugin-documentation","text":"This package contains a set of commonly used/useful modules, pipelines, types and metadata schemas for Kiara .","title":"kiara plugin: documentation"},{"location":"#description","text":"Kiara user documentation.","title":"Description"},{"location":"#package-content","text":"","title":"Package content"},{"location":"#module_types","text":"my_kiara_module.example : A very simple example module; concatenate two strings. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module : -- n/a -- filter.table : Filter a table. filter.table_2 : Filter a table. filter.table_3 : Filter a table. filter.table_4 : Filter a table. filter.table_5 : Filter a table.","title":"module_types"},{"location":"#operations","text":"filter.table : Filter a table. filter.table_2 : Filter a table. filter.table_3 : Filter a table. filter.table_4 : Filter a table. filter.table_5 : Filter a table. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module : -- n/a -- my_kiara_module.example : A very simple example module; concatenate two strings.","title":"operations"},{"location":"#links","text":"Documentation: https://DHARPA-Project.github.io/kiara.documentation Code: https://github.com/DHARPA-Project/kiara.documentation","title":"Links"},{"location":"SUMMARY/","text":"Home Usage Extending kiara Workflows","title":"SUMMARY"},{"location":"extending_kiara/","text":"Overview \u00b6 kiara can be extended in different ways, most importantly by writing new modules that transform data in some defined way, and which can be used in composable kiara workflows. This page lists the different ways to extend kiara , and links to pages that contain more information. Creating kiara modules and pipelines: Part I - the basics : the minimum amount of things you need to know to create your own module Part II - assembling_pipelines : how to assemble multiple kiara modules into a pipeline Part III - more basics : not written yet Creating custom data types: the basics : not written yet other stuff also not written yet","title":"Overview"},{"location":"extending_kiara/#overview","text":"kiara can be extended in different ways, most importantly by writing new modules that transform data in some defined way, and which can be used in composable kiara workflows. This page lists the different ways to extend kiara , and links to pages that contain more information. Creating kiara modules and pipelines: Part I - the basics : the minimum amount of things you need to know to create your own module Part II - assembling_pipelines : how to assemble multiple kiara modules into a pipeline Part III - more basics : not written yet Creating custom data types: the basics : not written yet other stuff also not written yet","title":"Overview"},{"location":"extending_kiara/SUMMARY/","text":"Creating modules Pipelines","title":"SUMMARY"},{"location":"extending_kiara/advanced/","text":"Advanced topics \u00b6","title":"Advanced topics"},{"location":"extending_kiara/advanced/#advanced-topics","text":"","title":"Advanced topics"},{"location":"extending_kiara/advanced/module_discovery/","text":"kiara module and pipeline discovery \u00b6 Because we have a requirement to record the versions of code a data set was created with, we need to have a way of versioning our modules and pipelines. This is a harder problem than it looks from the outside, and it's the reason why kiara does not support 'random', unregistered KiaraModule sub-classes. There are a few ways to register plugin classes like those in Python, the most common one is to use Python entrypoints . I have decided to also use that, but with a slight twist, to make it easier for people who are not familiar with the Python Packaging ecosystem/dumpster-fire to create their own modules and pipelines. Registering core modules \u00b6 To register a core module, kiara checks the entries for the kiara.modules entrypoint in the current Python environment. As a developer, you have two options to add your module: Register the KiaraModule subclass directly \u00b6 This is the most straight-forward way to accomplish this, and in line how entrypoints are usually used. You just use the name the module should be registered under as entry point key, and the path to the class as value, ala: [options.entry_points] kiara.modules = metadata.extract_python_class = kiara.modules.metadata:ExtractPythonClass Register a variable that contains module information \u00b6 This is a bit more involved, but ultimately easier to use for end-users, since it can be setup in advance, and it will discover KiaraModule subclasses dynamically, without users even knowing. Instead of specifying a subclass of KiaraModule , you point the endpoint to a variable somewhere in your package, like this: [options.entry_points] kiara.modules = playground = kiara_modules.playground:modules The variable can contain 3 types of values: the class object for the KiaraModule subclass (but if you do that, you might as well just use the subclass directly) a callable tuple with up to three items (in that order): a callable a list of non-keyword arguments ( *args ) for the callable a map of keyword arguments ( **kwargs ) for the callable In case of callables, those will be called (with arguments, if provided). The callable must returns a dictionary with the type name of a module as key, and the KiaraModule subclass as a value. The full kiara type name will be assembled by using the entry point name as prefix, and the module type name (the key in the resulting dict): [entry_point_name].[result_key] . This sounds more complicated than it is, because you can just use the find_kiara_modules_under helper method, like: from kiara import find_kiara_modules_under modules = ( find_kiara_modules_under , [ \"kiara_modules.playground\" ]) In this example, kiara will recursively walk the kiara_modules.playground Python module and its children, and register every (non-abstract) KiaraModule class it finds (using the module namespace to asssemble the final namespaced module type name). Registering pipeline modules \u00b6 As is documented elsewhere , kiara pipelines are just Python dictionaries that follow a certain schema . In practice, they are json or yaml files living in folders that are registered with kiara . Similar to the way modules are registered, kiara looks for pipelines via an entrypoint: kiara.pipelines . Because normal resource files or folders can't be registered in Python as an entrypoint, we need to work around that and use the module that contains a folder containing pipelines as the value of the entrypoint: Something like: [options.entry_points] kiara.modules = playground = kiara_modules:playground Depending on how the package is set up, this might or might not work (the reason being 'namespaced packages', if you must know). It's safer to point the entrypoint to a variable within the module, similar to the modules registration explained above: [options.entry_points] kiara.modules = playground = kiara_modules.playground:pipelines As above, the value can have 3 types: the Python module in question a callable tuple with up to three items (in that order): a callable a list of non-keyword arguments ( *args ) for the callable a map of keyword arguments ( **kwargs ) for the callable In case of callables, those are supposed to return a list of strings, representing the Python modules to search for pipeline files. Pipeline files are supposed to be under a folder called pipelines living in the module that was specified. Pipeline names are assembled from the entry point name, the (optional) intermediate folders, and the pipeline name. Again, kiara provides a helper function so you don't have to worry about setting all this up: from kiara import find_pipeline_base_path_for_module pipelines = ( find_pipeline_base_path_for_module , [ \"kiara_modules.language_processing\" ]) That's that.","title":"Module and pipeline discovery"},{"location":"extending_kiara/advanced/module_discovery/#kiara-module-and-pipeline-discovery","text":"Because we have a requirement to record the versions of code a data set was created with, we need to have a way of versioning our modules and pipelines. This is a harder problem than it looks from the outside, and it's the reason why kiara does not support 'random', unregistered KiaraModule sub-classes. There are a few ways to register plugin classes like those in Python, the most common one is to use Python entrypoints . I have decided to also use that, but with a slight twist, to make it easier for people who are not familiar with the Python Packaging ecosystem/dumpster-fire to create their own modules and pipelines.","title":"kiara module and pipeline discovery"},{"location":"extending_kiara/advanced/module_discovery/#registering-core-modules","text":"To register a core module, kiara checks the entries for the kiara.modules entrypoint in the current Python environment. As a developer, you have two options to add your module:","title":"Registering core modules"},{"location":"extending_kiara/advanced/module_discovery/#register-the-kiaramodule-subclass-directly","text":"This is the most straight-forward way to accomplish this, and in line how entrypoints are usually used. You just use the name the module should be registered under as entry point key, and the path to the class as value, ala: [options.entry_points] kiara.modules = metadata.extract_python_class = kiara.modules.metadata:ExtractPythonClass","title":"Register the KiaraModule subclass directly"},{"location":"extending_kiara/advanced/module_discovery/#register-a-variable-that-contains-module-information","text":"This is a bit more involved, but ultimately easier to use for end-users, since it can be setup in advance, and it will discover KiaraModule subclasses dynamically, without users even knowing. Instead of specifying a subclass of KiaraModule , you point the endpoint to a variable somewhere in your package, like this: [options.entry_points] kiara.modules = playground = kiara_modules.playground:modules The variable can contain 3 types of values: the class object for the KiaraModule subclass (but if you do that, you might as well just use the subclass directly) a callable tuple with up to three items (in that order): a callable a list of non-keyword arguments ( *args ) for the callable a map of keyword arguments ( **kwargs ) for the callable In case of callables, those will be called (with arguments, if provided). The callable must returns a dictionary with the type name of a module as key, and the KiaraModule subclass as a value. The full kiara type name will be assembled by using the entry point name as prefix, and the module type name (the key in the resulting dict): [entry_point_name].[result_key] . This sounds more complicated than it is, because you can just use the find_kiara_modules_under helper method, like: from kiara import find_kiara_modules_under modules = ( find_kiara_modules_under , [ \"kiara_modules.playground\" ]) In this example, kiara will recursively walk the kiara_modules.playground Python module and its children, and register every (non-abstract) KiaraModule class it finds (using the module namespace to asssemble the final namespaced module type name).","title":"Register a variable that contains module information"},{"location":"extending_kiara/advanced/module_discovery/#registering-pipeline-modules","text":"As is documented elsewhere , kiara pipelines are just Python dictionaries that follow a certain schema . In practice, they are json or yaml files living in folders that are registered with kiara . Similar to the way modules are registered, kiara looks for pipelines via an entrypoint: kiara.pipelines . Because normal resource files or folders can't be registered in Python as an entrypoint, we need to work around that and use the module that contains a folder containing pipelines as the value of the entrypoint: Something like: [options.entry_points] kiara.modules = playground = kiara_modules:playground Depending on how the package is set up, this might or might not work (the reason being 'namespaced packages', if you must know). It's safer to point the entrypoint to a variable within the module, similar to the modules registration explained above: [options.entry_points] kiara.modules = playground = kiara_modules.playground:pipelines As above, the value can have 3 types: the Python module in question a callable tuple with up to three items (in that order): a callable a list of non-keyword arguments ( *args ) for the callable a map of keyword arguments ( **kwargs ) for the callable In case of callables, those are supposed to return a list of strings, representing the Python modules to search for pipeline files. Pipeline files are supposed to be under a folder called pipelines living in the module that was specified. Pipeline names are assembled from the entry point name, the (optional) intermediate folders, and the pipeline name. Again, kiara provides a helper function so you don't have to worry about setting all this up: from kiara import find_pipeline_base_path_for_module pipelines = ( find_pipeline_base_path_for_module , [ \"kiara_modules.language_processing\" ]) That's that.","title":"Registering pipeline modules"},{"location":"extending_kiara/creating_modules/the_basics/","tags":["tutorial"],"text":"Writing your own kiara module - the basics \u00b6 Preparation \u00b6 Check out the ' kiara getting started guide' \u00b6 If you haven't already, it would make sense for you to go through the kiara getting started guide . This will give you a good overview of the relevant kiara features, and how the module(s) you are going to write fits in. Setting up development environment \u00b6 To get going, we need a Python virtual environment in which to develop. We'll be using conda for that here, but this will work for normal virtual environments as well. As a first step, install conda (if you haven't already). Then: conda create -n my_kiara_module python=3.9 conda activate my_kiara_module conda install -c conda-forge mamba # this is optional, but makes everything install related much faster, if you don't use it, replace 'mamba' with 'conda' below mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular Note For Linux, if you experience errors, you might or might not have to also execute: mamba update -c conda-forge libstdcxx-ng . After this, the kiara command-line application should be available to you, you can test whether that works, for example via kiara operation list . Creating a kiara plugin project \u00b6 For this tutorial, we'll use a project template to create a bare-bones kiara plugin project, which we will augment with our own module(s). First we need to install the cruft conda package, which we will use to create our project stub: mamba install -c conda-forge cruft Now, we run cruft against our template git repo, feel free to change any of the answers to the questions you'll be asked: cruft create https://github.com/DHARPA-Project/kiara_plugin.develop.git full_name []: Markus Binsteiner email []: markus@frkl.io project_name [my-kiara-plugin]: my-kiara-module project_slug [my_kiara_module]: my_kiara_module project_short_description [my-kiara-module]: A kiara plugin project for learning to create kiara modules. github_user [DHARPA-Project]: anaconda_user [dharpa]: This should have created a new folder, named kiara_plugin.my_kiara_module . Next, we initialize and install the new plugin Python project into our conda environment: cd kiara_plugin.my_kiara_module git init git checkout -b develop pip install -e . Note TODO: explain what happened here? Once this is done, you should see a new operation called my_kiara_module.example : kiara operation list example \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 my_kiara_module.example A very simple example module; concatenate two strings. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note The example string token at the end of the above command filters the output to operations that match the token. This module comes as example code with the project template, and is located in the modules/__init__.py Python file. It only serves as an example and blueprint for your own modules, and you can delete the module class within the file if you wish. Pre-loading a table dataset \u00b6 In our tutorial we'll create a module to filter a table. In order to do this we'll need to pre-seed our kiara data store with a tabular dataset. Here is the command to run (with the project root as our working directory): kiara run --save table=journal_nodes_table import.table.from.csv_file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffId,Label,JournalType,City,CountryNetworkTime,PresentDayCountry,Latitude,Longitude,Language \u2502 \u2502 75,Psychiatrische en neurologische bladen,specialized: psychiatry and neurology,Amsterdam,Netherlands,Netherlands,52.366667,4.9,Dutch \u2502 \u2502 36,The American Journal of Insanity,specialized: psychiatry and neurology,Baltimore,United States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: psychology,Baltimore,United States,United States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: therapy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten Jahrhunderts,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: therapy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und Nervenkrankheiten,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und Neurologie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology and pathology\",Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pathologie,specialized: psychology and pedagogy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: anthropology, criminology and forensics\",Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und Gyn\u00e4kologie,specialized: gynecology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: surgery,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche Zeitschrift,specialized: military medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und Fortschritte auf dem Gebiete der Neurologie und Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger und Epileptischer,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general medicine,Bern,Switzerland,Switzerland,46.948056,7.4475,German \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: anatomy, physiology and pathology\",Bonn,German Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: psychology,Boston,United States,United States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft f\u00fcr Anthropologie, Ethnologie und Urgeschichte\",\"specialized: anthropology, criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de Neurologie,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de physiologie, de m\u00e9decine, de chirurgie, d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de Belgique,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pat specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and forens Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and forens Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und Pathol specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table d04ec873-ff21-49f0-b933-e4978bc9ac01 journal_nodes_table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This should have created an item with alias journal_nodes_table in the kiara data store, which you can confirm with kiara data list . Writing the kiara module \u00b6 Ok, let's get started and create a kiara module that filters a table, using different filter criteria. Module skeleton \u00b6 In most cases you'd delete the example module mentioned above, and create your module in the Python file where the example module was, or in a new Python file in the \"modules\" folder. For the purpose of this tutorial, we can just leave the example module in place, because it can serve as a quick reference for our own module. Use the editor of your choice, and paste the following text below the existing code into modules/__init__.py : from kiara import KiaraModule class TutorialModule ( KiaraModule ): def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" } } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" } } def process ( self , inputs , outputs ) -> None : pass This module skeleton describes a kiara module that takes a dataset of type table as input (using table_input as input field name), and produces another table dataset as output (accordingly, using table_output as output field name). For your own modules, you'd probably use the field name table for both input and outputs, but in this tutorial we'll use the longer forms, to avoid any confusion. On the next kiara run, the new module should be picked up by the operation list command: kiara operation list tutorial_module \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f The id of the module was autogenerated from the full Python path of its class: kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module . Module id and description \u00b6 In most cases, we don't want such a long and unwieldy module name. We can assign our own, custom and meaningful id by setting the _module_type_name class attribute. In addition, we will want to add some documentation about the module and its functionality that is displayed to the user. For this, we use a normal Python doc string on the Python class body. For the purpose of this tutorial, we'll only add a single sentence, but in most cases you'll want to have a multi-paragraph markdown text here. So, taking all that into account, edit the module code to include: ... ... class TutorialModule ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { ... ... The output for our new module in the operation list is much prettier now: kiara operation list filter \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter.table Filter a table. \u2502 \u2502 string_filter.tokens filter -- n/a -- \u2502 \u2502 table_filter.drop_columns filter -- n/a -- \u2502 \u2502 table_filter.select_columns filter -- n/a -- \u2502 \u2502 table_filter.select_rows filter -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f We can also let kiara tell us about what it knows about the operation itself: kiara operation explain filter.table \u256d\u2500 Operation: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_input table -- n/a -- yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table -- n/a -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Input/output field documentation \u00b6 As you can see in the explain output above, the information to the user is still a bit sparse. In most cases, we'll want to have some information about the input(s) the user is supposed to provide. Same for what the outputs actually mean. In both cases, we can add a doc attribute to each input and output field. ... ... def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" } } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" } } ... ... Run the explain command again, to check what kiara thinks of our module now: kiara operation explain filter.table \u256d\u2500 Operation: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_input table The table to filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Processing the inputs \u00b6 Specifying the inputs (and outputs) is an important part of designing your module, it's basically the module's 'public API', and you want to avoid changing it (too much; or at all) as your module evolves over time. But of course, the actual processing is where the interesting stuff happens. In kiara , that is the process method of every module. The arguments to this method are called inputs and outputs , which are basically dicts that use the field names specified in the create_inputs_schema / create_outputs_schema as keys, and Python objects of class Value as values. One thing to understand is that a Value object is not the same as the actual data. Instead, it's a reference to it (a means to retrieve it), and it also contains metadata about its provenance (pedigree/lineage) and other properties. This is the signature of the process method, including type hints (which we will omit after this): from kiara.models.values.value import ValueMap , ValueMapWritable def process ( inputs : ValueMap , outputs : ValueMapWritable ): ... ... The inputs and outputs arguments to the process method are of type ValueMap ; the two main methods to access input data are: inputs.get_value_obj([field_name]) : retrieve the (wrapper) Value object for a field inputs.get_value_data([field_name]) : retrieve the data object for a field In addition, you can retrieve the data object via the value wrapper: value = inputs . get_value_obj ( \"field_name\" ) data = value . data The class/type of the data depends on the data type of the value, so you'll have to consult the documentation about what to expect. TODO: expand on this, with a bit of example code/cli commands The important methods to set an output is: outputs.set_value(field_name, result_data) : set a single output field outputs.set_values(field_name_1=result_data_1, field_name_2=result_data_2, ...) : set multiple result values at once All that out of the way, let's get started implementing our table filter. We'll do it in stages, so hopefully we can cover all the important aspects in this tutorial in a way that makes intuitive sense. To that end, let's write some code that does ...nothing. Our first iteration of our module will take the input table, and immediately set it as output: def process ( self , inputs , outputs ): table_obj = inputs . get_value_obj ( \"table_input\" ) # some debug output is usually useful while developing. Something like: print ( f \"Filter module, table input: { table_obj } \" ) print ( \"Table data:\" ) print ( table_obj . data ) outputs . set_value ( \"table_output\" , table_obj ) If we run our module in this state, we should see our debug output, as well as the resulting table (which will be the unmodified input): kiara run filter.table table_input=alias:journal_nodes_table Filter module, table input value: Value(id=d04ec873-ff21-49f0-b933-e4978bc9ac01, type=table, status=set, initialized=True optional=False) Table data instance: KiaraTable(model_id=-- n/a --, category=kiara_table, fields=[data_path]) \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalTyp City CountryNe PresentDay Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatri specialize Amsterdam Netherlan Netherland 52.366667 4.9 Dutch \u2502 \u2502 36 The Americ specialize Baltimore United St United Sta 39.289444 -76.61527 English \u2502 \u2502 208 The Americ specialize Baltimore United St United Sta 39.289444 -76.61527 English \u2502 \u2502 295 Die Kranke specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsc general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 300 Therapeuti specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 10 Berliner k general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 An general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschr specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 29 Virchows A specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrif specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljah specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 47 Centralbla specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 50 Russische general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte med general me Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener kli general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener kli general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener med general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener med general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschr general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-t general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisc specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4 specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430 general me Voronezh Russian E Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general me Warsaw Russian E Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Le general me Warsaw Russian E Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfrage specialize Wiesbaden German Em Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse specialize Wiesbaden German Em Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now it's time to drill a bit deeper into our input table, and figure out how to access the information it contains. kiara wraps data that shares some schema/structure into so-called 'data types'. You can access a list of the data types that are available in your current kiara environment with the data-type list sub-command: kiara data-type list \u256d\u2500 Available data types \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 type name type lineage (qualifier) profiles description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 any -- n/a -- -- n/a -- 'Any' type, the parent type for most other types. \u2502 \u2502 \u2502 \u2502 array -- n/a -- -- n/a -- An array, in most cases used as a column within a table. \u2502 \u2502 \u2502 \u2502 boolean -- n/a -- -- n/a -- A boolean. \u2502 \u2502 \u2502 \u2502 bytes -- n/a -- -- n/a -- An array of bytes. \u2502 \u2502 \u2502 \u2502 database -- n/a -- -- n/a -- A database, containing one or several tables. \u2502 \u2502 \u2502 \u2502 date -- n/a -- -- n/a -- A date. \u2502 \u2502 \u2502 \u2502 dict -- n/a -- -- n/a -- A dictionary. \u2502 \u2502 \u2502 \u2502 file -- n/a -- -- n/a -- A file. \u2502 \u2502 \u2502 \u2502 file_bundle -- n/a -- -- n/a -- A bundle of files (like a folder, zip archive, etc.). \u2502 \u2502 \u2502 \u2502 float -- n/a -- -- n/a -- A float. \u2502 \u2502 \u2502 \u2502 integer -- n/a -- -- n/a -- An integer. \u2502 \u2502 \u2502 \u2502 list -- n/a -- -- n/a -- A list. \u2502 \u2502 \u2502 \u2502 network_data -- n/a -- -- n/a -- Data that can be assembled into a graph. \u2502 \u2502 \u2502 \u2502 string -- n/a -- -- n/a -- A string. \u2502 \u2502 \u2502 \u2502 table -- n/a -- -- n/a -- Tabular data (table, spreadsheet, data_frame, what have you). \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To find out more about a specific data type, you can use data-type explain : kiara data-type explain table \u256d\u2500 Data type: table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 type_name table \u2502 \u2502 type_config {} \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage table \u2502 \u2502 any \u2502 \u2502 qualifier profile(s) -- n/a -- \u2502 \u2502 Documentation \u2502 \u2502 Tabular data (table, spreadsheet, data_frame, what have you). \u2502 \u2502 \u2502 \u2502 The table data is organized in sets of columns (arrays of data of the same type), with each column having a \u2502 \u2502 string identifier. \u2502 \u2502 \u2502 \u2502 kiara uses an instance of the [KiaraTable][kiara_plugin.tabular.models.table.KiaraTable] class to manage the \u2502 \u2502 table data, which let's developers access it in different formats (Apache Arrow Table, Pandas dataframe, \u2502 \u2502 Python dict of lists, more to follow...). \u2502 \u2502 \u2502 \u2502 Please consult the API doc of the KiaraTable class for more information about how to access and query the \u2502 \u2502 data: \u2502 \u2502 \u2502 \u2502 \u2022 KiaraTable API doc \u2502 \u2502 \u2502 \u2502 Internally, the data is stored in Apache Feather format -- both in memory and on disk when saved, which \u2502 \u2502 enables some advanced usage to preserve memory and compute overhead. \u2502 \u2502 \u2502 \u2502 Author(s) \u2502 \u2502 Markus Binsteiner markus@frkl.io \u2502 \u2502 \u2502 \u2502 Context \u2502 \u2502 Tags tabular \u2502 \u2502 Labels package: kiara_plugin.tabular \u2502 \u2502 References source_repo: https://github.com/DHARPA-Project/kiara_plugin.tabular \u2502 \u2502 documentation: https://DHARPA-Project.github.io/kiara_plugin.tabular/ \u2502 \u2502 \u2502 \u2502 Python class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_types.table \u2502 \u2502 full_name kiara_plugin.tabular.data_types.table.TableType \u2502 \u2502 \u2502 \u2502 Config class \u2502 \u2502 python_class_name DataTypeConfig \u2502 \u2502 python_module_name kiara.data_types \u2502 \u2502 full_name kiara.data_types.DataTypeConfig \u2502 \u2502 \u2502 \u2502 Value class \u2502 \u2502 python_class_name KiaraTable \u2502 \u2502 python_module_name kiara_plugin.tabular.models.table \u2502 \u2502 full_name kiara_plugin.tabular.models.table.KiaraTable \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Reading this, and following some of the links included. shows us that we can retrieve the table data as a Pandas dataframe using the to_pandas() method. As the documentation states, this loads the whole data into memory, which is something we should try to avoid, but in a lot of cases (esp. if we are dealing with sub-hundreds-of-megabytes-sized data) it's a perfectly acceptable approach. So, let's do this and use our existing knowledge of Pandas, and retrieve a list of column names from the table the user provided, print out that information debug-style, using print: def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Again, let's run and see what's what (this time surpressing the result output we don't need right now, using --output silent ): kiara run --output silent filter.table table_input=alias:journal_nodes_table Filter module, table input value: Value(id=d04ec873-ff21-49f0-b933-e4978bc9ac01, type=table, status=set, initialized=True optional=False) Table data instance: KiaraTable(model_id=-- n/a --, category=kiara_table, fields=[data_path]) Column names: Index(['Id', 'Label', 'JournalType', 'City', 'CountryNetworkTime', 'PresentDayCountry', 'Latitude', 'Longitude', 'Language'], dtype='object') Ok, now we filter. Initially, let's say our module accepts only tables that contain a 'City' column, and returns all rows that have 'Berlin' as a value there: def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ 'City' ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) And again, we run our module using our example dataset, and now we actually get something that is filtered: kiara run filter.table table_input=alias:journal_nodes_table \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitude Language __index_ \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 295 Die Kran speciali Berlin German E Germany 52.52 13.405 German 3 \u2502 \u2502 296 Die deut general Berlin German E Germany 52.52 13.405 German 4 \u2502 \u2502 300 Therapeu speciali Berlin German E Germany 52.52 13.405 German 5 \u2502 \u2502 1 Allgemei speciali Berlin German E Germany 52.52 13.405 German 6 \u2502 \u2502 7 Archiv f speciali Berlin German E Germany 52.52 13.405 German 7 \u2502 \u2502 10 Berliner general Berlin German E Germany 52.52 13.405 German 8 \u2502 \u2502 13 Charit\u00e9 general Berlin German E Germany 52.52 13.405 German 9 \u2502 \u2502 21 Monatssc speciali Berlin German E Germany 52.52 13.405 German 10 \u2502 \u2502 29 Virchows speciali Berlin German E Germany 52.52 13.405 German 11 \u2502 \u2502 31 Zeitschr speciali Berlin German E Germany 52.52 13.405 German 12 \u2502 \u2502 42 Viertelj speciali Berlin German E Germany 52.52 13.405 German 13 \u2502 \u2502 47 Centralb speciali Berlin German E Germany 52.52 13.405 German 14 \u2502 \u2502 50 Russisch general Berlin German E Germany 52.52 13.405 German 15 \u2502 \u2502 76 Deutsche general Berlin German E Germany 52.52 13.405 German 16 \u2502 \u2502 87 Monatssc speciali Berlin German E Germany 52.52 13.405 German 17 \u2502 \u2502 108 Archiv f speciali Berlin German E Germany 52.52 13.405 German 18 \u2502 \u2502 113 Zeitschr general Berlin German E Germany 52.52 13.405 German 19 \u2502 \u2502 159 Deutsche speciali Berlin German E Germany 52.52 13.405 German 20 \u2502 \u2502 162 Jahresbe speciali Berlin German E Germany 52.52 13.405 German 21 \u2502 \u2502 192 \u00c4rztlich general Berlin German E Germany 52.52 13.405 German 22 \u2502 \u2502 198 Zeitschr speciali Berlin German E Germany 52.52 13.405 German 23 \u2502 \u2502 258 Der Pfar news med Berlin German E Germany 52.52 13.405 German 24 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Of course, a module like this is only of very limited value, because the tables it accepts as inputs must contain a column named 'City', and it only filters out a hardcoded string. Ideally, we'd want the user to provide both inputs, along with the table to filter. Let's add those module inputs, and adjust the processing method accordingly: def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" } } def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) In this example, I've used a default value for the column_name input ('City'). This probably doesn't make a whole lot of sense, but it shows how to set defaults for input fields, which in a lot of cases does make sense. We can try to run this command using a missing filter_string argument, which shows off nicely what the kiara command-line interface has to say about something like this: kiara run filter.table table_input=alias:journal_nodes_table \u256d\u2500 Run info: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: filter.table \u2502 \u2502 \u2502 \u2502 Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 column_name valid string The column no City \u2502 \u2502 containing the \u2502 \u2502 element to use \u2502 \u2502 as filter. \u2502 \u2502 filter_string not set string The string to yes \u2502 \u2502 use as filter. \u2502 \u2502 table_input valid table The table to yes \u2502 \u2502 filter. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table The filtered table. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, kiara complains about the missing input, but has used 'City' as default for the missing column_name input, and therefor is ok with the user not providing this. Ok, one more time, let's look for 'Amsterdam': kiara run filter.table table_input=alias:journal_nodes_table filter_string=Amsterdam \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitud Language __index_ \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiat speciali Amsterda Netherla Netherla 52.36666 4.9 Dutch 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This should give you a good basis to work on your own kiara module(s). Stay tuned for part II of this tutorial!","title":"Creating modules"},{"location":"extending_kiara/creating_modules/the_basics/#writing-your-own-kiara-module-the-basics","text":"","title":"Writing your own kiara module - the basics"},{"location":"extending_kiara/creating_modules/the_basics/#preparation","text":"","title":"Preparation"},{"location":"extending_kiara/creating_modules/the_basics/#check-out-the-kiara-getting-started-guide","text":"If you haven't already, it would make sense for you to go through the kiara getting started guide . This will give you a good overview of the relevant kiara features, and how the module(s) you are going to write fits in.","title":"Check out the 'kiara getting started guide'"},{"location":"extending_kiara/creating_modules/the_basics/#setting-up-development-environment","text":"To get going, we need a Python virtual environment in which to develop. We'll be using conda for that here, but this will work for normal virtual environments as well. As a first step, install conda (if you haven't already). Then: conda create -n my_kiara_module python=3.9 conda activate my_kiara_module conda install -c conda-forge mamba # this is optional, but makes everything install related much faster, if you don't use it, replace 'mamba' with 'conda' below mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular Note For Linux, if you experience errors, you might or might not have to also execute: mamba update -c conda-forge libstdcxx-ng . After this, the kiara command-line application should be available to you, you can test whether that works, for example via kiara operation list .","title":"Setting up development environment"},{"location":"extending_kiara/creating_modules/the_basics/#creating-a-kiara-plugin-project","text":"For this tutorial, we'll use a project template to create a bare-bones kiara plugin project, which we will augment with our own module(s). First we need to install the cruft conda package, which we will use to create our project stub: mamba install -c conda-forge cruft Now, we run cruft against our template git repo, feel free to change any of the answers to the questions you'll be asked: cruft create https://github.com/DHARPA-Project/kiara_plugin.develop.git full_name []: Markus Binsteiner email []: markus@frkl.io project_name [my-kiara-plugin]: my-kiara-module project_slug [my_kiara_module]: my_kiara_module project_short_description [my-kiara-module]: A kiara plugin project for learning to create kiara modules. github_user [DHARPA-Project]: anaconda_user [dharpa]: This should have created a new folder, named kiara_plugin.my_kiara_module . Next, we initialize and install the new plugin Python project into our conda environment: cd kiara_plugin.my_kiara_module git init git checkout -b develop pip install -e . Note TODO: explain what happened here? Once this is done, you should see a new operation called my_kiara_module.example : kiara operation list example \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 my_kiara_module.example A very simple example module; concatenate two strings. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note The example string token at the end of the above command filters the output to operations that match the token. This module comes as example code with the project template, and is located in the modules/__init__.py Python file. It only serves as an example and blueprint for your own modules, and you can delete the module class within the file if you wish.","title":"Creating a kiara plugin project"},{"location":"extending_kiara/creating_modules/the_basics/#pre-loading-a-table-dataset","text":"In our tutorial we'll create a module to filter a table. In order to do this we'll need to pre-seed our kiara data store with a tabular dataset. Here is the command to run (with the project root as our working directory): kiara run --save table=journal_nodes_table import.table.from.csv_file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffId,Label,JournalType,City,CountryNetworkTime,PresentDayCountry,Latitude,Longitude,Language \u2502 \u2502 75,Psychiatrische en neurologische bladen,specialized: psychiatry and neurology,Amsterdam,Netherlands,Netherlands,52.366667,4.9,Dutch \u2502 \u2502 36,The American Journal of Insanity,specialized: psychiatry and neurology,Baltimore,United States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: psychology,Baltimore,United States,United States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: therapy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten Jahrhunderts,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: therapy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und Nervenkrankheiten,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und Neurologie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology and pathology\",Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pathologie,specialized: psychology and pedagogy,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: anthropology, criminology and forensics\",Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und Gyn\u00e4kologie,specialized: gynecology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: surgery,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche Zeitschrift,specialized: military medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und Fortschritte auf dem Gebiete der Neurologie und Psychiatrie,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general medicine,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger und Epileptischer,specialized: psychiatry and neurology,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general medicine,Bern,Switzerland,Switzerland,46.948056,7.4475,German \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: anatomy, physiology and pathology\",Bonn,German Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: psychology,Boston,United States,United States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft f\u00fcr Anthropologie, Ethnologie und Urgeschichte\",\"specialized: anthropology, criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de Neurologie,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de physiologie, de m\u00e9decine, de chirurgie, d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de Belgique,specialized: psychiatry and neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pat specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and forens Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and forens Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und Pathol specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table d04ec873-ff21-49f0-b933-e4978bc9ac01 journal_nodes_table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This should have created an item with alias journal_nodes_table in the kiara data store, which you can confirm with kiara data list .","title":"Pre-loading a table dataset"},{"location":"extending_kiara/creating_modules/the_basics/#writing-the-kiara-module","text":"Ok, let's get started and create a kiara module that filters a table, using different filter criteria.","title":"Writing the kiara module"},{"location":"extending_kiara/creating_modules/the_basics/#module-skeleton","text":"In most cases you'd delete the example module mentioned above, and create your module in the Python file where the example module was, or in a new Python file in the \"modules\" folder. For the purpose of this tutorial, we can just leave the example module in place, because it can serve as a quick reference for our own module. Use the editor of your choice, and paste the following text below the existing code into modules/__init__.py : from kiara import KiaraModule class TutorialModule ( KiaraModule ): def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" } } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" } } def process ( self , inputs , outputs ) -> None : pass This module skeleton describes a kiara module that takes a dataset of type table as input (using table_input as input field name), and produces another table dataset as output (accordingly, using table_output as output field name). For your own modules, you'd probably use the field name table for both input and outputs, but in this tutorial we'll use the longer forms, to avoid any confusion. On the next kiara run, the new module should be picked up by the operation list command: kiara operation list tutorial_module \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f The id of the module was autogenerated from the full Python path of its class: kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module .","title":"Module skeleton"},{"location":"extending_kiara/creating_modules/the_basics/#module-id-and-description","text":"In most cases, we don't want such a long and unwieldy module name. We can assign our own, custom and meaningful id by setting the _module_type_name class attribute. In addition, we will want to add some documentation about the module and its functionality that is displayed to the user. For this, we use a normal Python doc string on the Python class body. For the purpose of this tutorial, we'll only add a single sentence, but in most cases you'll want to have a multi-paragraph markdown text here. So, taking all that into account, edit the module code to include: ... ... class TutorialModule ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { ... ... The output for our new module in the operation list is much prettier now: kiara operation list filter \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter.table Filter a table. \u2502 \u2502 string_filter.tokens filter -- n/a -- \u2502 \u2502 table_filter.drop_columns filter -- n/a -- \u2502 \u2502 table_filter.select_columns filter -- n/a -- \u2502 \u2502 table_filter.select_rows filter -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f We can also let kiara tell us about what it knows about the operation itself: kiara operation explain filter.table \u256d\u2500 Operation: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_input table -- n/a -- yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table -- n/a -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Module id and description"},{"location":"extending_kiara/creating_modules/the_basics/#inputoutput-field-documentation","text":"As you can see in the explain output above, the information to the user is still a bit sparse. In most cases, we'll want to have some information about the input(s) the user is supposed to provide. Same for what the outputs actually mean. In both cases, we can add a doc attribute to each input and output field. ... ... def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" } } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" } } ... ... Run the explain command again, to check what kiara thinks of our module now: kiara operation explain filter.table \u256d\u2500 Operation: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_input table The table to filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Input/output field documentation"},{"location":"extending_kiara/creating_modules/the_basics/#processing-the-inputs","text":"Specifying the inputs (and outputs) is an important part of designing your module, it's basically the module's 'public API', and you want to avoid changing it (too much; or at all) as your module evolves over time. But of course, the actual processing is where the interesting stuff happens. In kiara , that is the process method of every module. The arguments to this method are called inputs and outputs , which are basically dicts that use the field names specified in the create_inputs_schema / create_outputs_schema as keys, and Python objects of class Value as values. One thing to understand is that a Value object is not the same as the actual data. Instead, it's a reference to it (a means to retrieve it), and it also contains metadata about its provenance (pedigree/lineage) and other properties. This is the signature of the process method, including type hints (which we will omit after this): from kiara.models.values.value import ValueMap , ValueMapWritable def process ( inputs : ValueMap , outputs : ValueMapWritable ): ... ... The inputs and outputs arguments to the process method are of type ValueMap ; the two main methods to access input data are: inputs.get_value_obj([field_name]) : retrieve the (wrapper) Value object for a field inputs.get_value_data([field_name]) : retrieve the data object for a field In addition, you can retrieve the data object via the value wrapper: value = inputs . get_value_obj ( \"field_name\" ) data = value . data The class/type of the data depends on the data type of the value, so you'll have to consult the documentation about what to expect. TODO: expand on this, with a bit of example code/cli commands The important methods to set an output is: outputs.set_value(field_name, result_data) : set a single output field outputs.set_values(field_name_1=result_data_1, field_name_2=result_data_2, ...) : set multiple result values at once All that out of the way, let's get started implementing our table filter. We'll do it in stages, so hopefully we can cover all the important aspects in this tutorial in a way that makes intuitive sense. To that end, let's write some code that does ...nothing. Our first iteration of our module will take the input table, and immediately set it as output: def process ( self , inputs , outputs ): table_obj = inputs . get_value_obj ( \"table_input\" ) # some debug output is usually useful while developing. Something like: print ( f \"Filter module, table input: { table_obj } \" ) print ( \"Table data:\" ) print ( table_obj . data ) outputs . set_value ( \"table_output\" , table_obj ) If we run our module in this state, we should see our debug output, as well as the resulting table (which will be the unmodified input): kiara run filter.table table_input=alias:journal_nodes_table Filter module, table input value: Value(id=d04ec873-ff21-49f0-b933-e4978bc9ac01, type=table, status=set, initialized=True optional=False) Table data instance: KiaraTable(model_id=-- n/a --, category=kiara_table, fields=[data_path]) \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalTyp City CountryNe PresentDay Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatri specialize Amsterdam Netherlan Netherland 52.366667 4.9 Dutch \u2502 \u2502 36 The Americ specialize Baltimore United St United Sta 39.289444 -76.61527 English \u2502 \u2502 208 The Americ specialize Baltimore United St United Sta 39.289444 -76.61527 English \u2502 \u2502 295 Die Kranke specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsc general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 300 Therapeuti specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 10 Berliner k general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 An general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschr specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 29 Virchows A specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrif specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljah specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 47 Centralbla specialize Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 50 Russische general me Berlin German Em Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte med general me Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener kli general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener kli general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener med general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener med general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschr general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-t general me Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisc specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4 specialize Vienna Austro-Hu Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430 general me Voronezh Russian E Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general me Warsaw Russian E Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Le general me Warsaw Russian E Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfrage specialize Wiesbaden German Em Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse specialize Wiesbaden German Em Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now it's time to drill a bit deeper into our input table, and figure out how to access the information it contains. kiara wraps data that shares some schema/structure into so-called 'data types'. You can access a list of the data types that are available in your current kiara environment with the data-type list sub-command: kiara data-type list \u256d\u2500 Available data types \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 type name type lineage (qualifier) profiles description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 any -- n/a -- -- n/a -- 'Any' type, the parent type for most other types. \u2502 \u2502 \u2502 \u2502 array -- n/a -- -- n/a -- An array, in most cases used as a column within a table. \u2502 \u2502 \u2502 \u2502 boolean -- n/a -- -- n/a -- A boolean. \u2502 \u2502 \u2502 \u2502 bytes -- n/a -- -- n/a -- An array of bytes. \u2502 \u2502 \u2502 \u2502 database -- n/a -- -- n/a -- A database, containing one or several tables. \u2502 \u2502 \u2502 \u2502 date -- n/a -- -- n/a -- A date. \u2502 \u2502 \u2502 \u2502 dict -- n/a -- -- n/a -- A dictionary. \u2502 \u2502 \u2502 \u2502 file -- n/a -- -- n/a -- A file. \u2502 \u2502 \u2502 \u2502 file_bundle -- n/a -- -- n/a -- A bundle of files (like a folder, zip archive, etc.). \u2502 \u2502 \u2502 \u2502 float -- n/a -- -- n/a -- A float. \u2502 \u2502 \u2502 \u2502 integer -- n/a -- -- n/a -- An integer. \u2502 \u2502 \u2502 \u2502 list -- n/a -- -- n/a -- A list. \u2502 \u2502 \u2502 \u2502 network_data -- n/a -- -- n/a -- Data that can be assembled into a graph. \u2502 \u2502 \u2502 \u2502 string -- n/a -- -- n/a -- A string. \u2502 \u2502 \u2502 \u2502 table -- n/a -- -- n/a -- Tabular data (table, spreadsheet, data_frame, what have you). \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To find out more about a specific data type, you can use data-type explain : kiara data-type explain table \u256d\u2500 Data type: table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 type_name table \u2502 \u2502 type_config {} \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage table \u2502 \u2502 any \u2502 \u2502 qualifier profile(s) -- n/a -- \u2502 \u2502 Documentation \u2502 \u2502 Tabular data (table, spreadsheet, data_frame, what have you). \u2502 \u2502 \u2502 \u2502 The table data is organized in sets of columns (arrays of data of the same type), with each column having a \u2502 \u2502 string identifier. \u2502 \u2502 \u2502 \u2502 kiara uses an instance of the [KiaraTable][kiara_plugin.tabular.models.table.KiaraTable] class to manage the \u2502 \u2502 table data, which let's developers access it in different formats (Apache Arrow Table, Pandas dataframe, \u2502 \u2502 Python dict of lists, more to follow...). \u2502 \u2502 \u2502 \u2502 Please consult the API doc of the KiaraTable class for more information about how to access and query the \u2502 \u2502 data: \u2502 \u2502 \u2502 \u2502 \u2022 KiaraTable API doc \u2502 \u2502 \u2502 \u2502 Internally, the data is stored in Apache Feather format -- both in memory and on disk when saved, which \u2502 \u2502 enables some advanced usage to preserve memory and compute overhead. \u2502 \u2502 \u2502 \u2502 Author(s) \u2502 \u2502 Markus Binsteiner markus@frkl.io \u2502 \u2502 \u2502 \u2502 Context \u2502 \u2502 Tags tabular \u2502 \u2502 Labels package: kiara_plugin.tabular \u2502 \u2502 References source_repo: https://github.com/DHARPA-Project/kiara_plugin.tabular \u2502 \u2502 documentation: https://DHARPA-Project.github.io/kiara_plugin.tabular/ \u2502 \u2502 \u2502 \u2502 Python class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.data_types.table \u2502 \u2502 full_name kiara_plugin.tabular.data_types.table.TableType \u2502 \u2502 \u2502 \u2502 Config class \u2502 \u2502 python_class_name DataTypeConfig \u2502 \u2502 python_module_name kiara.data_types \u2502 \u2502 full_name kiara.data_types.DataTypeConfig \u2502 \u2502 \u2502 \u2502 Value class \u2502 \u2502 python_class_name KiaraTable \u2502 \u2502 python_module_name kiara_plugin.tabular.models.table \u2502 \u2502 full_name kiara_plugin.tabular.models.table.KiaraTable \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Reading this, and following some of the links included. shows us that we can retrieve the table data as a Pandas dataframe using the to_pandas() method. As the documentation states, this loads the whole data into memory, which is something we should try to avoid, but in a lot of cases (esp. if we are dealing with sub-hundreds-of-megabytes-sized data) it's a perfectly acceptable approach. So, let's do this and use our existing knowledge of Pandas, and retrieve a list of column names from the table the user provided, print out that information debug-style, using print: def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Again, let's run and see what's what (this time surpressing the result output we don't need right now, using --output silent ): kiara run --output silent filter.table table_input=alias:journal_nodes_table Filter module, table input value: Value(id=d04ec873-ff21-49f0-b933-e4978bc9ac01, type=table, status=set, initialized=True optional=False) Table data instance: KiaraTable(model_id=-- n/a --, category=kiara_table, fields=[data_path]) Column names: Index(['Id', 'Label', 'JournalType', 'City', 'CountryNetworkTime', 'PresentDayCountry', 'Latitude', 'Longitude', 'Language'], dtype='object') Ok, now we filter. Initially, let's say our module accepts only tables that contain a 'City' column, and returns all rows that have 'Berlin' as a value there: def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ 'City' ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) And again, we run our module using our example dataset, and now we actually get something that is filtered: kiara run filter.table table_input=alias:journal_nodes_table \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitude Language __index_ \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 295 Die Kran speciali Berlin German E Germany 52.52 13.405 German 3 \u2502 \u2502 296 Die deut general Berlin German E Germany 52.52 13.405 German 4 \u2502 \u2502 300 Therapeu speciali Berlin German E Germany 52.52 13.405 German 5 \u2502 \u2502 1 Allgemei speciali Berlin German E Germany 52.52 13.405 German 6 \u2502 \u2502 7 Archiv f speciali Berlin German E Germany 52.52 13.405 German 7 \u2502 \u2502 10 Berliner general Berlin German E Germany 52.52 13.405 German 8 \u2502 \u2502 13 Charit\u00e9 general Berlin German E Germany 52.52 13.405 German 9 \u2502 \u2502 21 Monatssc speciali Berlin German E Germany 52.52 13.405 German 10 \u2502 \u2502 29 Virchows speciali Berlin German E Germany 52.52 13.405 German 11 \u2502 \u2502 31 Zeitschr speciali Berlin German E Germany 52.52 13.405 German 12 \u2502 \u2502 42 Viertelj speciali Berlin German E Germany 52.52 13.405 German 13 \u2502 \u2502 47 Centralb speciali Berlin German E Germany 52.52 13.405 German 14 \u2502 \u2502 50 Russisch general Berlin German E Germany 52.52 13.405 German 15 \u2502 \u2502 76 Deutsche general Berlin German E Germany 52.52 13.405 German 16 \u2502 \u2502 87 Monatssc speciali Berlin German E Germany 52.52 13.405 German 17 \u2502 \u2502 108 Archiv f speciali Berlin German E Germany 52.52 13.405 German 18 \u2502 \u2502 113 Zeitschr general Berlin German E Germany 52.52 13.405 German 19 \u2502 \u2502 159 Deutsche speciali Berlin German E Germany 52.52 13.405 German 20 \u2502 \u2502 162 Jahresbe speciali Berlin German E Germany 52.52 13.405 German 21 \u2502 \u2502 192 \u00c4rztlich general Berlin German E Germany 52.52 13.405 German 22 \u2502 \u2502 198 Zeitschr speciali Berlin German E Germany 52.52 13.405 German 23 \u2502 \u2502 258 Der Pfar news med Berlin German E Germany 52.52 13.405 German 24 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Of course, a module like this is only of very limited value, because the tables it accepts as inputs must contain a column named 'City', and it only filters out a hardcoded string. Ideally, we'd want the user to provide both inputs, along with the table to filter. Let's add those module inputs, and adjust the processing method accordingly: def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" } } def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) In this example, I've used a default value for the column_name input ('City'). This probably doesn't make a whole lot of sense, but it shows how to set defaults for input fields, which in a lot of cases does make sense. We can try to run this command using a missing filter_string argument, which shows off nicely what the kiara command-line interface has to say about something like this: kiara run filter.table table_input=alias:journal_nodes_table \u256d\u2500 Run info: filter.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: filter.table \u2502 \u2502 \u2502 \u2502 Filter a table. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 column_name valid string The column no City \u2502 \u2502 containing the \u2502 \u2502 element to use \u2502 \u2502 as filter. \u2502 \u2502 filter_string not set string The string to yes \u2502 \u2502 use as filter. \u2502 \u2502 table_input valid table The table to yes \u2502 \u2502 filter. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table The filtered table. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, kiara complains about the missing input, but has used 'City' as default for the missing column_name input, and therefor is ok with the user not providing this. Ok, one more time, let's look for 'Amsterdam': kiara run filter.table table_input=alias:journal_nodes_table filter_string=Amsterdam \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table_output table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitud Language __index_ \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiat speciali Amsterda Netherla Netherla 52.36666 4.9 Dutch 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This should give you a good basis to work on your own kiara module(s). Stay tuned for part II of this tutorial!","title":"Processing the inputs"},{"location":"extending_kiara/pipelines/SUMMARY/","text":"Assemble a pipeline","title":"SUMMARY"},{"location":"extending_kiara/pipelines/assemble_pipelines/","tags":["tutorial"],"text":"Assembling a kiara pipeline \u00b6 Preparation \u00b6 If you haven't already, it would make sense for you to go through the kiara getting started guide , as well as writing your own kiara module . We'll use the development environment set-up from the latter guide, as well as the module created there as a step in our pipeline. Creating a pipeline \u00b6 A kiara pipeline is a dict-like data structure that includes one or several processing steps (implemented by kiara operations), connected (or not) in a specific way so that some steps outputs feed into other steps' inputs. A single-step pipeline \u00b6 The simplest pipeline contains a single operation, and is not useful in any way, since it's easier to just kiara run the operation directly. Nonetheless, below is how that would look like, we'll be using the module we created in the writing your own kiara module guide: steps : - module_type : filter.table step_id : filter_table_step A pipeline step is a dictionary with 2 required keys (and some optional ones, which we'll cover later): module_type : the name of the module or operation that should be used. step_id : the name of the step, ideally a short, descriptive name outlining what the step does. It can't contain special characters except '_', and it must be unique within the pipeline. An assembled pipeline has the same characteristics as a kiara module, and in fact is a perfectly valid operation, like any other one, and can be called the same way. Create a new file my_first_pipeline.yaml , and copy and paste the above code into it. Then, run the operation explain command against the file: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter_table_step__table_input table The table to filter. yes -- no default -- \u2502 \u2502 filter_table_step__column_name string The column containing the element to no City \u2502 \u2502 use as filter. \u2502 \u2502 filter_table_step__filter_string string The string to use as filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter_table_step__table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, kiara turned this (single-step) pipeline into an operation, and auto-generated some input- and output-fields, by assembling the step-id and step input-/output-field(s). Those long field names are a bit unwieldy, and we'll remedy that later, for now let's just ignore that. Adding a second step \u00b6 In the previous tutorial we pre-seeded the kiara data store with a csv file/tabular dataset, to help us with developing our table filter module. In this tutorial, we'll remove the requirement to do that, by adding a step to our pipeline that lets the user specify a path to a csv file, and import and convert that into a table value. Previously, we've used the import.table.from.csv_file operation to import the csv file, and we can do the same now. Edit the pipeline file you created so it looks like the following: steps : - module_type : import.table.from.csv_file step_id : import_table_step - module_type : filter.table step_id : filter_table_step input_links : table_input : import_table_step.table What we did here: add a new step with the id import_table_step , which will execute the import.table.from.csv_file operation leave our filter step in place, but connect the table_input input of this steps operation to the table output field of the import_table_step operation !!! note: To find out the input/output field names of each step, use kiara operation explain <MODULE_TYPE> . We can ask kiara again about what it thinks of this new pipeline/operation: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_table_step__path string The local path to the file. yes -- no default -- \u2502 \u2502 filter_table_step__column_name string The column containing the element to no City \u2502 \u2502 use as filter. \u2502 \u2502 filter_table_step__filter_string string The string to use as filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_table_step__imported_file file The loaded files. \u2502 \u2502 import_table_step__table table The result value. \u2502 \u2502 filter_table_step__table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, the previously existing input with the field name filter_table_step__table_input (type: table ) is gone now, replaced by a new one, with the field name import_table_step__path (type: string ). The other two inputs remain the same (since we did not connect a step output to them). Side-note: visualizing the pipeline \u00b6 We can let kiara visualize our pipeline at each step in the development process. This is quite useful, as it can serve as a visual aid to debug and assemble pipelines and their steps. If you want to do this in your own environment, you need to have Java installed, as well as an additional Python dependency in your virtual- or conda-environment: pip install 'git+https://github.com/cosminbasca/asciinet.git#egg=asciinet&subdirectory=pyasciinet' Currently, the following commands exist to print a pipeline as graph on the command-line: kiara pipeline execution-graph <pipeline_file> : display the pipeline steps in the order they will be executed. kiara pipeline data-flow-graph <pipeline_file> : display the the connections of inputs/outputs as well as processing steps. As an example, let's look at the execution graph of our current pipeline: kiara pipeline execution-graph my_first_pipeline.yaml \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502__root__\u2502 \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2502 v \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502import_table_step\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 v \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502filter_table_step\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Adjusting the input-/output-field names \u00b6 We could run our pipeline as is, but let's adjust its input- and output field names first. Mainly to make it more intuitive to use. To do that we can add one or both of the following keys to our pipeline description: input_aliases : a mapping of pipeline inputs to more user-friendly names output_aliases : a mapping of pipeline outputs to more user-friendly names Lets start with our inputs. Add the following to your pipeline file: input_aliases : import_table_step.path : csv_file_path filter_table_step.column_name : column_name filter_table_step.filter_string : filter_string This is basically just a rename of one (or several, or all) pipeline-input-fields, to shorter names. If you specify the same value for several keys, then the user input for those fields will be re-used for all the keys that have that value (we'll cover that in a later tutorial). Now let's do our outputs: output_aliases : filter_table_step.table_output : filtered_table Output aliases work a bit different to input aliases: for inputs, if we don't specify a field, kiara will just use the auto-generated name (since the need for the input to exist does not go away). For output aliases, if we don't specify a field, kiara will ignore that output, and not display it to the user. In our case, we are not really interested in the intermediate outputs of the first step, so we only add the filtered_table alias that represents our final, filtered result. Lets see what kiara has to say about the 'API' of our pipelines now: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file_path string The local path to yes -- no default -- \u2502 \u2502 the file. \u2502 \u2502 column_name string The column no City \u2502 \u2502 containing the \u2502 \u2502 element to use as \u2502 \u2502 filter. \u2502 \u2502 filter_string string The string to use yes -- no default -- \u2502 \u2502 as filter. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Much nicer! Run the pipeline \u00b6 Now, all that is left to do is run the pipeline: kiara run --save filtered_table=amsterdam_journals my_first_pipeline.yaml csv_file_path=examples/data/journals/JournalNodes1902.csv filter_string=Amsterdam column_name=City \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitu Language __index \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiat speciali Amsterda Netherla Netherla 52.36666 4.9 Dutch 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table afe32b6b-b072-40f0-ae96-4a9db3091708 amsterdam_journals \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f And to confirm this worked, we ask kiara about the value we just stored (alias: amsterdam_journals ), including it's lineage, which should give us the value ids of the intermediate results (in case we ever needed them -- they won't have an alias associated with it, but are still persisted in the kiara data store and can be looked up with kiara data explain <VALUE_ID> and/or `kiara data load ): kiara data explain --lineage alias:amsterdam_journals \u256d\u2500 Value details for: alias:amsterdam_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id afe32b6b-b072-40f0-ae96-4a9db3091708 \u2502 \u2502 kiara_id ce14ea62-f747-4a6f-9a87-446cf1170625 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.da\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.da\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 lineage filter.table \u2502 \u2502 \u251c\u2500\u2500 input: column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: filter_string (string) \u2502 \u2502 \u2514\u2500\u2500 input: table_input (table) \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \"cd4b2ac3-8395-4364-9bd8-f3e87c8a1090\", \u2502 \u2502 \"metadata.table\": \"fd384c2c-f1e1-4905-aebf-90b063b8122a\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAmca9P3gSGC6XipcksvC5aArdVeBJd8WHcwa6hLB9gqaF \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The filtered table. \u2502 \u2502 \u2502 \u2502 value_size 4.97 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage filter.table \u2502 \u2502 \u251c\u2500\u2500 input: column_name (string) = 5e0e0243-9467-4f0f-9457-edb703a06c87 \u2502 \u2502 \u251c\u2500\u2500 input: filter_string (string) = 6c3eadc3-909d-4a76-80aa-4e5ca81ab12a \u2502 \u2502 \u2514\u2500\u2500 input: table_input (table) = 7b4ec663-3e12-4ef5-957f-7615ee9c79ed \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 3fd52e57-e96b-4314-8e1e-3fd6a33b3dcf \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 240c98b2-4d68-4e2b-8f1f-4bdb8c7c0d5e \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Making the pipeline discoverable \u00b6 One of the main concepts that kiara is trying to facilitate is a modular approach to assembling data workflows. The main ingredient here is the fact that assembled pipelines behave like any other operation in kiara , which means that pipelines can also be used as (single) steps in other pipelines. To make that work in an intuitive and simple way for users, kiara needs to know about all the pipeline descriptions the user intends to use as building blocks. If we are only concerned about a single 'top-level' pipeline (as we have done in this tutorial so far), this is not a problem, and all we need to do is point kiara to a (yaml- or json-) file containing the pipeline description. If we want to re-use our pipelines in other pipelines, we need to 'register' them in a kiara context, and give it its own operation id. kiara tries to make this as simple as possible, so, if you don't do anything, kiara will use the file name that contains the pipeline description (without extension), and convert it to a valid operation id. In our case, we'd end up with an operation called 'my_first_pipeline'. If we want to have more control over this, we can add a property pipeline_name to our description, that will override the auto-generated operation id. Using the extra_pipeline property \u00b6 Each kiara context has a property called extra_pipeline . On the command-line, you can specify one or several of those via the --pipelines (or: -p ) argument (after the kiara command-name, before the sub-command name): kiara --pipelines my_first_pipeline.yaml operation list my_first \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 my_first_pipeline pipeline -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note kiara accepts paths to files or folders as the argument to --pipelines . If you specify a folder, kiara will look for valid pipeline descriptions under that folder. Let's test that again, but this time we give our new pipeline a descriptive name, as well as some documentation. Add those two properties to your existing pipeline file: pipeline_name : \"import.filtered_table\" doc : | Import a table from a csv file, then filter it. Filtering is done by matching a 'filter_string' against all cells of a column, both specified by the user. Note Here, we use a yaml literal multiline string to specify our pipeline documentation (the: ' | '). This allows us to write as much documentation as we need to, without being restricted to a single line. kiara --pipelines my_first_pipeline.yaml operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.filtered_table pipeline Import a table from a csv file, then filter it. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Going with the information contained in this output, instead of running our pipeline with the path to its file after the run sub-command, we could also do it like: kiara --pipelines my_first_pipeline.yaml run import.filtered_table ... ... ... Including the pipeline in a kiara plugin \u00b6 In case we want to 'publish' our pipeline so it can be re-used as part of a kiara plugin (which may or may not contain native 'Python' modules/operations, custom data-types, etc.), this is also easy to do. If you have followed the 'writing your own kiara module' tutorial, you'd have created a kiara plugin project from a template. To add your pipeline to this plugin, simply copy/move it into the directory src/kiara_plugin/<YOUR_PLUGIN_NAME>/pipelines . Naming the pipeline and adding documentation works the same as outlined in the previous chapter. If you add pipelines to a kiara context this way, nothing else should be necessary, kiara will auto-discover all the pipelines added like this, and you can use the assigned 'pipeline_name' as value of the module_type key in your step description, if you want to run it within another pipeline.","title":"Assembling a pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#assembling-a-kiara-pipeline","text":"","title":"Assembling a kiara pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#preparation","text":"If you haven't already, it would make sense for you to go through the kiara getting started guide , as well as writing your own kiara module . We'll use the development environment set-up from the latter guide, as well as the module created there as a step in our pipeline.","title":"Preparation"},{"location":"extending_kiara/pipelines/assemble_pipelines/#creating-a-pipeline","text":"A kiara pipeline is a dict-like data structure that includes one or several processing steps (implemented by kiara operations), connected (or not) in a specific way so that some steps outputs feed into other steps' inputs.","title":"Creating a pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#a-single-step-pipeline","text":"The simplest pipeline contains a single operation, and is not useful in any way, since it's easier to just kiara run the operation directly. Nonetheless, below is how that would look like, we'll be using the module we created in the writing your own kiara module guide: steps : - module_type : filter.table step_id : filter_table_step A pipeline step is a dictionary with 2 required keys (and some optional ones, which we'll cover later): module_type : the name of the module or operation that should be used. step_id : the name of the step, ideally a short, descriptive name outlining what the step does. It can't contain special characters except '_', and it must be unique within the pipeline. An assembled pipeline has the same characteristics as a kiara module, and in fact is a perfectly valid operation, like any other one, and can be called the same way. Create a new file my_first_pipeline.yaml , and copy and paste the above code into it. Then, run the operation explain command against the file: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter_table_step__table_input table The table to filter. yes -- no default -- \u2502 \u2502 filter_table_step__column_name string The column containing the element to no City \u2502 \u2502 use as filter. \u2502 \u2502 filter_table_step__filter_string string The string to use as filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filter_table_step__table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, kiara turned this (single-step) pipeline into an operation, and auto-generated some input- and output-fields, by assembling the step-id and step input-/output-field(s). Those long field names are a bit unwieldy, and we'll remedy that later, for now let's just ignore that.","title":"A single-step pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#adding-a-second-step","text":"In the previous tutorial we pre-seeded the kiara data store with a csv file/tabular dataset, to help us with developing our table filter module. In this tutorial, we'll remove the requirement to do that, by adding a step to our pipeline that lets the user specify a path to a csv file, and import and convert that into a table value. Previously, we've used the import.table.from.csv_file operation to import the csv file, and we can do the same now. Edit the pipeline file you created so it looks like the following: steps : - module_type : import.table.from.csv_file step_id : import_table_step - module_type : filter.table step_id : filter_table_step input_links : table_input : import_table_step.table What we did here: add a new step with the id import_table_step , which will execute the import.table.from.csv_file operation leave our filter step in place, but connect the table_input input of this steps operation to the table output field of the import_table_step operation !!! note: To find out the input/output field names of each step, use kiara operation explain <MODULE_TYPE> . We can ask kiara again about what it thinks of this new pipeline/operation: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_table_step__path string The local path to the file. yes -- no default -- \u2502 \u2502 filter_table_step__column_name string The column containing the element to no City \u2502 \u2502 use as filter. \u2502 \u2502 filter_table_step__filter_string string The string to use as filter. yes -- no default -- \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_table_step__imported_file file The loaded files. \u2502 \u2502 import_table_step__table table The result value. \u2502 \u2502 filter_table_step__table_output table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, the previously existing input with the field name filter_table_step__table_input (type: table ) is gone now, replaced by a new one, with the field name import_table_step__path (type: string ). The other two inputs remain the same (since we did not connect a step output to them).","title":"Adding a second step"},{"location":"extending_kiara/pipelines/assemble_pipelines/#side-note-visualizing-the-pipeline","text":"We can let kiara visualize our pipeline at each step in the development process. This is quite useful, as it can serve as a visual aid to debug and assemble pipelines and their steps. If you want to do this in your own environment, you need to have Java installed, as well as an additional Python dependency in your virtual- or conda-environment: pip install 'git+https://github.com/cosminbasca/asciinet.git#egg=asciinet&subdirectory=pyasciinet' Currently, the following commands exist to print a pipeline as graph on the command-line: kiara pipeline execution-graph <pipeline_file> : display the pipeline steps in the order they will be executed. kiara pipeline data-flow-graph <pipeline_file> : display the the connections of inputs/outputs as well as processing steps. As an example, let's look at the execution graph of our current pipeline: kiara pipeline execution-graph my_first_pipeline.yaml \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502__root__\u2502 \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2502 v \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502import_table_step\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 v \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502filter_table_step\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Side-note: visualizing the pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#adjusting-the-input-output-field-names","text":"We could run our pipeline as is, but let's adjust its input- and output field names first. Mainly to make it more intuitive to use. To do that we can add one or both of the following keys to our pipeline description: input_aliases : a mapping of pipeline inputs to more user-friendly names output_aliases : a mapping of pipeline outputs to more user-friendly names Lets start with our inputs. Add the following to your pipeline file: input_aliases : import_table_step.path : csv_file_path filter_table_step.column_name : column_name filter_table_step.filter_string : filter_string This is basically just a rename of one (or several, or all) pipeline-input-fields, to shorter names. If you specify the same value for several keys, then the user input for those fields will be re-used for all the keys that have that value (we'll cover that in a later tutorial). Now let's do our outputs: output_aliases : filter_table_step.table_output : filtered_table Output aliases work a bit different to input aliases: for inputs, if we don't specify a field, kiara will just use the auto-generated name (since the need for the input to exist does not go away). For output aliases, if we don't specify a field, kiara will ignore that output, and not display it to the user. In our case, we are not really interested in the intermediate outputs of the first step, so we only add the filtered_table alias that represents our final, filtered result. Lets see what kiara has to say about the 'API' of our pipelines now: kiara operation explain my_first_pipeline.yaml \u256d\u2500 Operation: my_first_pipeline.yaml.yaml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation -- n/a -- \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file_path string The local path to yes -- no default -- \u2502 \u2502 the file. \u2502 \u2502 column_name string The column no City \u2502 \u2502 containing the \u2502 \u2502 element to use as \u2502 \u2502 filter. \u2502 \u2502 filter_string string The string to use yes -- no default -- \u2502 \u2502 as filter. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table The filtered table. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Much nicer!","title":"Adjusting the input-/output-field names"},{"location":"extending_kiara/pipelines/assemble_pipelines/#run-the-pipeline","text":"Now, all that is left to do is run the pipeline: kiara run --save filtered_table=amsterdam_journals my_first_pipeline.yaml csv_file_path=examples/data/journals/JournalNodes1902.csv filter_string=Amsterdam column_name=City \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table \u2502 \u2502 Id Label JournalT City CountryN PresentD Latitude Longitu Language __index \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiat speciali Amsterda Netherla Netherla 52.36666 4.9 Dutch 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 filtered_table table afe32b6b-b072-40f0-ae96-4a9db3091708 amsterdam_journals \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f And to confirm this worked, we ask kiara about the value we just stored (alias: amsterdam_journals ), including it's lineage, which should give us the value ids of the intermediate results (in case we ever needed them -- they won't have an alias associated with it, but are still persisted in the kiara data store and can be looked up with kiara data explain <VALUE_ID> and/or `kiara data load ): kiara data explain --lineage alias:amsterdam_journals \u256d\u2500 Value details for: alias:amsterdam_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id afe32b6b-b072-40f0-ae96-4a9db3091708 \u2502 \u2502 kiara_id ce14ea62-f747-4a6f-9a87-446cf1170625 \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name TableType \u2502 \u2502 python_module_name kiara_plugin.tabular.da\u2026 \u2502 \u2502 full_name kiara_plugin.tabular.da\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 lineage filter.table \u2502 \u2502 \u251c\u2500\u2500 input: column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: filter_string (string) \u2502 \u2502 \u2514\u2500\u2500 input: table_input (table) \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \"cd4b2ac3-8395-4364-9bd8-f3e87c8a1090\", \u2502 \u2502 \"metadata.table\": \"fd384c2c-f1e1-4905-aebf-90b063b8122a\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAmca9P3gSGC6XipcksvC5aArdVeBJd8WHcwa6hLB9gqaF \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The filtered table. \u2502 \u2502 \u2502 \u2502 value_size 4.97 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage filter.table \u2502 \u2502 \u251c\u2500\u2500 input: column_name (string) = 5e0e0243-9467-4f0f-9457-edb703a06c87 \u2502 \u2502 \u251c\u2500\u2500 input: filter_string (string) = 6c3eadc3-909d-4a76-80aa-4e5ca81ab12a \u2502 \u2502 \u2514\u2500\u2500 input: table_input (table) = 7b4ec663-3e12-4ef5-957f-7615ee9c79ed \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 3fd52e57-e96b-4314-8e1e-3fd6a33b3dcf \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 240c98b2-4d68-4e2b-8f1f-4bdb8c7c0d5e \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Run the pipeline"},{"location":"extending_kiara/pipelines/assemble_pipelines/#making-the-pipeline-discoverable","text":"One of the main concepts that kiara is trying to facilitate is a modular approach to assembling data workflows. The main ingredient here is the fact that assembled pipelines behave like any other operation in kiara , which means that pipelines can also be used as (single) steps in other pipelines. To make that work in an intuitive and simple way for users, kiara needs to know about all the pipeline descriptions the user intends to use as building blocks. If we are only concerned about a single 'top-level' pipeline (as we have done in this tutorial so far), this is not a problem, and all we need to do is point kiara to a (yaml- or json-) file containing the pipeline description. If we want to re-use our pipelines in other pipelines, we need to 'register' them in a kiara context, and give it its own operation id. kiara tries to make this as simple as possible, so, if you don't do anything, kiara will use the file name that contains the pipeline description (without extension), and convert it to a valid operation id. In our case, we'd end up with an operation called 'my_first_pipeline'. If we want to have more control over this, we can add a property pipeline_name to our description, that will override the auto-generated operation id.","title":"Making the pipeline discoverable"},{"location":"extending_kiara/pipelines/assemble_pipelines/#using-the-extra_pipeline-property","text":"Each kiara context has a property called extra_pipeline . On the command-line, you can specify one or several of those via the --pipelines (or: -p ) argument (after the kiara command-name, before the sub-command name): kiara --pipelines my_first_pipeline.yaml operation list my_first \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 my_first_pipeline pipeline -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note kiara accepts paths to files or folders as the argument to --pipelines . If you specify a folder, kiara will look for valid pipeline descriptions under that folder. Let's test that again, but this time we give our new pipeline a descriptive name, as well as some documentation. Add those two properties to your existing pipeline file: pipeline_name : \"import.filtered_table\" doc : | Import a table from a csv file, then filter it. Filtering is done by matching a 'filter_string' against all cells of a column, both specified by the user. Note Here, we use a yaml literal multiline string to specify our pipeline documentation (the: ' | '). This allows us to write as much documentation as we need to, without being restricted to a single line. kiara --pipelines my_first_pipeline.yaml operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.filtered_table pipeline Import a table from a csv file, then filter it. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Going with the information contained in this output, instead of running our pipeline with the path to its file after the run sub-command, we could also do it like: kiara --pipelines my_first_pipeline.yaml run import.filtered_table ... ... ...","title":"Using the extra_pipeline property"},{"location":"extending_kiara/pipelines/assemble_pipelines/#including-the-pipeline-in-a-kiara-plugin","text":"In case we want to 'publish' our pipeline so it can be re-used as part of a kiara plugin (which may or may not contain native 'Python' modules/operations, custom data-types, etc.), this is also easy to do. If you have followed the 'writing your own kiara module' tutorial, you'd have created a kiara plugin project from a template. To add your pipeline to this plugin, simply copy/move it into the directory src/kiara_plugin/<YOUR_PLUGIN_NAME>/pipelines . Naming the pipeline and adding documentation works the same as outlined in the previous chapter. If you add pipelines to a kiara context this way, nothing else should be necessary, kiara will auto-discover all the pipelines added like this, and you can use the assigned 'pipeline_name' as value of the module_type key in your step description, if you want to run it within another pipeline.","title":"Including the pipeline in a kiara plugin"},{"location":"info/SUMMARY/","text":"module_types operations","title":"SUMMARY"},{"location":"info/module_types/","text":"my_kiara_module.example \u00b6 type_name my_kiara_module.example The registered name for this item type. documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: * the (optional) configuration class *: must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModule.get_config_value] method * the inputs description *: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value * the outputs description *: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value * the process method *: this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name ExampleModule The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.ExampleModule The full class namespace. The python class that implements this module type. process_src def process(self, inputs: ValueMap, outputs: ValueMap) -> None: separator = self.get_config_value(\"separator\") text_1 = inputs.get_value_data(\"text_1\") text_2 = inputs.get_value_data(\"text_2\") result = text_1 + separator + text_2 outputs.set_value(\"text\", result) The source code of the process method of the module. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module \u00b6 type_name kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module The registered name for this item type. documentation -- n/a -- Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: pass The source code of the process method of the module. filter.table \u00b6 type_name filter.table The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule1 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: pass The source code of the process method of the module. filter.table_2 \u00b6 type_name filter.table_2 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule2 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: table_obj = inputs.get_value_obj(\"table_input\") print(f\"Filter module, table input value: {table_obj}\") print(f\"Table data instance: {table_obj.data}\") outputs.set_value(\"table_output\", table_obj) The source code of the process method of the module. filter.table_3 \u00b6 type_name filter.table_3 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule3 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: table_obj = inputs.get_value_obj(\"table_input\") print(f\"Filter module, table input value: {table_obj}\") print(f\"Table data instance: {table_obj.data}\") pandas_df = table_obj.data.to_pandas() print(f\"Column names: {pandas_df.columns}\") outputs.set_value(\"table_output\", table_obj) The source code of the process method of the module. filter.table_4 \u00b6 type_name filter.table_4 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule4 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: from kiara.exceptions import KiaraProcessingException table_obj = inputs.get_value_obj(\"table_input\") pandas_df = table_obj.data.to_pandas() column_names = pandas_df.columns if \"City\" not in column_names: raise KiaraProcessingException( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df.loc[pandas_df[\"City\"] == \"Berlin\"] outputs.set_value(\"table_output\", berlin_df) The source code of the process method of the module. filter.table_5 \u00b6 type_name filter.table_5 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule5 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: from kiara.exceptions import KiaraProcessingException table_obj = inputs.get_value_obj(\"table_input\") column_name = inputs.get_value_data(\"column_name\") filter_string = inputs.get_value_data(\"filter_string\") pandas_df = table_obj.data.to_pandas() column_names = pandas_df.columns if column_name not in column_names: raise KiaraProcessingException( f\"Invalid table, does not contain a column named '{column_name}'. Available column names: {', '.join(column_names)}.\" ) berlin_df = pandas_df.loc[pandas_df[column_name] == filter_string] outputs.set_value(\"table_output\", berlin_df) The source code of the process method of the module.","title":"Module types"},{"location":"info/module_types/#kiara_info.module_types.my_kiara_module.example","text":"type_name my_kiara_module.example The registered name for this item type. documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: * the (optional) configuration class *: must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModule.get_config_value] method * the inputs description *: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value * the outputs description *: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value * the process method *: this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name ExampleModule The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.ExampleModule The full class namespace. The python class that implements this module type. process_src def process(self, inputs: ValueMap, outputs: ValueMap) -> None: separator = self.get_config_value(\"separator\") text_1 = inputs.get_value_data(\"text_1\") text_2 = inputs.get_value_data(\"text_2\") result = text_1 + separator + text_2 outputs.set_value(\"text\", result) The source code of the process method of the module.","title":"my_kiara_module.example"},{"location":"info/module_types/#kiara_info.module_types.kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module","text":"type_name kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module The registered name for this item type. documentation -- n/a -- Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: pass The source code of the process method of the module.","title":"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module"},{"location":"info/module_types/#kiara_info.module_types.filter.table","text":"type_name filter.table The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule1 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: pass The source code of the process method of the module.","title":"filter.table"},{"location":"info/module_types/#kiara_info.module_types.filter.table_2","text":"type_name filter.table_2 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule2 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: table_obj = inputs.get_value_obj(\"table_input\") print(f\"Filter module, table input value: {table_obj}\") print(f\"Table data instance: {table_obj.data}\") outputs.set_value(\"table_output\", table_obj) The source code of the process method of the module.","title":"filter.table_2"},{"location":"info/module_types/#kiara_info.module_types.filter.table_3","text":"type_name filter.table_3 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule3 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: table_obj = inputs.get_value_obj(\"table_input\") print(f\"Filter module, table input value: {table_obj}\") print(f\"Table data instance: {table_obj.data}\") pandas_df = table_obj.data.to_pandas() print(f\"Column names: {pandas_df.columns}\") outputs.set_value(\"table_output\", table_obj) The source code of the process method of the module.","title":"filter.table_3"},{"location":"info/module_types/#kiara_info.module_types.filter.table_4","text":"type_name filter.table_4 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule4 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: from kiara.exceptions import KiaraProcessingException table_obj = inputs.get_value_obj(\"table_input\") pandas_df = table_obj.data.to_pandas() column_names = pandas_df.columns if \"City\" not in column_names: raise KiaraProcessingException( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df.loc[pandas_df[\"City\"] == \"Berlin\"] outputs.set_value(\"table_output\", berlin_df) The source code of the process method of the module.","title":"filter.table_4"},{"location":"info/module_types/#kiara_info.module_types.filter.table_5","text":"type_name filter.table_5 The registered name for this item type. documentation Filter a table. Documentation for the item. authors Markus Binsteiner ( markus@frkl.io ) Information about authorship for the item. context tags documentation labels package: kiara_plugin.documentation references source_repo : The module package git repository. documentation : The url for the module package documentation. Generic properties of this item (description, tags, labels, references, ...). python_class python_class_name TutorialModule5 The name of the Python class. python_module_name kiara_plugin.documentation.modules.my_kiara_module The name of the Python module this class lives in. full_name kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5 The full class namespace. The python class that implements this module type. process_src def process(self, inputs, outputs) -> None: from kiara.exceptions import KiaraProcessingException table_obj = inputs.get_value_obj(\"table_input\") column_name = inputs.get_value_data(\"column_name\") filter_string = inputs.get_value_data(\"filter_string\") pandas_df = table_obj.data.to_pandas() column_names = pandas_df.columns if column_name not in column_names: raise KiaraProcessingException( f\"Invalid table, does not contain a column named '{column_name}'. Available column names: {', '.join(column_names)}.\" ) berlin_df = pandas_df.loc[pandas_df[column_name] == filter_string] outputs.set_value(\"table_output\", berlin_df) The source code of the process method of the module.","title":"filter.table_5"},{"location":"info/operations/","text":"filter.table \u00b6 Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table -- n/a -- yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table -- n/a -- filter.table_2 \u00b6 Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table. filter.table_3 \u00b6 Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table. filter.table_4 \u00b6 Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table. filter.table_5 \u00b6 Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- column_name string The column containing the element to use no City as filter. filter_string string The string to use as filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table. kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module \u00b6 Documentation -- n/a -- Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation -- n/a -- Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table table -- n/a -- yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table table -- n/a -- my_kiara_module.example \u00b6 Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModule.get_config_value] method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text_1 string The first text. yes -- no default -- text_2 string The second text. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text string The concatenated text.","title":"Operations"},{"location":"info/operations/#kiara_info.operations.filter.table","text":"Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table -- n/a -- yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table -- n/a --","title":"filter.table"},{"location":"info/operations/#kiara_info.operations.filter.table_2","text":"Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table.","title":"filter.table_2"},{"location":"info/operations/#kiara_info.operations.filter.table_3","text":"Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table.","title":"filter.table_3"},{"location":"info/operations/#kiara_info.operations.filter.table_4","text":"Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table.","title":"filter.table_4"},{"location":"info/operations/#kiara_info.operations.filter.table_5","text":"Documentation Filter a table. Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation Filter a table. Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_input table The table to filter. yes -- no default -- column_name string The column containing the element to use no City as filter. filter_string string The string to use as filter. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table_output table The filtered table.","title":"filter.table_5"},{"location":"info/operations/#kiara_info.operations.kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module","text":"Documentation -- n/a -- Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation -- n/a -- Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table table -- n/a -- yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 table table -- n/a --","title":"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module"},{"location":"info/operations/#kiara_info.operations.my_kiara_module.example","text":"Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [ KiaraModule ][kiara.modules.KiaraModule]: \u2022 the (optional) configuration class : must inherit from [ KiaraModuleConfig ][kiara.modules.KiaraModuleConfig], and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the [ self.get_config_value(key) ][kiara.modules.KiaraModule.get_config_value] method \u2022 the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value \u2022 the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value \u2022 the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Author(s) Markus Binsteiner markus@frkl.io Context Tags documentation Labels package : kiara_plugin.documentation References source_repo : https://github.com/DHARPA-Project/kiara_plugin.documentation documentation : https://DHARPA-Project.github.io/kiara_plugin.documentation/ Operation details Documentation A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` Inputs field name type description Required Default \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text_1 string The first text. yes -- no default -- text_2 string The second text. yes -- no default -- Outputs field name type description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 text string The concatenated text.","title":"my_kiara_module.example"},{"location":"reference/SUMMARY/","text":"kiara_plugin documentation data_types interfaces cli doc commands models modules my_kiara_module pipelines","title":"SUMMARY"},{"location":"reference/kiara_plugin/documentation/__init__/","text":"Top-level package for kiara.documentation. KIARA_METADATA \u00b6 find_data_types : Union [ Type , Tuple , Callable ] \u00b6 find_model_classes : Union [ Type , Tuple , Callable ] \u00b6 find_modules : Union [ Type , Tuple , Callable ] \u00b6 find_pipelines : Union [ Type , Tuple , Callable ] \u00b6 get_version () \u00b6 Source code in documentation/__init__.py def get_version (): from pkg_resources import DistributionNotFound , get_distribution try : # Change here if project is renamed and does not equal the package name dist_name = __name__ __version__ = get_distribution ( dist_name ) . version except DistributionNotFound : try : version_file = os . path . join ( os . path . dirname ( __file__ ), \"version.txt\" ) if os . path . exists ( version_file ): with open ( version_file , encoding = \"utf-8\" ) as vf : __version__ = vf . read () else : __version__ = \"unknown\" except ( Exception ): pass if __version__ is None : __version__ = \"unknown\" return __version__ Modules \u00b6 data_types \u00b6 This module contains the value type classes that are used in the kiara.documentation package. interfaces special \u00b6 cli special \u00b6 doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict models \u00b6 This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes. modules special \u00b6 Modules \u00b6 my_kiara_module special \u00b6 Classes \u00b6 ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. TutorialModule ( KiaraModule ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule1 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule2 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule3 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule4 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) TutorialModule5 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) pipelines special \u00b6 Default (empty) module that is used as a base path for pipelines contained in this package.","title":"  init  "},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.KIARA_METADATA","text":"","title":"KIARA_METADATA"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_data_types","text":"","title":"find_data_types"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_model_classes","text":"","title":"find_model_classes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_modules","text":"","title":"find_modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.find_pipelines","text":"","title":"find_pipelines"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.get_version","text":"Source code in documentation/__init__.py def get_version (): from pkg_resources import DistributionNotFound , get_distribution try : # Change here if project is renamed and does not equal the package name dist_name = __name__ __version__ = get_distribution ( dist_name ) . version except DistributionNotFound : try : version_file = os . path . join ( os . path . dirname ( __file__ ), \"version.txt\" ) if os . path . exists ( version_file ): with open ( version_file , encoding = \"utf-8\" ) as vf : __version__ = vf . read () else : __version__ = \"unknown\" except ( Exception ): pass if __version__ is None : __version__ = \"unknown\" return __version__","title":"get_version()"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation-modules","text":"","title":"Modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.data_types","text":"This module contains the value type classes that are used in the kiara.documentation package.","title":"data_types"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.interfaces","text":"","title":"interfaces"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.interfaces.cli","text":"doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"cli"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.models","text":"This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes.","title":"models"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.modules","text":"","title":"modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.modules-modules","text":"","title":"Modules"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.modules.my_kiara_module","text":"","title":"my_kiara_module"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.modules.my_kiara_module-classes","text":"ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. TutorialModule ( KiaraModule ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule1 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule2 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule3 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule4 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) TutorialModule5 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"Classes"},{"location":"reference/kiara_plugin/documentation/__init__/#kiara_plugin.documentation.pipelines","text":"Default (empty) module that is used as a base path for pipelines contained in this package.","title":"pipelines"},{"location":"reference/kiara_plugin/documentation/data_types/","text":"This module contains the value type classes that are used in the kiara.documentation package.","title":"Data types"},{"location":"reference/kiara_plugin/documentation/models/","text":"This module contains the metadata (and other) models that are used in the kiara.documentation package. Those models are convenience wrappers that make it easier for kiara to find, create, manage and version metadata -- but also other type of models -- that is attached to data, as well as kiara modules. Metadata models must be a sub-class of kiara.metadata.MetadataModel . Other models usually sub-class a pydantic BaseModel or implement custom base classes.","title":"Models"},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/","text":"cli special \u00b6 doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/#kiara_plugin.documentation.interfaces.cli","text":"","title":"cli"},{"location":"reference/kiara_plugin/documentation/interfaces/__init__/#kiara_plugin.documentation.interfaces.cli.doc","text":"commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"doc"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/","text":"doc special \u00b6 commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/#kiara_plugin.documentation.interfaces.cli.doc","text":"","title":"doc"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands","text":"get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/","text":"commands \u00b6 get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"  init  "},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands","text":"","title":"commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/__init__/#kiara_plugin.documentation.interfaces.cli.doc.commands.get_cmd_infos","text":"Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"get_cmd_infos()"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/commands/","text":"get_cmd_infos ( folder = '/home/runner/.cache/kiara/doc_gen' ) \u00b6 Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"Commands"},{"location":"reference/kiara_plugin/documentation/interfaces/cli/doc/commands/#kiara_plugin.documentation.interfaces.cli.doc.commands.get_cmd_infos","text":"Source code in documentation/interfaces/cli/doc/commands.py def get_cmd_infos ( folder : Union [ str , Path ] = KIARA_DOC_BUILD_CACHE_DIR ) -> Dict [ int , Any ]: if isinstance ( folder , str ): folder = Path ( folder ) infos : Dict [ Tuple , Any ] = {} commands = folder . glob ( \"*.command\" ) for cmd_file in commands : info = orjson . loads ( cmd_file . read_bytes ()) cmd = tuple ( info [ \"command\" ]) infos . setdefault ( cmd , []) . append ( info ) result : List [ Dict [ str , Any ]] = [] for cmd in infos . keys (): cmd_infos = infos [ cmd ] runs = len ( cmd_infos ) all_success = all ( x [ \"success\" ] for x in cmd_infos ) result . append ( { \"cmd\" : cmd , \"no_runs\" : runs , \"all_success\" : all_success , \"infos\" : sorted ( cmd_infos , key = lambda d : d [ \"started\" ]), } ) sorted_result = sorted ( result , key = lambda d : d [ \"infos\" ][ 0 ][ \"started\" ]) result_dict = { idx : d for idx , d in enumerate ( sorted_result , start = 1 )} return result_dict","title":"get_cmd_infos()"},{"location":"reference/kiara_plugin/documentation/modules/__init__/","text":"Modules \u00b6 my_kiara_module special \u00b6 Classes \u00b6 ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. TutorialModule ( KiaraModule ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule1 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule2 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule3 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule4 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) TutorialModule5 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"  init  "},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules-modules","text":"","title":"Modules"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module","text":"","title":"my_kiara_module"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule","text":"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"ExampleModule"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule-classes","text":"_config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Classes"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModuleConfig","text":"Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"ExampleModuleConfig"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModuleConfig-attributes","text":"separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule","text":"Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass","title":"TutorialModule"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass","title":"TutorialModule1"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"TutorialModule2"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"TutorialModule3"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df )","title":"TutorialModule4"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"TutorialModule5"},{"location":"reference/kiara_plugin/documentation/modules/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5-methods","text":"create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/","text":"Classes \u00b6 ExampleModule ( KiaraModule ) \u00b6 A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) Classes \u00b6 _config_cls ( KiaraModuleConfig ) private pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result ) ExampleModuleConfig ( KiaraModuleConfig ) pydantic-model \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" ) Attributes \u00b6 separator : str pydantic-field \u00b6 The seperator between the two strings. TutorialModule ( KiaraModule ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule1 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass TutorialModule2 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule3 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj ) TutorialModule4 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df ) TutorialModule5 ( KiaraModule ) \u00b6 Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df ) Methods \u00b6 create_inputs_schema ( self ) \u00b6 Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } create_outputs_schema ( self ) \u00b6 Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} process ( self , inputs , outputs ) \u00b6 Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"  init  "},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule","text":"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a KiaraModule : the (optional) configuration class : must inherit from KiaraModuleConfig , and the config class must be set as the _config_cls attribute on the KiaraModule class. Configuration values can be retrieved via the self.get_config_value(key) method the inputs description : must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value the outputs description : must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value the process method : this is where the actual work gets done. Input data can be accessed via inputs.get_value_data(key) , results can be set with the outputs.set_value(key, value) method Examples: This example module can be tested on the commandline with the kiara run command: kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModule ( KiaraModule ): \"\"\"A very simple example module; concatenate two strings. The purpose of this modules is to show the main elements of a [`KiaraModule`][kiara.modules.KiaraModule]: - ***the (optional) configuration class***: must inherit from [`KiaraModuleConfig`][kiara.modules.KiaraModuleConfig], and the config class must be set as the `_config_cls` attribute on the `KiaraModule` class. Configuration values can be retrieved via the [`self.get_config_value(key)`][kiara.modules.KiaraModule.get_config_value] method - ***the inputs description***: must return a dictionary, containing the input name(s) as keys, and another dictionary containing type_name information and documentation about the input data as value - ***the outputs description***: must return a dictionary, containing the output name(s) as keys, and another dictionary containing type_name information and documentation about the output data as value - ***the ``process`` method***: this is where the actual work gets done. Input data can be accessed via ``inputs.get_value_data(key)``, results can be set with the ``outputs.set_value(key, value)`` method Example: This example module can be tested on the commandline with the ``kiara run`` command: ``` kiara run core_types.example text_1=\"xxx\" text_2=\"yyy\" ``` \"\"\" _config_cls = ExampleModuleConfig _module_type_name = \"my_kiara_module.example\" def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"ExampleModule"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule-classes","text":"","title":"Classes"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule._config_cls","text":"Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"_config_cls"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule._config_cls-attributes","text":"separator : str pydantic-field \u00b6 The seperator between the two strings.","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self , ) -> ValueSetSchema : inputs = { \"text_1\" : { \"type\" : \"string\" , \"doc\" : \"The first text.\" }, \"text_2\" : { \"type\" : \"string\" , \"doc\" : \"The second text.\" }, } return inputs","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self , ) -> ValueSetSchema : outputs = { \"text\" : { \"type\" : \"string\" , \"doc\" : \"The concatenated text.\" , } } return outputs","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModule.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs : ValueMap , outputs : ValueMap ) -> None : separator = self . get_config_value ( \"separator\" ) text_1 = inputs . get_value_data ( \"text_1\" ) text_2 = inputs . get_value_data ( \"text_2\" ) result = text_1 + separator + text_2 outputs . set_value ( \"text\" , result )","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModuleConfig","text":"Source code in documentation/modules/my_kiara_module/__init__.py class ExampleModuleConfig ( KiaraModuleConfig ): separator : str = Field ( description = \"The seperator between the two strings.\" , default = \" - \" )","title":"ExampleModuleConfig"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModuleConfig-attributes","text":"","title":"Attributes"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.ExampleModuleConfig.separator","text":"The seperator between the two strings.","title":"separator"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule","text":"Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule ( KiaraModule ): _module_type_name = \"kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module\" def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass","title":"TutorialModule"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }}","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table\" : { \"type\" : \"table\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule1 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table\" def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }} def process ( self , inputs , outputs ) -> None : pass","title":"TutorialModule1"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" }}","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule1.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : pass","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule2 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_2\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"TutorialModule2"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }}","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule2.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule3 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_3\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"TutorialModule3"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }}","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule3.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : table_obj = inputs . get_value_obj ( \"table_input\" ) print ( f \"Filter module, table input value: { table_obj } \" ) print ( f \"Table data instance: { table_obj . data } \" ) pandas_df = table_obj . data . to_pandas () print ( f \"Column names: { pandas_df . columns } \" ) outputs . set_value ( \"table_output\" , table_obj )","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule4 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_4\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }} def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df )","title":"TutorialModule4"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }}","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule4.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if \"City\" not in column_names : raise KiaraProcessingException ( \"Invalid table, does not contain a column named 'City'.\" ) berlin_df = pandas_df . loc [ pandas_df [ \"City\" ] == \"Berlin\" ] outputs . set_value ( \"table_output\" , berlin_df )","title":"process()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5","text":"Filter a table. Source code in documentation/modules/my_kiara_module/__init__.py class TutorialModule5 ( KiaraModule ): \"\"\"Filter a table.\"\"\" _module_type_name = \"filter.table_5\" def _retrieve_module_characteristics ( self ) -> ModuleCharacteristics : return ModuleCharacteristics ( is_internal = True ) def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, } def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }} def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"TutorialModule5"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5-methods","text":"","title":"Methods"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5.create_inputs_schema","text":"Return the schema for this types' inputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_inputs_schema ( self ): return { \"table_input\" : { \"type\" : \"table\" , \"doc\" : \"The table to filter.\" }, \"column_name\" : { \"type\" : \"string\" , \"doc\" : \"The column containing the element to use as filter.\" , \"default\" : \"City\" , }, \"filter_string\" : { \"type\" : \"string\" , \"doc\" : \"The string to use as filter.\" }, }","title":"create_inputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5.create_outputs_schema","text":"Return the schema for this types' outputs. Source code in documentation/modules/my_kiara_module/__init__.py def create_outputs_schema ( self ): return { \"table_output\" : { \"type\" : \"table\" , \"doc\" : \"The filtered table.\" }}","title":"create_outputs_schema()"},{"location":"reference/kiara_plugin/documentation/modules/my_kiara_module/__init__/#kiara_plugin.documentation.modules.my_kiara_module.TutorialModule5.process","text":"Source code in documentation/modules/my_kiara_module/__init__.py def process ( self , inputs , outputs ) -> None : from kiara.exceptions import KiaraProcessingException table_obj = inputs . get_value_obj ( \"table_input\" ) column_name = inputs . get_value_data ( \"column_name\" ) filter_string = inputs . get_value_data ( \"filter_string\" ) pandas_df = table_obj . data . to_pandas () column_names = pandas_df . columns if column_name not in column_names : raise KiaraProcessingException ( f \"Invalid table, does not contain a column named ' { column_name } '. Available column names: { ', ' . join ( column_names ) } .\" ) berlin_df = pandas_df . loc [ pandas_df [ column_name ] == filter_string ] outputs . set_value ( \"table_output\" , berlin_df )","title":"process()"},{"location":"reference/kiara_plugin/documentation/pipelines/__init__/","text":"Default (empty) module that is used as a base path for pipelines contained in this package.","title":"  init  "},{"location":"usage/","text":"Usage \u00b6 This page will give you an overview on how to use kiara via its command-line interface. For a more walk-through introduction, have a look at the Getting started page. Subcommands \u00b6 Sub-command specific information can be found on the following pages: run : run a workflow from the command-line module : get information about modules and pipelines data : get information about data in the kiara data store Getting help \u00b6 To get information for the kiara command itself use the --help flag: kiara --help \u001b[1m \u001b[0m \u001b[1m \u001b[0m\u001b[1;33mUsage: \u001b[0m\u001b[1mkiara [\u001b[0m\u001b[1;36mOPTIONS\u001b[0m\u001b[1m] \u001b[0m\u001b[1;36mCOMMAND\u001b[0m\u001b[1m [\u001b[0m\u001b[1;36mARGS\u001b[0m\u001b[1m]...\u001b[0m\u001b[1m \u001b[0m\u001b[1m \u001b[0m \u001b[1m \u001b[0m \u001b[1;3mkiara\u001b[0m ia a data-orchestration framework; this is the command-line frontend for it. \u001b[2mFor more information, visit the \u001b[0m\u001b[1;2;3mkiara\u001b[0m\u001b[2;3m homepage\u001b[0m\u001b[2m: \u001b[0m \u001b[2mhttps://dharpa.org/kiara.documentation .\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Options \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-config\u001b[0m \u001b[1;32m-cnf\u001b[0m \u001b[1;33mTEXT\u001b[0m \u001b[1;36mA\u001b[0m kiara config file (or folder containing one \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m named 'kiara.config'). \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-context\u001b[0m \u001b[1;32m-ctx\u001b[0m,\u001b[1;32m-c\u001b[0m \u001b[1;33mTEXT\u001b[0m The name of the kiara context to use (or the \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m path to a context file). \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-pipelines\u001b[0m \u001b[1;32m-p\u001b[0m \u001b[1;33mTEXT\u001b[0m File(s) and folder(s) that contain extra \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m pipeline definitions. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-help\u001b[0m \u001b[1;32m-h\u001b[0m \u001b[1;33m \u001b[0m Show this message and exit. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Commands \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mconfig \u001b[0m\u001b[1;36m \u001b[0m Kiara config related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mcontext \u001b[0m\u001b[1;36m \u001b[0m Kiara context related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdata \u001b[0m\u001b[1;36m \u001b[0m Data-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdata-type \u001b[0m\u001b[1;36m \u001b[0m Information about available data types. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdoc \u001b[0m\u001b[1;36m \u001b[0m Documentation helpers. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mmodule \u001b[0m\u001b[1;36m \u001b[0m Module-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36moperation \u001b[0m\u001b[1;36m \u001b[0m Metadata-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mpipeline \u001b[0m\u001b[1;36m \u001b[0m Pipeline-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mrender \u001b[0m\u001b[1;36m \u001b[0m Rendering-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mrun \u001b[0m\u001b[1;36m \u001b[0m Run a kiara operation. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mworkflow \u001b[0m\u001b[1;36m \u001b[0m Workflow-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m The same goes for any of the sub (or sub-sub...) commands: kiara module --help \u001b[1m \u001b[0m \u001b[1m \u001b[0m\u001b[1;33mUsage: \u001b[0m\u001b[1mkiara module [\u001b[0m\u001b[1;36mOPTIONS\u001b[0m\u001b[1m] \u001b[0m\u001b[1;36mCOMMAND\u001b[0m\u001b[1m [\u001b[0m\u001b[1;36mARGS\u001b[0m\u001b[1m]...\u001b[0m\u001b[1m \u001b[0m\u001b[1m \u001b[0m \u001b[1m \u001b[0m Module-related sub-commands. \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Options \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-help\u001b[0m \u001b[1;32m-h\u001b[0m Show this message and exit. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Commands \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mexplain \u001b[0m\u001b[1;36m \u001b[0m Print details of a module type. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mexplain-instance \u001b[0m\u001b[1;36m \u001b[0m Describe a module instance. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mlist \u001b[0m\u001b[1;36m \u001b[0m List available module data_types. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m Complex inputs \u00b6 TBD","title":"Usage"},{"location":"usage/#usage","text":"This page will give you an overview on how to use kiara via its command-line interface. For a more walk-through introduction, have a look at the Getting started page.","title":"Usage"},{"location":"usage/#subcommands","text":"Sub-command specific information can be found on the following pages: run : run a workflow from the command-line module : get information about modules and pipelines data : get information about data in the kiara data store","title":"Subcommands"},{"location":"usage/#getting-help","text":"To get information for the kiara command itself use the --help flag: kiara --help \u001b[1m \u001b[0m \u001b[1m \u001b[0m\u001b[1;33mUsage: \u001b[0m\u001b[1mkiara [\u001b[0m\u001b[1;36mOPTIONS\u001b[0m\u001b[1m] \u001b[0m\u001b[1;36mCOMMAND\u001b[0m\u001b[1m [\u001b[0m\u001b[1;36mARGS\u001b[0m\u001b[1m]...\u001b[0m\u001b[1m \u001b[0m\u001b[1m \u001b[0m \u001b[1m \u001b[0m \u001b[1;3mkiara\u001b[0m ia a data-orchestration framework; this is the command-line frontend for it. \u001b[2mFor more information, visit the \u001b[0m\u001b[1;2;3mkiara\u001b[0m\u001b[2;3m homepage\u001b[0m\u001b[2m: \u001b[0m \u001b[2mhttps://dharpa.org/kiara.documentation .\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Options \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-config\u001b[0m \u001b[1;32m-cnf\u001b[0m \u001b[1;33mTEXT\u001b[0m \u001b[1;36mA\u001b[0m kiara config file (or folder containing one \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m named 'kiara.config'). \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-context\u001b[0m \u001b[1;32m-ctx\u001b[0m,\u001b[1;32m-c\u001b[0m \u001b[1;33mTEXT\u001b[0m The name of the kiara context to use (or the \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m path to a context file). \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-pipelines\u001b[0m \u001b[1;32m-p\u001b[0m \u001b[1;33mTEXT\u001b[0m File(s) and folder(s) that contain extra \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m pipeline definitions. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-help\u001b[0m \u001b[1;32m-h\u001b[0m \u001b[1;33m \u001b[0m Show this message and exit. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Commands \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mconfig \u001b[0m\u001b[1;36m \u001b[0m Kiara config related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mcontext \u001b[0m\u001b[1;36m \u001b[0m Kiara context related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdata \u001b[0m\u001b[1;36m \u001b[0m Data-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdata-type \u001b[0m\u001b[1;36m \u001b[0m Information about available data types. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mdoc \u001b[0m\u001b[1;36m \u001b[0m Documentation helpers. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mmodule \u001b[0m\u001b[1;36m \u001b[0m Module-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36moperation \u001b[0m\u001b[1;36m \u001b[0m Metadata-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mpipeline \u001b[0m\u001b[1;36m \u001b[0m Pipeline-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mrender \u001b[0m\u001b[1;36m \u001b[0m Rendering-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mrun \u001b[0m\u001b[1;36m \u001b[0m Run a kiara operation. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mworkflow \u001b[0m\u001b[1;36m \u001b[0m Workflow-related sub-commands. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m The same goes for any of the sub (or sub-sub...) commands: kiara module --help \u001b[1m \u001b[0m \u001b[1m \u001b[0m\u001b[1;33mUsage: \u001b[0m\u001b[1mkiara module [\u001b[0m\u001b[1;36mOPTIONS\u001b[0m\u001b[1m] \u001b[0m\u001b[1;36mCOMMAND\u001b[0m\u001b[1m [\u001b[0m\u001b[1;36mARGS\u001b[0m\u001b[1m]...\u001b[0m\u001b[1m \u001b[0m\u001b[1m \u001b[0m \u001b[1m \u001b[0m Module-related sub-commands. \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Options \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-help\u001b[0m \u001b[1;32m-h\u001b[0m Show this message and exit. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m \u001b[2m\u256d\u2500\u001b[0m\u001b[2m Commands \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mexplain \u001b[0m\u001b[1;36m \u001b[0m Print details of a module type. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mexplain-instance \u001b[0m\u001b[1;36m \u001b[0m Describe a module instance. \u001b[2m\u2502\u001b[0m \u001b[2m\u2502\u001b[0m \u001b[1;36mlist \u001b[0m\u001b[1;36m \u001b[0m List available module data_types. \u001b[2m\u2502\u001b[0m \u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m","title":"Getting help"},{"location":"usage/#complex-inputs","text":"TBD","title":"Complex inputs"},{"location":"usage/getting_started/","tags":["tutorial"],"text":"Getting started \u00b6 This guide walks through some of the important (and some of the lesser important) features of kiara , the goal is to introduce new users to the overall framework, so they can get a feeling for what it can do, and whether it might be useful for their own usage scenarios. Setting up kiara \u00b6 In order to use kiara , we'll need to install it into a Python virtual (or conda-) environment, along all the plugins we might want to use. For the purpose of this tutorial, we'll use conda to create such an environment, but you can of course use a 'normal' virtualenv if you prefer. How to install conda itself is out of scope of this tutorial, but you should not have problems finding instructions online. One simple way is to install the Anaconda (individual edition) , then use the Anaconda navigator to create a new environment, install the 'git' package in it if your system does not already have it (you can install 'git' by running the conda install -c anaconda git command in your terminal for example), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment already activated. Here's how to create the environment, activate it, then install the necessary dependencies (assuming conda is installed). At some point in the process, you may be prompted by the terminal to confirm further proceeding (generally by typing \"y\" and enter) to complete all the steps. conda create -n kiara_tutorial python=3.9 conda activate kiara_tutorial conda install -c conda-forge mamba mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular kiara_plugin.network_analysis Note We are using mamba as our package manager here, instead of 'pure' conda. This is optional, but recommended since it makes things a lot faster. Getting some example data \u00b6 For this tutorial, we'll need some example data, so we can use kiara against it. We've prepared a git repository for that purpose: git clone https://github.com/DHARPA-Project/kiara.examples.git cd kiara.examples Specifically, here we'll be using two CSV files that were created by my colleague Lena Jaskov : files The files contain information about connection (edges) between medical journals ( JournalEdges1902.csv ), as well as additional metadata for the journals themselves ( JournalNodes1902.csv ). We'll use that data to create table and graph structures with kiara . Checking for available operations \u00b6 First, let's have a look which operations are available, and what we can do with them: kiara operation list \u256d\u2500 Available operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from Create a database from a csv_file value. \u2502 \u2502 create.database.from.csv_file_bundle create_from Create a database from a csv_file_bundle value. \u2502 \u2502 create.database.from.table create_from Create a database value from a table. \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from Create a table from a csv_file value. \u2502 \u2502 create.table.from.text_file_bundle create_from Create a table value from a text file_bundle. \u2502 \u2502 date.check_range Check whether a date falls within a specified date \u2502 \u2502 range. \u2502 \u2502 date.extract_from_string Extract a date object from a string. \u2502 \u2502 export.file.as.file export_as -- n/a -- \u2502 \u2502 export.network_data.as.csv_files export_as Export network data as 2 csv files (one for edges, one \u2502 \u2502 for nodes. \u2502 \u2502 export.network_data.as.graphml_file export_as Export network data as graphml file. \u2502 \u2502 export.network_data.as.sql_dump export_as Export network data as a sql dump file. \u2502 \u2502 export.network_data.as.sqlite_db export_as Export network data as a sqlite database file. \u2502 \u2502 export.table.as.csv_file export_as Export a table as csv file. \u2502 \u2502 extract.date_array.from.table pipeline Extract a date array from a table column. \u2502 \u2502 file_bundle.pick_file Pick a single file from a file_bundle value. \u2502 \u2502 filter.table Filter a table. \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local \u2502 \u2502 filesystem. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module -- n/a -- \u2502 \u2502 list.contains Check whether an element is in a list. \u2502 \u2502 logic.and Returns 'True' if both inputs are 'True'. \u2502 \u2502 logic.nand pipeline Returns 'False' if both inputs are 'True'. \u2502 \u2502 logic.nor pipeline Returns 'True' if both inputs are 'False'. \u2502 \u2502 logic.not Negates the input. \u2502 \u2502 logic.or Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 logic.xor pipeline Returns 'True' if exactly one of it's two inputs is \u2502 \u2502 'True'. \u2502 \u2502 my_kiara_module.example A very simple example module; concatenate two strings. \u2502 \u2502 parse.date_array Create an array of date objects from an array of \u2502 \u2502 strings. \u2502 \u2502 query.database Execute a sql query against a (sqlite) database. \u2502 \u2502 query.table Execute a sql query against an (Arrow) table. \u2502 \u2502 string_filter.tokens filter -- n/a -- \u2502 \u2502 table.cut_column Cut off one column from a table, returning an array. \u2502 \u2502 table_filter.drop_columns filter -- n/a -- \u2502 \u2502 table_filter.select_columns filter -- n/a -- \u2502 \u2502 table_filter.select_rows filter -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this guide we'll use the term operation to indicate an entity that transforms data in some way or form. kiara also has the concept of module (the differences are explained in more detail here ), and in most cases the meaning of ' module ' and ' operation ' is roughly the same. Especially in the context of this 'Getting started' guide. Nonetheless, keep in mind that technically both terms refer to different things. Importing data, and creating a table \u00b6 Tables are arguably the most used (and useful) data structures in data science and data engineering. They come in different forms; some people call them spreadsheets, or dataframes. We're not fancy, so we won't do that: we'll call them tables. A depressingly large amount of (tabular) data comes in CSV files, which is why we'll use one as an example here. Specifically, we will use JournalNodes1902.csv . As stated above, this file contains information about historical medical journals (name, type, where it was from, etc.), and we'll later use it as the table which will provide node information in a network graph. We want to convert this file into a 'proper' table structure, because that will make subsequent processing faster, and also simpler in a lot of cases. 'Proper', in this case means we'll convert it into a better format for internal use, for example containing information about the data type in each column, among other things. Finding the right command, and how to use it \u00b6 kiara likes its data 'onboarded' (or: 'imported'), meaning it prefers to work with data that was imported into its internal data store. This effectively duplicates a file on a users filesystem (and depending on the filesystem used this could mean doubling the hard-disk space required for that particular dataset). The reason behind this preference is that this ensures the data won't be modified by an external application after import. This enables kiara to employ some techniques to save memory, hard-disk space as well as cpu-resources down the line. So, in most cases, the first thing you (as a user) want to do is 'import' the source data you want to work with. So, let's run the operation list command again, but let's filter using the term 'import': kiara operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Importing the 'raw' file \u00b6 After looking at the kiara operation list output, it looks like the import.file module might be just what we need (to be honest, import.table.from.csv_file is what we'd really use if we weren't stuck in this getting-started guide, but doing that would skip over a few important basics that are worth understanding). kiara has the run sub-command, which is used to execute operations. If we only provide a module name, and not any input, this command will tell us what it expects: kiara run import.file \u256d\u2500 Run info: import.file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: import.file \u2502 \u2502 \u2502 \u2502 Import a file from the local filesystem. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path not set string The local path to yes \u2502 \u2502 the file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file The loaded files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As makes obvious sense, we need to provide a path input, of type string , letting kiara know where to pick up the file. The kiara command-line interface can take complex inputs like dictionaries, but fortunately this is not necessary here. If you ever come into a situation where you need that, check out this section . For simple inputs like string-type things, all we need to do is provide the input name, followed by '=' and the value itself: kiara run import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see from the terminal output, this produced one piece of output data: file (referring to the imported file), and it displays a preview of the file in question for us. By itself, this doesn't do anything yet, it just reads the file and then stops. What we want in this case is to 'save' the file, so we can refer to it again later. The process of 'saving' a value in kiara persists the file (rather: it's content and some metadata) into the kiara data store, giving it an internal unique id (string), and allows the user to 'tag' the value with one or multiple aliases. Aliases are names that are meaningful to the user, in order to make it easy to refer to datasets later on. kiara supports saving any of the output values of a kiara run command via the --save flag. This --save parameter takes a single string as argument, and can be used in two ways: if you want to save all output fields of a run you can just provide a single string (for example imported_journal_csv ) as the parameter. In this case, kiara will store all result items with an auto-generated alias in the form of [save_argument].[field_name] . In our case this would result in one item being store in the data store, with the alias imported_journal_csv.file . if you want to save only a subset of result values, or want to have more control about the aliases those results get, you can use the --save parameter for every field you want to persist. In this case the argument to --save must be in the form of: [field_name]=[alias] . You can use the --save parameter multiple times, with different field names. In our case, lets opt for the second option: kiara run --save file=journal_nodes_file import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file fd09e7d9-be52-4f3f-b805-9ba7ce\u2026 journal_nodes_file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Checking the data store \u00b6 To check whether that worked, we can list all of our items in the data store, and see if the one we just created is in there: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All right! Looks like this worked. Creating a table from an imported CSV file \u00b6 CSV files are usually not much use by themselves, in most cases we want to create a table-like structure from them, so we can efficiently query the data. This usually also makes sure that the structure and format of the file is valid. Let's ask kiara what 'create' related operations it has available: kiara operation list create \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from Create a database from a csv_file value. \u2502 \u2502 create.database.from.csv_file_bundle create_from Create a database from a csv_file_bundle value. \u2502 \u2502 create.database.from.table create_from Create a database value from a table. \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from Create a table from a csv_file value. \u2502 \u2502 create.table.from.text_file_bundle create_from Create a table value from a text file_bundle. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Righto, looks like create.table.from.csv_file might be our ticket! Let's see what it does: kiara operation explain create.table.from.csv_file \u256d\u2500 Operation: create.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a table from a csv_file value. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file csv_file The type yes -- no \u2502 \u2502 of the default \u2502 \u2502 source -- \u2502 \u2502 value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, it needs an input csv_file of type file , and will return a 'table'-named output of type, well ... table . Looks good. Here is how we run this: kiara run create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische specialized: psychiatry and neuro Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neuro Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psycholo specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psych specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nerve specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie un specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psy specialized: psychology and pedag Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtl specialized: anthropology, crimin Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Geric specialized: anthropology, crimin Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neuro Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrif general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspfl general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochensc general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centra specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seel specialized: psychiatry and neuro Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Patho specialized: anatomy, physiology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this example we pre-pend the right side of the csv_file= argument with alias: . This is necessary to make it clear to kiara that we mean a dataset that lives in its data store, and we want to refer to it via its alias. Otherwise, kiara would have just interpreted the input as a string, and since that is of the wrong input type (we needed a table), it would have thrown an error. That output looks good, right? Much more table-y then before. Only thing is: we want to again 'save' this output, so we can use it later directly. No big deal, just like last time: kiara run --output silent --save table=journal_nodes_table create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table afc950b2-ee7a-4d9e-aece-9fcca\u2026 journal_nodes_table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we use the --output silent command line option to supress any output of values. We've seen this already in the last invocation of this command. kiara will still tell us the id of the value it just saved. Checking the data store, again \u00b6 Now, let's look again at the content of the kiara data store: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 journal_nodes_table table 42.79 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, there are 2 items now: one file , and one table . If you ever want to get more details about any of the items in the data store, you can use one of those commands: Display information about the data: kiara data explain \u00b6 kiara data explain alias:journal_nodes_table \u256d\u2500 Value details for: alias:journal_nodes_table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id afc950b2-ee7a-4d9e-aece-9fcca4d1c1f9 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 TableType \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"d58722fd-6c64-4269-aefe-03cbd9b51945\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"80056690-683e-4eed-b455-dc78e77511c4\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAn89Et1ENzfoASJRYcWEceyfRiPg664mN4nnHLFnjRLyg \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The result value. \u2502 \u2502 \u2502 \u2502 value_size 42.79 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This command prints out the metadata kiara has stored about a value item. This commands supports displaying several internally important metadata details of stored datasets, check out the available options with kiara data explain --help . One option that is particularly interesting is the --properties one, which displays all the metadata properties kiara has collected about a value. We will experiment with this option a bit later in this tutorial. Display the data itself: kiara data load \u00b6 kiara data load -s alias:journal_nodes_table Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German 296 Die deutsche Klinik am Eingange des zwanzigste general medicine Berlin German Empire Germany 52.52 13.405 German 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und P specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin u specialized: anthropology, criminology and fore Berlin German Empire Germany 52.52 13.405 German 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatr specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and fore Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German 206 Ergebnisse der Allgemeinen Pathologie und Path specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German Note If you omit the -s flag, this command will let you browse the table (or any other supported data type) interactively, similar to a pager application. This command loads the actual data, and prints out its content (or a representation of it that makes sense in a terminal-context). Querying the table data \u00b6 This section is a bit more advanced, so you can skip it if you want. It's just to show an example of what can be done with a stored table data item. We'll be using the SQL query language to find the names and types of all journals from Berlin. The query for this is: select Label , JournalType from data where City = 'Berlin' The kiara module we are going to use is called query.table . Let's check again the parameters this module expects: kiara run query.table \u256d\u2500 Run info: query.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: query.table \u2502 \u2502 \u2502 \u2502 Execute a sql query against an (Arrow) table. \u2502 \u2502 \u2502 \u2502 The default relation name for the sql query is 'data', but can be modified \u2502 \u2502 by the 'relation_name' config option/input. \u2502 \u2502 \u2502 \u2502 If the 'query' module config option is not set, users can provide their own \u2502 \u2502 query, otherwise the pre-set one will be used. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query not set string The query. yes \u2502 \u2502 relation_name valid string The name the no data \u2502 \u2502 table is \u2502 \u2502 referred to in \u2502 \u2502 the sql query. \u2502 \u2502 table not set table The table to yes \u2502 \u2502 query \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table The query result. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Aha. table , and query are required. Good, we have both. In this example we'll use the data item we've stored as input for another workflow. That goes like this: kiara run query.table table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table \u2502 \u2502 Label JournalType \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 Die Krankenpflege specialized: therap \u2502 \u2502 Die deutsche Klinik general medicine \u2502 \u2502 Therapeutische Mona specialized: therap \u2502 \u2502 Allgemeine Zeitschr specialized: psychi \u2502 \u2502 Archiv f\u00fcr Psychiat specialized: psychi \u2502 \u2502 Berliner klinische general medicine \u2502 \u2502 Charit\u00e9 Annalen general medicine \u2502 \u2502 Monatsschrift f\u00fcr P specialized: psychi \u2502 \u2502 Virchows Archiv specialized: anatom \u2502 \u2502 Zeitschrift f\u00fcr p\u00e4d specialized: psycho \u2502 \u2502 Vierteljahrsschrift specialized: anthro \u2502 \u2502 Centralblatt f\u00fcr Ne specialized: psychi \u2502 \u2502 Russische medicinis general medicine \u2502 \u2502 Deutsche Aerzte-Zei general medicine \u2502 \u2502 Monatsschrift f\u00fcr G specialized: gyneco \u2502 \u2502 Archiv f\u00fcr klinisch specialized: surger \u2502 \u2502 Zeitschrift f\u00fcr kli general medicine \u2502 \u2502 Deutsche milit\u00e4r\u00e4rz specialized: milita \u2502 \u2502 Jahresbericht \u00fcber specialized: psychi \u2502 \u2502 \u00c4rztliche Sachverst general medicine \u2502 \u2502 Zeitschrift f\u00fcr die specialized: psychi \u2502 \u2502 Der Pfarrbote news media \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note how we use the alias: -prefix again here, to signify to kiara that what follows is indeed a reference to a dataset, and not a string... Saving the result of the query \u00b6 As it is, the result of this query won't be saved anywhere. This might be fine for queries in exploratory-type situations. But in some cases we might want to store the result of our work, similar to how we imported the original table in the first place. The kiara run command can do that, using the --save flag. It takes as argument a string. If that string contains a '=', it is interpreted as a key value pair where the key is the name of the field we want to save, and the value the alias we want to save it under. Here is how that goes: kiara run query.table --output=silent --save query_result=berlin_journals table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table 1d926c95-a2b2-42d6-a8f6-bd\u2026 berlin_journals \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From looking at the output, it seems that saving our result has worked. We can make sure by letting kiara 'explain' to us the data that is stored under the alias 'berlin_journals'. This time, let's also display the result tables properties (by using the --properties flag: kiara data explain --properties alias:berlin_journals \u256d\u2500 Value details for: alias:berlin_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 1d926c95-a2b2-42d6-a8f6-bd358d7e21be \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 TableType \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 properties \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1672 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"fffd17c4-bd67-4125-919c-45ec7d2923e6\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"c9a3b894-be9e-449e-85d5-59c1a278daad\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAq5Ty5hNtUaKWouPmS75LxteiQQv6Ue6Jsq9v39QoMPyw \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The query result. \u2502 \u2502 \u2502 \u2502 value_size 2.63 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1672 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Generating a network graph \u00b6 Our goal for this tutorial is to create a network graph, and investigate its properties. Network graphs are usually created from one or two pieces of data (both tabular in nature): edges (mandatory): information about what nodes exist, and if and how they are connected nodes information (optional): information about attributes of each node Note In this tutorial we'll go through all the steps necessary to create a network graph object from two CSV files, one by one. This is a bit cumbersome, but it'll help you understand what actually happens. In a later tutorial we'll show how to create a kiara pipeline to combine all those steps into one. Importing edges data, creating a table item from it \u00b6 We already have our nodes imported into kiara (with the alias my_first_table ). Now we need to do the same for our edges. Similar to what we have done above, we want to import the file into the kiara data store, and then convert it into a table. This time, let's just use a pre-pared (so-called) pipeline operation, which basically runs both operations in one, and feeds the right input(s) into the right input(s): kiara operation explain import.table.from.csv_file \u256d\u2500 Operation: import.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Import a table from a csv file. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path string The yes -- no \u2502 \u2502 local default \u2502 \u2502 path to -- \u2502 \u2502 the \u2502 \u2502 file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file The loaded files. \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, let's see: kiara run --save journal_edges import.table.from.csv_file path=examples/data/journals/JournalEdges1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffSource,Target,weight \u2502 \u2502 1,1,11 \u2502 \u2502 1,5,1 \u2502 \u2502 1,7,6 \u2502 \u2502 1,8,15 \u2502 \u2502 1,10,24 \u2502 \u2502 1,13,1 \u2502 \u2502 1,14,2 \u2502 \u2502 1,15,8 \u2502 \u2502 1,18,7 \u2502 \u2502 1,20,48 \u2502 \u2502 1,21,7 \u2502 \u2502 1,22,4 \u2502 \u2502 1,23,75 \u2502 \u2502 1,24,1 \u2502 \u2502 1,26,8 \u2502 \u2502 1,29,1 \u2502 \u2502 1,30,14 \u2502 \u2502 1,35,16 \u2502 \u2502 1,36,23 \u2502 \u2502 1,37,4 \u2502 \u2502 1,38,5 \u2502 \u2502 1,39,4 \u2502 \u2502 1,40,10 \u2502 \u2502 1,41,2 \u2502 \u2502 1,42,4 \u2502 \u2502 1,43,2 \u2502 \u2502 1,44,1 \u2502 \u2502 1,45,5 \u2502 \u2502 1,46,7 \u2502 \u2502 1,47,2 \u2502 \u2502 1,56,1 \u2502 \u2502 1,58,34 \u2502 \u2502 1,61,9 \u2502 \u2502 1,63,12 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Source Target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result values \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file b57d6972-f863-425f-a\u2026 journal_edges.impor\u2026 \u2502 \u2502 table table 14b4ae43-e76c-4800-9\u2026 journal_edges.table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we've used a simple string (without '=') with the --save option, and as you can see, kiara created two namespaced aliases for the result items. At this stage we'll have two relevant tables in our store: journal_edges.table , and journal_nodes_table (note how both use different naming schemes due to us using the --save option differently in both cases): kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_edges.table table 9.13 KB \u2502 \u2502 journal_edges.imported_file file 3.02 KB \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 berlin_journals table 2.63 KB \u2502 \u2502 journal_nodes_table table 42.79 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Creating the graph \u00b6 Now that we have the edges data in kiara in a useful format, we can create the graph object. The data type for graphs in kiara is called network_data , so let's check out all the operations kiara has to offer related to network_data : kiara operation list network_data \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 export.network_data.as.csv_files export_as Export network data as 2 csv files (one for edges, one for nodes. \u2502 \u2502 export.network_data.as.graphml_file export_as Export network data as graphml file. \u2502 \u2502 export.network_data.as.sql_dump export_as Export network data as a sql dump file. \u2502 \u2502 export.network_data.as.sqlite_db export_as Export network data as a sqlite database file. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Hm, create.network_data.from.tables looks good, right? Let's see that operations interface: kiara operation explain create.network_data.from.tables \u256d\u2500 Operation: create.network_data.from.tables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2502 This module needs at least one table as input, providing the edges of the resulting network data \u2502 \u2502 set. \u2502 \u2502 If no further table is created, basic node information will be automatically created by using \u2502 \u2502 unique values from \u2502 \u2502 the edges source and target columns. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 edges table A table that contains the edges yes -- no default -- \u2502 \u2502 data. \u2502 \u2502 source_column_name string The name of the source column no source \u2502 \u2502 name in the edges table. \u2502 \u2502 target_column_name string The name of the target column no target \u2502 \u2502 name in the edges table. \u2502 \u2502 edges_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 nodes table A table that contains the nodes no -- no default -- \u2502 \u2502 data. \u2502 \u2502 id_column_name string The name (before any potential no id \u2502 \u2502 column mapping) of the \u2502 \u2502 node-table column that contains \u2502 \u2502 the node identifier (used in the \u2502 \u2502 edges table). \u2502 \u2502 label_column_name string The name of a column that no -- no default -- \u2502 \u2502 contains the node label (before \u2502 \u2502 any potential column name \u2502 \u2502 mapping). If not specified, the \u2502 \u2502 value of the id value will be \u2502 \u2502 used as label. \u2502 \u2502 nodes_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data The network/graph data. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From this information we can assemble our command, using alias:edges_table as the main input, and saving it using the alias journals_graph . We can figure the values for the other inputs out be running kiara data explain --properties journal_edges.table , which will give us the edge column names, among other things (and, subsequently, `kiara data explain --properties journal_nodes_table. So, here goes nothing: kiara run --save network_data=journals_graph create.network_data.from.tables edges=alias:journal_edges.table source_column_name=Source target_column_name=Target nodes=alias:journal_nodes_table id_column_name=Id label_column_name=Label \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data \u2502 \u2502 Table: edges \u2502 \u2502 \u2502 \u2502 source target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 Table: nodes \u2502 \u2502 \u2502 \u2502 id label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pat specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and fore Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and fore Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und Pathol specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data 98d1a914-a0bc-40a0-a30a-027010812405 journals_graph \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To confirm our graph data is created, let's check the data store: kiara data explain --properties alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 98d1a914-a0bc-40a0-a30a-027010812405 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name network_data \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analysis.data_types \u2502 \u2502 full_name kiara_plugin.network_analysis.data_types.NetworkDataType \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 properties \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \"e005f763-ffa1-4a8c-9944-7fa0d79c2729\", \u2502 \u2502 \"metadata.graph_properties\": \"11ccecca-3ffd-4f53-b224-348a6a160bf9\", \u2502 \u2502 \"metadata.python_class\": \"bf39345e-a3d4-4349-9d98-1a1470904ef3\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAoZJjYTx2q7sc4tGRsVLeJypMqHdxLPmdCNiMxsckHn35 \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All good. Also, check out the metadata kiara knows about the graph already. Side-note: investigating the graph value lineage \u00b6 kiara keeps track of all the modules and inputs that went into producing a value, basically its entire ancestry. This is not the place to explain why, and how that can be very powerful and useful. But if you are ever interested about what went into creating a particular value, you can do this with: kiara data explain --lineage alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 98d1a914-a0bc-40a0-a30a-027010812405 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name network_data \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 NetworkDat\u2026 \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (dict) \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (dict) \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \u2502 \u2502 \"e005f763-ffa1-4a8c-9944-7fa0d79c2729\", \u2502 \u2502 \"metadata.graph_properties\": \u2502 \u2502 \"11ccecca-3ffd-4f53-b224-348a6a160bf9\", \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"bf39345e-a3d4-4349-9d98-1a1470904ef3\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAoZJjYTx2q7sc4tGRsVLeJypMqHdxLPmdCNiMxsckHn35 \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) = \u2502 \u2502 \u2502 14b4ae43-e76c-4800-9794-1986f81ea6b7 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 b57d6972-f863-425f-a13e-37122d2f985c \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 e39584e9-deb1-4cd3-86c5-9a9a6f0\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (dict) = \u2502 \u2502 \u2502 d796c0a9-801c-453d-97b6-1215afdd0ba2 \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) = \u2502 \u2502 \u2502 dd80eec7-3218-4731-a65e-09c375ec7c87 \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) = \u2502 \u2502 \u2502 5dff27c9-5309-404f-8d55-1fd4d0446f26 \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) = \u2502 \u2502 \u2502 afc950b2-ee7a-4d9e-aece-9fcca4d1c1f9 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 fd09e7d9-be52-4f3f-b805-9ba7ce789ba4 \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 285fb30f-97f5-4c18-b8be-7629b91\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (dict) = \u2502 \u2502 \u2502 a805a2da-b048-43f6-ae2e-dcb1bde339a7 \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) = \u2502 \u2502 \u2502 b82ff7ad-a0cf-4737-ba65-3c1e5efbe6b0 \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) = \u2502 \u2502 64209aa6-a26b-4395-850f-9c649161b057 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, this basically describes what we've done so far, to get to this stage. You could now do a kiara explain data value:<value_id> on each of the value ids you see here, if you were so inclined. More \u00b6 ... to come ...","title":"Getting started"},{"location":"usage/getting_started/#getting-started","text":"This guide walks through some of the important (and some of the lesser important) features of kiara , the goal is to introduce new users to the overall framework, so they can get a feeling for what it can do, and whether it might be useful for their own usage scenarios.","title":"Getting started"},{"location":"usage/getting_started/#setting-up-kiara","text":"In order to use kiara , we'll need to install it into a Python virtual (or conda-) environment, along all the plugins we might want to use. For the purpose of this tutorial, we'll use conda to create such an environment, but you can of course use a 'normal' virtualenv if you prefer. How to install conda itself is out of scope of this tutorial, but you should not have problems finding instructions online. One simple way is to install the Anaconda (individual edition) , then use the Anaconda navigator to create a new environment, install the 'git' package in it if your system does not already have it (you can install 'git' by running the conda install -c anaconda git command in your terminal for example), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment already activated. Here's how to create the environment, activate it, then install the necessary dependencies (assuming conda is installed). At some point in the process, you may be prompted by the terminal to confirm further proceeding (generally by typing \"y\" and enter) to complete all the steps. conda create -n kiara_tutorial python=3.9 conda activate kiara_tutorial conda install -c conda-forge mamba mamba install -c conda-forge -c dharpa kiara kiara_plugin.core_types kiara_plugin.tabular kiara_plugin.network_analysis Note We are using mamba as our package manager here, instead of 'pure' conda. This is optional, but recommended since it makes things a lot faster.","title":"Setting up kiara"},{"location":"usage/getting_started/#getting-some-example-data","text":"For this tutorial, we'll need some example data, so we can use kiara against it. We've prepared a git repository for that purpose: git clone https://github.com/DHARPA-Project/kiara.examples.git cd kiara.examples Specifically, here we'll be using two CSV files that were created by my colleague Lena Jaskov : files The files contain information about connection (edges) between medical journals ( JournalEdges1902.csv ), as well as additional metadata for the journals themselves ( JournalNodes1902.csv ). We'll use that data to create table and graph structures with kiara .","title":"Getting some example data"},{"location":"usage/getting_started/#checking-for-available-operations","text":"First, let's have a look which operations are available, and what we can do with them: kiara operation list \u256d\u2500 Available operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from Create a database from a csv_file value. \u2502 \u2502 create.database.from.csv_file_bundle create_from Create a database from a csv_file_bundle value. \u2502 \u2502 create.database.from.table create_from Create a database value from a table. \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from Create a table from a csv_file value. \u2502 \u2502 create.table.from.text_file_bundle create_from Create a table value from a text file_bundle. \u2502 \u2502 date.check_range Check whether a date falls within a specified date \u2502 \u2502 range. \u2502 \u2502 date.extract_from_string Extract a date object from a string. \u2502 \u2502 export.file.as.file export_as -- n/a -- \u2502 \u2502 export.network_data.as.csv_files export_as Export network data as 2 csv files (one for edges, one \u2502 \u2502 for nodes. \u2502 \u2502 export.network_data.as.graphml_file export_as Export network data as graphml file. \u2502 \u2502 export.network_data.as.sql_dump export_as Export network data as a sql dump file. \u2502 \u2502 export.network_data.as.sqlite_db export_as Export network data as a sqlite database file. \u2502 \u2502 export.table.as.csv_file export_as Export a table as csv file. \u2502 \u2502 extract.date_array.from.table pipeline Extract a date array from a table column. \u2502 \u2502 file_bundle.pick_file Pick a single file from a file_bundle value. \u2502 \u2502 filter.table Filter a table. \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local \u2502 \u2502 filesystem. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 kiara_plugin.my_kiara_module.my_kiara_module.tutorial_module -- n/a -- \u2502 \u2502 list.contains Check whether an element is in a list. \u2502 \u2502 logic.and Returns 'True' if both inputs are 'True'. \u2502 \u2502 logic.nand pipeline Returns 'False' if both inputs are 'True'. \u2502 \u2502 logic.nor pipeline Returns 'True' if both inputs are 'False'. \u2502 \u2502 logic.not Negates the input. \u2502 \u2502 logic.or Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 logic.xor pipeline Returns 'True' if exactly one of it's two inputs is \u2502 \u2502 'True'. \u2502 \u2502 my_kiara_module.example A very simple example module; concatenate two strings. \u2502 \u2502 parse.date_array Create an array of date objects from an array of \u2502 \u2502 strings. \u2502 \u2502 query.database Execute a sql query against a (sqlite) database. \u2502 \u2502 query.table Execute a sql query against an (Arrow) table. \u2502 \u2502 string_filter.tokens filter -- n/a -- \u2502 \u2502 table.cut_column Cut off one column from a table, returning an array. \u2502 \u2502 table_filter.drop_columns filter -- n/a -- \u2502 \u2502 table_filter.select_columns filter -- n/a -- \u2502 \u2502 table_filter.select_rows filter -- n/a -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this guide we'll use the term operation to indicate an entity that transforms data in some way or form. kiara also has the concept of module (the differences are explained in more detail here ), and in most cases the meaning of ' module ' and ' operation ' is roughly the same. Especially in the context of this 'Getting started' guide. Nonetheless, keep in mind that technically both terms refer to different things.","title":"Checking for available operations"},{"location":"usage/getting_started/#importing-data-and-creating-a-table","text":"Tables are arguably the most used (and useful) data structures in data science and data engineering. They come in different forms; some people call them spreadsheets, or dataframes. We're not fancy, so we won't do that: we'll call them tables. A depressingly large amount of (tabular) data comes in CSV files, which is why we'll use one as an example here. Specifically, we will use JournalNodes1902.csv . As stated above, this file contains information about historical medical journals (name, type, where it was from, etc.), and we'll later use it as the table which will provide node information in a network graph. We want to convert this file into a 'proper' table structure, because that will make subsequent processing faster, and also simpler in a lot of cases. 'Proper', in this case means we'll convert it into a better format for internal use, for example containing information about the data type in each column, among other things.","title":"Importing data, and creating a table"},{"location":"usage/getting_started/#finding-the-right-command-and-how-to-use-it","text":"kiara likes its data 'onboarded' (or: 'imported'), meaning it prefers to work with data that was imported into its internal data store. This effectively duplicates a file on a users filesystem (and depending on the filesystem used this could mean doubling the hard-disk space required for that particular dataset). The reason behind this preference is that this ensures the data won't be modified by an external application after import. This enables kiara to employ some techniques to save memory, hard-disk space as well as cpu-resources down the line. So, in most cases, the first thing you (as a user) want to do is 'import' the source data you want to work with. So, let's run the operation list command again, but let's filter using the term 'import': kiara operation list import \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import.database.from.csv_file pipeline Import a database from a csv file. \u2502 \u2502 import.file Import a file from the local filesystem. \u2502 \u2502 import.file_bundle Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 import.table.from.csv_file pipeline Import a table from a csv file. \u2502 \u2502 import.table.from.text_file_bundle pipeline Load a table from a bundle of text files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Finding the right command, and how to use it"},{"location":"usage/getting_started/#importing-the-raw-file","text":"After looking at the kiara operation list output, it looks like the import.file module might be just what we need (to be honest, import.table.from.csv_file is what we'd really use if we weren't stuck in this getting-started guide, but doing that would skip over a few important basics that are worth understanding). kiara has the run sub-command, which is used to execute operations. If we only provide a module name, and not any input, this command will tell us what it expects: kiara run import.file \u256d\u2500 Run info: import.file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: import.file \u2502 \u2502 \u2502 \u2502 Import a file from the local filesystem. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path not set string The local path to yes \u2502 \u2502 the file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file The loaded files. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As makes obvious sense, we need to provide a path input, of type string , letting kiara know where to pick up the file. The kiara command-line interface can take complex inputs like dictionaries, but fortunately this is not necessary here. If you ever come into a situation where you need that, check out this section . For simple inputs like string-type things, all we need to do is provide the input name, followed by '=' and the value itself: kiara run import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see from the terminal output, this produced one piece of output data: file (referring to the imported file), and it displays a preview of the file in question for us. By itself, this doesn't do anything yet, it just reads the file and then stops. What we want in this case is to 'save' the file, so we can refer to it again later. The process of 'saving' a value in kiara persists the file (rather: it's content and some metadata) into the kiara data store, giving it an internal unique id (string), and allows the user to 'tag' the value with one or multiple aliases. Aliases are names that are meaningful to the user, in order to make it easy to refer to datasets later on. kiara supports saving any of the output values of a kiara run command via the --save flag. This --save parameter takes a single string as argument, and can be used in two ways: if you want to save all output fields of a run you can just provide a single string (for example imported_journal_csv ) as the parameter. In this case, kiara will store all result items with an auto-generated alias in the form of [save_argument].[field_name] . In our case this would result in one item being store in the data store, with the alias imported_journal_csv.file . if you want to save only a subset of result values, or want to have more control about the aliases those results get, you can use the --save parameter for every field you want to persist. In this case the argument to --save must be in the form of: [field_name]=[alias] . You can use the --save parameter multiple times, with different field names. In our case, lets opt for the second option: kiara run --save file=journal_nodes_file import.file path=examples/data/journals/JournalNodes1902.csv \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file \ufeffId,Label,JournalType,City,CountryNetworkTime,Prese\u2026 \u2502 \u2502 75,Psychiatrische en neurologische \u2502 \u2502 bladen,specialized: psychiatry and \u2502 \u2502 neurology,Amsterdam,Netherlands,Netherlands,52.3666\u2026 \u2502 \u2502 36,The American Journal of Insanity,specialized: \u2502 \u2502 psychiatry and neurology,Baltimore,United \u2502 \u2502 States,United States,39.289444,-76.615278,English \u2502 \u2502 208,The American Journal of Psychology,specialized: \u2502 \u2502 psychology,Baltimore,United States,United \u2502 \u2502 States,39.289444,-76.615278,English \u2502 \u2502 295,Die Krankenpflege,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 296,Die deutsche Klinik am Eingange des zwanzigsten \u2502 \u2502 Jahrhunderts,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 300,Therapeutische Monatshefte,specialized: \u2502 \u2502 therapy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 1,Allgemeine Zeitschrift f\u00fcr \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 7,Archiv f\u00fcr Psychiatrie und \u2502 \u2502 Nervenkrankheiten,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 10,Berliner klinische Wochenschrift,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 13,Charit\u00e9 Annalen,general medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 21,Monatsschrift f\u00fcr Psychiatrie und \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 29,Virchows Archiv,\"specialized: anatomy, physiology \u2502 \u2502 and pathology\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 31,Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und \u2502 \u2502 Pathologie,specialized: psychology and \u2502 \u2502 pedagogy,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 42,Vierteljahrsschrift f\u00fcr gerichtliche Medizin und \u2502 \u2502 \u00f6ffentliches Sanit\u00e4tswesen,\"specialized: \u2502 \u2502 anthropology, criminology and \u2502 \u2502 forensics\",Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 47,Centralblatt f\u00fcr Nervenheilkunde und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 50,Russische medicinische Rundschau,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 76,Deutsche Aerzte-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 87,Monatsschrift f\u00fcr Geburtsh\u00fclfe und \u2502 \u2502 Gyn\u00e4kologie,specialized: gynecology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 108,Archiv f\u00fcr klinische Chirurgie,specialized: \u2502 \u2502 surgery,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 113,Zeitschrift f\u00fcr klinische Medicin,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 159,Deutsche milit\u00e4r\u00e4rztliche \u2502 \u2502 Zeitschrift,specialized: military \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 162,Jahresbericht \u00fcber die Leistungen und \u2502 \u2502 Fortschritte auf dem Gebiete der Neurologie und \u2502 \u2502 Psychiatrie,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 192,\u00c4rztliche Sachverst\u00e4ndigen-Zeitung,general \u2502 \u2502 medicine,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 198,Zeitschrift f\u00fcr die Behandlung Schwachsinniger \u2502 \u2502 und Epileptischer,specialized: psychiatry and \u2502 \u2502 neurology,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 258,Der Pfarrbote,news media,Berlin,German \u2502 \u2502 Empire,Germany,52.52,13.405,German \u2502 \u2502 71,Correspondenz-Blatt f\u00fcr Schweizer Aerzte,general \u2502 \u2502 medicine,Bern,Switzerland,Switzerland,46.948056,7.4\u2026 \u2502 \u2502 6,Archiv f\u00fcr mikroskopische Anatomie,\"specialized: \u2502 \u2502 anatomy, physiology and pathology\",Bonn,German \u2502 \u2502 Empire,Germany,50.733333,7.1,German \u2502 \u2502 203,The Journal of Abnormal Psychology,specialized: \u2502 \u2502 psychology,Boston,United States,United \u2502 \u2502 States,42.358056,-71.063611,English \u2502 \u2502 273,\"Correspondenz-Blatt der Deutschen Gesellschaft \u2502 \u2502 f\u00fcr Anthropologie, Ethnologie und \u2502 \u2502 Urgeschichte\",\"specialized: anthropology, \u2502 \u2502 criminology and forensics\",Braunschweig,German \u2502 \u2502 Empire,Germany,52.266667,10.516667,German \u2502 \u2502 303,Policlinique de Bruxelles,general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 306,Annales de la Soci\u00e9t\u00e9 Belge de \u2502 \u2502 Neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 19,Journal de neurologie,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 25,\"Revue internationale d'\u00e9lectroth\u00e9rapie, de \u2502 \u2502 physiologie, de m\u00e9decine, de chirurgie, \u2502 \u2502 d'obst\u00e9trique, de th\u00e9rapeutique, de chimie et de \u2502 \u2502 pharmacie\",general \u2502 \u2502 medicine,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 35,Bulletin de la Soci\u00e9t\u00e9 de M\u00e9decine Mentale de \u2502 \u2502 Belgique,specialized: psychiatry and \u2502 \u2502 neurology,Brussels,Belgium,Belgium,50.85,4.35,French \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 file file fd09e7d9-be52-4f3f-b805-9ba7ce\u2026 journal_nodes_file \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Importing the 'raw' file"},{"location":"usage/getting_started/#checking-the-data-store","text":"To check whether that worked, we can list all of our items in the data store, and see if the one we just created is in there: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All right! Looks like this worked.","title":"Checking the data store"},{"location":"usage/getting_started/#creating-a-table-from-an-imported-csv-file","text":"CSV files are usually not much use by themselves, in most cases we want to create a table-like structure from them, so we can efficiently query the data. This usually also makes sure that the structure and format of the file is valid. Let's ask kiara what 'create' related operations it has available: kiara operation list create \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.database.from.csv_file create_from Create a database from a csv_file value. \u2502 \u2502 create.database.from.csv_file_bundle create_from Create a database from a csv_file_bundle value. \u2502 \u2502 create.database.from.table create_from Create a database value from a table. \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 create.table.from.csv_file create_from Create a table from a csv_file value. \u2502 \u2502 create.table.from.text_file_bundle create_from Create a table value from a text file_bundle. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Righto, looks like create.table.from.csv_file might be our ticket! Let's see what it does: kiara operation explain create.table.from.csv_file \u256d\u2500 Operation: create.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a table from a csv_file value. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 csv_file csv_file The type yes -- no \u2502 \u2502 of the default \u2502 \u2502 source -- \u2502 \u2502 value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, it needs an input csv_file of type file , and will return a 'table'-named output of type, well ... table . Looks good. Here is how we run this: kiara run create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table \u2502 \u2502 Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische specialized: psychiatry and neuro Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neuro Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psycholo specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psych specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nerve specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie un specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psy specialized: psychology and pedag Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtl specialized: anthropology, crimin Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde specialized: psychiatry and neuro Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Geric specialized: anthropology, crimin Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neuro Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrif general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspfl general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochensc general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centra specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seel specialized: psychiatry and neuro Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Patho specialized: anatomy, physiology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note In this example we pre-pend the right side of the csv_file= argument with alias: . This is necessary to make it clear to kiara that we mean a dataset that lives in its data store, and we want to refer to it via its alias. Otherwise, kiara would have just interpreted the input as a string, and since that is of the wrong input type (we needed a table), it would have thrown an error. That output looks good, right? Much more table-y then before. Only thing is: we want to again 'save' this output, so we can use it later directly. No big deal, just like last time: kiara run --output silent --save table=journal_nodes_table create.table.from.csv_file csv_file=alias:journal_nodes_file \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 table table afc950b2-ee7a-4d9e-aece-9fcca\u2026 journal_nodes_table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we use the --output silent command line option to supress any output of values. We've seen this already in the last invocation of this command. kiara will still tell us the id of the value it just saved.","title":"Creating a table from an imported CSV file"},{"location":"usage/getting_started/#checking-the-data-store-again","text":"Now, let's look again at the content of the kiara data store: kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 journal_nodes_table table 42.79 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, there are 2 items now: one file , and one table . If you ever want to get more details about any of the items in the data store, you can use one of those commands:","title":"Checking the data store, again"},{"location":"usage/getting_started/#display-information-about-the-data-kiara-data-explain","text":"kiara data explain alias:journal_nodes_table \u256d\u2500 Value details for: alias:journal_nodes_table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id afc950b2-ee7a-4d9e-aece-9fcca4d1c1f9 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 TableType \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"d58722fd-6c64-4269-aefe-03cbd9b51945\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"80056690-683e-4eed-b455-dc78e77511c4\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAn89Et1ENzfoASJRYcWEceyfRiPg664mN4nnHLFnjRLyg \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The result value. \u2502 \u2502 \u2502 \u2502 value_size 42.79 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f This command prints out the metadata kiara has stored about a value item. This commands supports displaying several internally important metadata details of stored datasets, check out the available options with kiara data explain --help . One option that is particularly interesting is the --properties one, which displays all the metadata properties kiara has collected about a value. We will experiment with this option a bit later in this tutorial.","title":"Display information about the data: kiara data explain"},{"location":"usage/getting_started/#display-the-data-itself-kiara-data-load","text":"kiara data load -s alias:journal_nodes_table Id Label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German 296 Die deutsche Klinik am Eingange des zwanzigste general medicine Berlin German Empire Germany 52.52 13.405 German 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und P specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin u specialized: anthropology, criminology and fore Berlin German Empire Germany 52.52 13.405 German 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatr specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and fore Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German 206 Ergebnisse der Allgemeinen Pathologie und Path specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German Note If you omit the -s flag, this command will let you browse the table (or any other supported data type) interactively, similar to a pager application. This command loads the actual data, and prints out its content (or a representation of it that makes sense in a terminal-context).","title":"Display the data itself: kiara data load"},{"location":"usage/getting_started/#querying-the-table-data","text":"This section is a bit more advanced, so you can skip it if you want. It's just to show an example of what can be done with a stored table data item. We'll be using the SQL query language to find the names and types of all journals from Berlin. The query for this is: select Label , JournalType from data where City = 'Berlin' The kiara module we are going to use is called query.table . Let's check again the parameters this module expects: kiara run query.table \u256d\u2500 Run info: query.table \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Can't run operation, invalid or insufficient inputs. \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Operation: query.table \u2502 \u2502 \u2502 \u2502 Execute a sql query against an (Arrow) table. \u2502 \u2502 \u2502 \u2502 The default relation name for the sql query is 'data', but can be modified \u2502 \u2502 by the 'relation_name' config option/input. \u2502 \u2502 \u2502 \u2502 If the 'query' module config option is not set, users can provide their own \u2502 \u2502 query, otherwise the pre-set one will be used. \u2502 \u2502 \u2502 \u2502 Inputs: \u2502 \u2502 \u2502 \u2502 field name status type description required default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query not set string The query. yes \u2502 \u2502 relation_name valid string The name the no data \u2502 \u2502 table is \u2502 \u2502 referred to in \u2502 \u2502 the sql query. \u2502 \u2502 table not set table The table to yes \u2502 \u2502 query \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs: \u2502 \u2502 \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table The query result. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Aha. table , and query are required. Good, we have both. In this example we'll use the data item we've stored as input for another workflow. That goes like this: kiara run query.table table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table \u2502 \u2502 Label JournalType \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 Die Krankenpflege specialized: therap \u2502 \u2502 Die deutsche Klinik general medicine \u2502 \u2502 Therapeutische Mona specialized: therap \u2502 \u2502 Allgemeine Zeitschr specialized: psychi \u2502 \u2502 Archiv f\u00fcr Psychiat specialized: psychi \u2502 \u2502 Berliner klinische general medicine \u2502 \u2502 Charit\u00e9 Annalen general medicine \u2502 \u2502 Monatsschrift f\u00fcr P specialized: psychi \u2502 \u2502 Virchows Archiv specialized: anatom \u2502 \u2502 Zeitschrift f\u00fcr p\u00e4d specialized: psycho \u2502 \u2502 Vierteljahrsschrift specialized: anthro \u2502 \u2502 Centralblatt f\u00fcr Ne specialized: psychi \u2502 \u2502 Russische medicinis general medicine \u2502 \u2502 Deutsche Aerzte-Zei general medicine \u2502 \u2502 Monatsschrift f\u00fcr G specialized: gyneco \u2502 \u2502 Archiv f\u00fcr klinisch specialized: surger \u2502 \u2502 Zeitschrift f\u00fcr kli general medicine \u2502 \u2502 Deutsche milit\u00e4r\u00e4rz specialized: milita \u2502 \u2502 Jahresbericht \u00fcber specialized: psychi \u2502 \u2502 \u00c4rztliche Sachverst general medicine \u2502 \u2502 Zeitschrift f\u00fcr die specialized: psychi \u2502 \u2502 Der Pfarrbote news media \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note how we use the alias: -prefix again here, to signify to kiara that what follows is indeed a reference to a dataset, and not a string...","title":"Querying the table data"},{"location":"usage/getting_started/#saving-the-result-of-the-query","text":"As it is, the result of this query won't be saved anywhere. This might be fine for queries in exploratory-type situations. But in some cases we might want to store the result of our work, similar to how we imported the original table in the first place. The kiara run command can do that, using the --save flag. It takes as argument a string. If that string contains a '=', it is interpreted as a key value pair where the key is the name of the field we want to save, and the value the alias we want to save it under. Here is how that goes: kiara run query.table --output=silent --save query_result=berlin_journals table=alias:journal_nodes_table query=\"select Label, JournalType from data where City='Berlin'\" \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 query_result table 1d926c95-a2b2-42d6-a8f6-bd\u2026 berlin_journals \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From looking at the output, it seems that saving our result has worked. We can make sure by letting kiara 'explain' to us the data that is stored under the alias 'berlin_journals'. This time, let's also display the result tables properties (by using the --properties flag: kiara data explain --properties alias:berlin_journals \u256d\u2500 Value details for: alias:berlin_journals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 1d926c95-a2b2-42d6-a8f6-bd358d7e21be \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name table \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 TableType \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 properties \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1672 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"fffd17c4-bd67-4125-919c-45ec7d2923e6\", \u2502 \u2502 \"metadata.table\": \u2502 \u2502 \"c9a3b894-be9e-449e-85d5-59c1a278daad\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAq5Ty5hNtUaKWouPmS75LxteiQQv6Ue6Jsq9v39QoMPyw \u2502 \u2502 value_schema \u2502 \u2502 type table \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The query result. \u2502 \u2502 \u2502 \u2502 value_size 2.63 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\"\u2026 \u2502 \u2502 \"python_module_name\u2026 \u2502 \u2502 \"full_name\": \"kiara\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.table { \u2502 \u2502 \"table\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"Label\", \u2502 \u2502 \"JournalType\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"Label\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"s\u2026 \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"arrow_type_i\u2026 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 22, \u2502 \u2502 \"size\": 1672 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Saving the result of the query"},{"location":"usage/getting_started/#generating-a-network-graph","text":"Our goal for this tutorial is to create a network graph, and investigate its properties. Network graphs are usually created from one or two pieces of data (both tabular in nature): edges (mandatory): information about what nodes exist, and if and how they are connected nodes information (optional): information about attributes of each node Note In this tutorial we'll go through all the steps necessary to create a network graph object from two CSV files, one by one. This is a bit cumbersome, but it'll help you understand what actually happens. In a later tutorial we'll show how to create a kiara pipeline to combine all those steps into one.","title":"Generating a network graph"},{"location":"usage/getting_started/#importing-edges-data-creating-a-table-item-from-it","text":"We already have our nodes imported into kiara (with the alias my_first_table ). Now we need to do the same for our edges. Similar to what we have done above, we want to import the file into the kiara data store, and then convert it into a table. This time, let's just use a pre-pared (so-called) pipeline operation, which basically runs both operations in one, and feeds the right input(s) into the right input(s): kiara operation explain import.table.from.csv_file \u256d\u2500 Operation: import.table.from.csv_file \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Import a table from a csv file. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field \u2502 \u2502 name type descrip\u2026 Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 path string The yes -- no \u2502 \u2502 local default \u2502 \u2502 path to -- \u2502 \u2502 the \u2502 \u2502 file. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file The loaded files. \u2502 \u2502 table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f So, let's see: kiara run --save journal_edges import.table.from.csv_file path=examples/data/journals/JournalEdges1902.csv \u256d\u2500 Results \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file \ufeffSource,Target,weight \u2502 \u2502 1,1,11 \u2502 \u2502 1,5,1 \u2502 \u2502 1,7,6 \u2502 \u2502 1,8,15 \u2502 \u2502 1,10,24 \u2502 \u2502 1,13,1 \u2502 \u2502 1,14,2 \u2502 \u2502 1,15,8 \u2502 \u2502 1,18,7 \u2502 \u2502 1,20,48 \u2502 \u2502 1,21,7 \u2502 \u2502 1,22,4 \u2502 \u2502 1,23,75 \u2502 \u2502 1,24,1 \u2502 \u2502 1,26,8 \u2502 \u2502 1,29,1 \u2502 \u2502 1,30,14 \u2502 \u2502 1,35,16 \u2502 \u2502 1,36,23 \u2502 \u2502 1,37,4 \u2502 \u2502 1,38,5 \u2502 \u2502 1,39,4 \u2502 \u2502 1,40,10 \u2502 \u2502 1,41,2 \u2502 \u2502 1,42,4 \u2502 \u2502 1,43,2 \u2502 \u2502 1,44,1 \u2502 \u2502 1,45,5 \u2502 \u2502 1,46,7 \u2502 \u2502 1,47,2 \u2502 \u2502 1,56,1 \u2502 \u2502 1,58,34 \u2502 \u2502 1,61,9 \u2502 \u2502 1,63,12 \u2502 \u2502 ... \u2502 \u2502 \u2502 \u2502 ... \u2502 \u2502 table table \u2502 \u2502 Source Target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result values \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 imported_file file b57d6972-f863-425f-a\u2026 journal_edges.impor\u2026 \u2502 \u2502 table table 14b4ae43-e76c-4800-9\u2026 journal_edges.table \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Note Here we've used a simple string (without '=') with the --save option, and as you can see, kiara created two namespaced aliases for the result items. At this stage we'll have two relevant tables in our store: journal_edges.table , and journal_nodes_table (note how both use different naming schemes due to us using the --save option differently in both cases): kiara data list \u256d\u2500 Available aliases \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 alias type size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 journal_edges.table table 9.13 KB \u2502 \u2502 journal_edges.imported_file file 3.02 KB \u2502 \u2502 journal_nodes_file file 33.43 KB \u2502 \u2502 berlin_journals table 2.63 KB \u2502 \u2502 journal_nodes_table table 42.79 KB \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Importing edges data, creating a table item from it"},{"location":"usage/getting_started/#creating-the-graph","text":"Now that we have the edges data in kiara in a useful format, we can create the graph object. The data type for graphs in kiara is called network_data , so let's check out all the operations kiara has to offer related to network_data : kiara operation list network_data \u256d\u2500 Filtered operations \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Id Type(s) Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create.network_data.from.tables Create a graph object from one or two tables. \u2502 \u2502 export.network_data.as.csv_files export_as Export network data as 2 csv files (one for edges, one for nodes. \u2502 \u2502 export.network_data.as.graphml_file export_as Export network data as graphml file. \u2502 \u2502 export.network_data.as.sql_dump export_as Export network data as a sql dump file. \u2502 \u2502 export.network_data.as.sqlite_db export_as Export network data as a sqlite database file. \u2502 \u2502 import.network_data.from.csv_files pipeline Load the edges table from a csv file. \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Hm, create.network_data.from.tables looks good, right? Let's see that operations interface: kiara operation explain create.network_data.from.tables \u256d\u2500 Operation: create.network_data.from.tables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Documentation Create a graph object from one or two tables. \u2502 \u2502 \u2502 \u2502 This module needs at least one table as input, providing the edges of the resulting network data \u2502 \u2502 set. \u2502 \u2502 If no further table is created, basic node information will be automatically created by using \u2502 \u2502 unique values from \u2502 \u2502 the edges source and target columns. \u2502 \u2502 \u2502 \u2502 Inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 edges table A table that contains the edges yes -- no default -- \u2502 \u2502 data. \u2502 \u2502 source_column_name string The name of the source column no source \u2502 \u2502 name in the edges table. \u2502 \u2502 target_column_name string The name of the target column no target \u2502 \u2502 name in the edges table. \u2502 \u2502 edges_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 nodes table A table that contains the nodes no -- no default -- \u2502 \u2502 data. \u2502 \u2502 id_column_name string The name (before any potential no id \u2502 \u2502 column mapping) of the \u2502 \u2502 node-table column that contains \u2502 \u2502 the node identifier (used in the \u2502 \u2502 edges table). \u2502 \u2502 label_column_name string The name of a column that no -- no default -- \u2502 \u2502 contains the node label (before \u2502 \u2502 any potential column name \u2502 \u2502 mapping). If not specified, the \u2502 \u2502 value of the id value will be \u2502 \u2502 used as label. \u2502 \u2502 nodes_column_map dict An optional map of original no -- no default -- \u2502 \u2502 column name to desired. \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data The network/graph data. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f From this information we can assemble our command, using alias:edges_table as the main input, and saving it using the alias journals_graph . We can figure the values for the other inputs out be running kiara data explain --properties journal_edges.table , which will give us the edge column names, among other things (and, subsequently, `kiara data explain --properties journal_nodes_table. So, here goes nothing: kiara run --save network_data=journals_graph create.network_data.from.tables edges=alias:journal_edges.table source_column_name=Source target_column_name=Target nodes=alias:journal_nodes_table id_column_name=Id label_column_name=Label \u256d\u2500 Result \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data_type value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data \u2502 \u2502 Table: edges \u2502 \u2502 \u2502 \u2502 source target weight \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 1 11 \u2502 \u2502 1 5 1 \u2502 \u2502 1 7 6 \u2502 \u2502 1 8 15 \u2502 \u2502 1 10 24 \u2502 \u2502 1 13 1 \u2502 \u2502 1 14 2 \u2502 \u2502 1 15 8 \u2502 \u2502 1 18 7 \u2502 \u2502 1 20 48 \u2502 \u2502 1 21 7 \u2502 \u2502 1 22 4 \u2502 \u2502 1 23 75 \u2502 \u2502 1 24 1 \u2502 \u2502 1 26 8 \u2502 \u2502 1 29 1 \u2502 \u2502 ... ... ... \u2502 \u2502 ... ... ... \u2502 \u2502 51 108 1 \u2502 \u2502 51 109 5 \u2502 \u2502 51 110 1 \u2502 \u2502 51 111 1 \u2502 \u2502 51 112 1 \u2502 \u2502 51 113 1 \u2502 \u2502 51 114 2 \u2502 \u2502 51 115 2 \u2502 \u2502 51 116 1 \u2502 \u2502 51 118 3 \u2502 \u2502 51 119 2 \u2502 \u2502 51 120 1 \u2502 \u2502 51 121 1 \u2502 \u2502 63 102 1 \u2502 \u2502 147 27 11 \u2502 \u2502 147 241 1 \u2502 \u2502 \u2502 \u2502 Table: nodes \u2502 \u2502 \u2502 \u2502 id label JournalType City CountryNetworkTime PresentDayCountry Latitude Longitude Language \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 75 Psychiatrische en neurologische bladen specialized: psychiatry and neurology Amsterdam Netherlands Netherlands 52.366667 4.9 Dutch \u2502 \u2502 36 The American Journal of Insanity specialized: psychiatry and neurology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 208 The American Journal of Psychology specialized: psychology Baltimore United States United States 39.289444 -76.615278 English \u2502 \u2502 295 Die Krankenpflege specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 296 Die deutsche Klinik am Eingange des zwanzigsten general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 300 Therapeutische Monatshefte specialized: therapy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 1 Allgemeine Zeitschrift f\u00fcr Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 7 Archiv f\u00fcr Psychiatrie und Nervenkrankheiten specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 10 Berliner klinische Wochenschrift general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 13 Charit\u00e9 Annalen general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 21 Monatsschrift f\u00fcr Psychiatrie und Neurologie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 29 Virchows Archiv specialized: anatomy, physiology and pathology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 31 Zeitschrift f\u00fcr p\u00e4dagogische Psychologie und Pat specialized: psychology and pedagogy Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 42 Vierteljahrsschrift f\u00fcr gerichtliche Medizin und specialized: anthropology, criminology and fore Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 47 Centralblatt f\u00fcr Nervenheilkunde und Psychiatrie specialized: psychiatry and neurology Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 50 Russische medicinische Rundschau general medicine Berlin German Empire Germany 52.52 13.405 German \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 ... ... ... ... ... ... ... ... ... \u2502 \u2502 277 L'arte medica general medicine Turin Italy Italy 45.079167 7.676111 Italian \u2502 \u2502 288 Allgemeine \u00f6sterreichische Gerichts-Zeitung specialized: anthropology, criminology and fore Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 18 Jahrbu\u0308cher fu\u0308r Psychiatrie specialized: psychiatry and neurology Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 30 Wiener klinische Rundschau general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 44 Wiener klinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 45 Wiener medizinische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 72 Wiener medizinische Presse general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 81 Monatsschrift f\u00fcr Gesundheitspflege general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 93 Klinisch-therapeutische Wochenschrift general medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 151 Medicinisch-chirurgisches Centralblatt specialized: surgery Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 199 Der Milit\u00e4razt specialized: military medicine Vienna Austro-Hungarian Empire Austria 48.2 16.366667 German \u2502 \u2502 261 \u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430 general medicine Voronezh Russian Empire Russia 51.671667 39.210556 Russian \u2502 \u2502 77 Medycyna general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 150 Kronika Lekarska general medicine Warsaw Russian Empire Poland 52.233333 21.016667 Polish \u2502 \u2502 86 Grenzfragen des Nerven- und Seelenlebens specialized: psychiatry and neurology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 206 Ergebnisse der Allgemeinen Pathologie und Pathol specialized: anatomy, physiology and pathology Wiesbaden German Empire Germany 50.0825 8.24 German \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500 Stored result value \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field data type stored id alias(es) \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 network_data network_data 98d1a914-a0bc-40a0-a30a-027010812405 journals_graph \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f To confirm our graph data is created, let's check the data store: kiara data explain --properties alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 98d1a914-a0bc-40a0-a30a-027010812405 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name network_data \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_class_name NetworkDataType \u2502 \u2502 python_module_name kiara_plugin.network_analysis.data_types \u2502 \u2502 full_name kiara_plugin.network_analysis.data_types.NetworkDataType \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 properties \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \"e005f763-ffa1-4a8c-9944-7fa0d79c2729\", \u2502 \u2502 \"metadata.graph_properties\": \"11ccecca-3ffd-4f53-b224-348a6a160bf9\", \u2502 \u2502 \"metadata.python_class\": \"bf39345e-a3d4-4349-9d98-1a1470904ef3\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAoZJjYTx2q7sc4tGRsVLeJypMqHdxLPmdCNiMxsckHn35 \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 properties \u2502 \u2502 metadata.database { \u2502 \u2502 \"tables\": { \u2502 \u2502 \"edges\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"source\", \u2502 \u2502 \"target\", \u2502 \u2502 \"weight\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"source\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"target\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"weight\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 321, \u2502 \u2502 \"size\": 4096 \u2502 \u2502 }, \u2502 \u2502 \"nodes\": { \u2502 \u2502 \"column_names\": [ \u2502 \u2502 \"id\", \u2502 \u2502 \"label\", \u2502 \u2502 \"JournalType\", \u2502 \u2502 \"City\", \u2502 \u2502 \"CountryNetworkTime\", \u2502 \u2502 \"PresentDayCountry\", \u2502 \u2502 \"Latitude\", \u2502 \u2502 \"Longitude\", \u2502 \u2502 \"Language\" \u2502 \u2502 ], \u2502 \u2502 \"column_schema\": { \u2502 \u2502 \"id\": { \u2502 \u2502 \"type_name\": \"INTEGER\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"label\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"JournalType\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"City\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"CountryNetworkTime\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"PresentDayCountry\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Latitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Longitude\": { \u2502 \u2502 \"type_name\": \"REAL\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"Language\": { \u2502 \u2502 \"type_name\": \"TEXT\", \u2502 \u2502 \"metadata\": { \u2502 \u2502 \"nullable\": false, \u2502 \u2502 \"primary_key\": false \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 }, \u2502 \u2502 \"rows\": 276, \u2502 \u2502 \"size\": 40960 \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 metadata.graph_properties { \u2502 \u2502 \"number_of_nodes\": 276, \u2502 \u2502 \"properties_by_graph_type\": [ \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected\", \u2502 \u2502 \"number_of_edges\": 313 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"directed-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"graph_type\": \"undirected-multi\", \u2502 \u2502 \"number_of_edges\": 321 \u2502 \u2502 } \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 metadata.python_class { \u2502 \u2502 \"python_class\": { \u2502 \u2502 \"python_class_name\": \"NetworkData\", \u2502 \u2502 \"python_module_name\": \"kiara_plugin.network_analysis.models\", \u2502 \u2502 \"full_name\": \"kiara_plugin.network_analysis.models.NetworkData\" \u2502 \u2502 } \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f All good. Also, check out the metadata kiara knows about the graph already.","title":"Creating the graph"},{"location":"usage/getting_started/#side-note-investigating-the-graph-value-lineage","text":"kiara keeps track of all the modules and inputs that went into producing a value, basically its entire ancestry. This is not the place to explain why, and how that can be very powerful and useful. But if you are ever interested about what went into creating a particular value, you can do this with: kiara data explain --lineage alias:journals_graph \u256d\u2500 Value details for: alias:journals_graph \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 value_id 98d1a914-a0bc-40a0-a30a-027010812405 \u2502 \u2502 kiara_id a69bab6f-3484-43b3-bd92-0cfc16a63ccb \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 data_type_info \u2502 \u2502 data_type_name network_data \u2502 \u2502 data_type_config {} \u2502 \u2502 characteristics { \u2502 \u2502 \"is_scalar\": false, \u2502 \u2502 \"is_json_serializable\": \u2502 \u2502 false \u2502 \u2502 } \u2502 \u2502 data_type_class \u2502 \u2502 python_cla\u2026 NetworkDat\u2026 \u2502 \u2502 python_mod\u2026 kiara_plug\u2026 \u2502 \u2502 full_name kiara_plug\u2026 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 destiny_backlinks {} \u2502 \u2502 enviroments None \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (dict) \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (dict) \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) \u2502 \u2502 property_links { \u2502 \u2502 \"metadata.database\": \u2502 \u2502 \"e005f763-ffa1-4a8c-9944-7fa0d79c2729\", \u2502 \u2502 \"metadata.graph_properties\": \u2502 \u2502 \"11ccecca-3ffd-4f53-b224-348a6a160bf9\", \u2502 \u2502 \"metadata.python_class\": \u2502 \u2502 \"bf39345e-a3d4-4349-9d98-1a1470904ef3\" \u2502 \u2502 } \u2502 \u2502 value_hash zdpuAoZJjYTx2q7sc4tGRsVLeJypMqHdxLPmdCNiMxsckHn35 \u2502 \u2502 value_schema \u2502 \u2502 type network_data \u2502 \u2502 type_config {} \u2502 \u2502 default __not_set__ \u2502 \u2502 optional False \u2502 \u2502 is_constant False \u2502 \u2502 doc The network/graph data. \u2502 \u2502 \u2502 \u2502 value_size 61.44 KB \u2502 \u2502 value_status -- set -- \u2502 \u2502 \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 \u2502 \u2502 lineage create.network_data.from.tables \u2502 \u2502 \u251c\u2500\u2500 input: edges (table) = \u2502 \u2502 \u2502 14b4ae43-e76c-4800-9794-1986f81ea6b7 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 b57d6972-f863-425f-a13e-37122d2f985c \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 e39584e9-deb1-4cd3-86c5-9a9a6f0\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: edges_column_map (dict) = \u2502 \u2502 \u2502 d796c0a9-801c-453d-97b6-1215afdd0ba2 \u2502 \u2502 \u251c\u2500\u2500 input: id_column_name (string) = \u2502 \u2502 \u2502 dd80eec7-3218-4731-a65e-09c375ec7c87 \u2502 \u2502 \u251c\u2500\u2500 input: label_column_name (string) = \u2502 \u2502 \u2502 5dff27c9-5309-404f-8d55-1fd4d0446f26 \u2502 \u2502 \u251c\u2500\u2500 input: nodes (table) = \u2502 \u2502 \u2502 afc950b2-ee7a-4d9e-aece-9fcca4d1c1f9 \u2502 \u2502 \u2502 \u2514\u2500\u2500 create.table \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: csv_file (file) = \u2502 \u2502 \u2502 fd09e7d9-be52-4f3f-b805-9ba7ce789ba4 \u2502 \u2502 \u2502 \u2514\u2500\u2500 import.file \u2502 \u2502 \u2502 \u2514\u2500\u2500 input: path (string) = \u2502 \u2502 \u2502 285fb30f-97f5-4c18-b8be-7629b91\u2026 \u2502 \u2502 \u251c\u2500\u2500 input: nodes_column_map (dict) = \u2502 \u2502 \u2502 a805a2da-b048-43f6-ae2e-dcb1bde339a7 \u2502 \u2502 \u251c\u2500\u2500 input: source_column_name (string) = \u2502 \u2502 \u2502 b82ff7ad-a0cf-4737-ba65-3c1e5efbe6b0 \u2502 \u2502 \u2514\u2500\u2500 input: target_column_name (string) = \u2502 \u2502 64209aa6-a26b-4395-850f-9c649161b057 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f As you can see, this basically describes what we've done so far, to get to this stage. You could now do a kiara explain data value:<value_id> on each of the value ids you see here, if you were so inclined.","title":"Side-note: investigating the graph value lineage"},{"location":"usage/getting_started/#more","text":"... to come ...","title":"More"},{"location":"workflows/","text":"Workflows \u00b6 This part of the documentation is work in progress, and very bare-bones at the moment. Example workflows \u00b6 logic.xor \u00b6 kiara can render different artefacts from pipeline descriptinos, most notably Jupyter notebooks. This can be done via the command-line: kiara render pipeline logic.xor a=true b=true > xor.ipynb This command looks up the logic.xor pipeline operation (you can also specify a pipeline description file -- for example the one created when following this tutorial ), and uses Jupyter_notebook.ipynb.j2 from this template folder to render a Jupyter notebook that outlines how to use the kiara workflow api via Python. Rendered versions of this example can be found: here or directly on Github topic_modeling example pipeline \u00b6 As mentioned above, it's possible to use a pipeline description file as input for the render command. Here, we use this pipeline to render: this or, the github-rendered version of the same notebook here Assuming you have a working kiara virtual environment with all the necessary plugins, you can try that out yourself: git clone https://github.com/DHARPA-Project/kiara.examples.git \u276f kiara render pipeline kiara.examples/examples/pipelines/topic_modeling/topic_modeling.yaml > topic_modeling.ipynb jupyter-lab topic_modeling.ipynb","title":"Workflows"},{"location":"workflows/#workflows","text":"This part of the documentation is work in progress, and very bare-bones at the moment.","title":"Workflows"},{"location":"workflows/#example-workflows","text":"","title":"Example workflows"},{"location":"workflows/#logicxor","text":"kiara can render different artefacts from pipeline descriptinos, most notably Jupyter notebooks. This can be done via the command-line: kiara render pipeline logic.xor a=true b=true > xor.ipynb This command looks up the logic.xor pipeline operation (you can also specify a pipeline description file -- for example the one created when following this tutorial ), and uses Jupyter_notebook.ipynb.j2 from this template folder to render a Jupyter notebook that outlines how to use the kiara workflow api via Python. Rendered versions of this example can be found: here or directly on Github","title":"logic.xor"},{"location":"workflows/#topic_modeling-example-pipeline","text":"As mentioned above, it's possible to use a pipeline description file as input for the render command. Here, we use this pipeline to render: this or, the github-rendered version of the same notebook here Assuming you have a working kiara virtual environment with all the necessary plugins, you can try that out yourself: git clone https://github.com/DHARPA-Project/kiara.examples.git \u276f kiara render pipeline kiara.examples/examples/pipelines/topic_modeling/topic_modeling.yaml > topic_modeling.ipynb jupyter-lab topic_modeling.ipynb","title":"topic_modeling example pipeline"},{"location":"workflows/topic_modeling/","text":"(function() { function addWidgetsRenderer() { var requireJsScript = document.createElement('script'); requireJsScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js'; var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var jupyterWidgetsScript = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} jupyterWidgetsScript.src = widgetRendererSrc; document.body.appendChild(requireJsScript); document.body.appendChild(jupyterWidgetsScript); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); % env CONSOLE_WIDTH = 140 from kiara.interfaces.python_api.workflow import Workflow from kiara.utils.jupyter import graph_to_image from kiara.utils.cli import terminal_print_model env: CONSOLE_WIDTH=140 Creating the workflow object \u00b6 As the first step we create a Workflow object, which is a convenience class that manages workflow state, internal consistency and history for us: doc = \"\"\"Example topic-modeling end-to-end workflow.\"\"\" workflow = Workflow . create ( \"topic_modeling\" , doc = doc , replace_existing_alias = True ) Assembling the workflow \u00b6 The first step in the creation of our workflow is to create the individual steps from the available kiara modules. A list of available modules and their aliases can be found here: TODO Creating the steps of the workflow \u00b6 # Creating step: import_text_corpus workflow . add_step ( operation = \"import.file_bundle\" , step_id = \"import_text_corpus\" ) \u256d\u2500 Step: import_text_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id import_text_corpus \u2502 \u2502 module type import.file_bundle \u2502 \u2502 module doc Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_text_corpus.path string The local path of the folder to import. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_text_corpus.file_bundle file_bundle The imported file bundle. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: create_stopwords_list workflow . add_step ( operation = \"create.stopwords_list\" , step_id = \"create_stopwords_list\" ) \u256d\u2500 Step: create_stopwords_list \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_stopwords_list \u2502 \u2502 module type create.stopwords_list \u2502 \u2502 module doc Create a list of stopwords from one or multiple sources. \u2502 \u2502 \u2502 \u2502 This will download nltk stopwords if necessary, and merge all input lists into a single, sorted list without \u2502 \u2502 duplicates. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list.languages list A list of languages, will be used to no -- no default -- \u2502 \u2502 retrieve language-specific stopword \u2502 \u2502 from nltk. \u2502 \u2502 create_stopwords_list.stopword_lists list A list of lists of stopwords. no -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list.stopwords_list list A sorted list of unique stopwords. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: create_text_corpus step_create_text_corpus_config = { 'constants' : {}, 'defaults' : {}, 'source_type' : 'text_file_bundle' , 'target_type' : 'table' , 'ignore_errors' : False } workflow . add_step ( operation = \"create.table\" , module_config = step_create_text_corpus_config , step_id = \"create_text_corpus\" ) \u256d\u2500 Step: create_text_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_text_corpus \u2502 \u2502 module type create.table \u2502 \u2502 module_config { \u2502 \u2502 \"source_type\" : \"text_file_bundle\" , \u2502 \u2502 \"target_type\" : \"table\" , \u2502 \u2502 \"ignore_errors\" : false \u2502 \u2502 } \u2502 \u2502 module doc -- n/a -- \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_text_corpus.text_file_b text_file_bundle The type of the source value. yes -- no default -- \u2502 \u2502 undle \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_text_corpus.table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'create_text_corpus' workflow . connect_fields ( \"create_text_corpus.text_file_bundle\" , \"import_text_corpus.file_bundle\" ) # Creating step: extract_texts_column workflow . add_step ( operation = \"table.cut_column\" , step_id = \"extract_texts_column\" ) \u256d\u2500 Step: extract_texts_column \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id extract_texts_column \u2502 \u2502 module type table.cut_column \u2502 \u2502 module doc Cut off one column from a table, returning an array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_texts_column.table table A table. yes -- no default -- \u2502 \u2502 extract_texts_column.column_name string The name of the column to extract. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_texts_column.array array The column. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'extract_texts_column' workflow . connect_fields ( \"extract_texts_column.table\" , \"create_text_corpus.table\" ) # Creating step: extract_filename_column workflow . add_step ( operation = \"table.cut_column\" , step_id = \"extract_filename_column\" ) \u256d\u2500 Step: extract_filename_column \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id extract_filename_column \u2502 \u2502 module type table.cut_column \u2502 \u2502 module doc Cut off one column from a table, returning an array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_filename_column.table table A table. yes -- no default -- \u2502 \u2502 extract_filename_column.column_name string The name of the column to extract. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_filename_column.array array The column. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'extract_filename_column' workflow . connect_fields ( \"extract_filename_column.table\" , \"create_text_corpus.table\" ) # Creating step: create_date_array workflow . add_step ( operation = \"parse.date_array\" , step_id = \"create_date_array\" ) \u256d\u2500 Step: create_date_array \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_date_array \u2502 \u2502 module type parse.date_array \u2502 \u2502 module_config { \u2502 \u2502 \"add_inputs\" : true , \u2502 \u2502 \"input_fields\" : [], \u2502 \u2502 \"force_non_null\" : true , \u2502 \u2502 \"min_index\" : null , \u2502 \u2502 \"max_index\" : null , \u2502 \u2502 \"remove_tokens\" : [] \u2502 \u2502 } \u2502 \u2502 module doc Create an array of date objects from an array of strings. \u2502 \u2502 \u2502 \u2502 This module is very simplistic at the moment, more functionality and options will be added in the future. \u2502 \u2502 \u2502 \u2502 At its core, this module uses the standard parser from the dateutil package to parse strings into dates. As this \u2502 \u2502 parser can't handle complex strings, the input strings can be pre-processed in the following ways: \u2502 \u2502 \u2502 \u2502 \u2022 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options) \u2502 \u2502 \u2022 remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' \u2502 \u2502 option) \u2502 \u2502 \u2502 \u2502 By default, if an input string can't be parsed this module will raise an exception. This can be prevented by setting \u2502 \u2502 this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings will appear as \u2502 \u2502 'NULL' value in the resulting array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_date_array.array array The input array. yes -- no default -- \u2502 \u2502 create_date_array.force_non_null boolean If set to 'True', raise an error if no True \u2502 \u2502 any of the strings in the array can't \u2502 \u2502 be parsed. \u2502 \u2502 create_date_array.min_index integer The minimum index from where to start no -- no default -- \u2502 \u2502 parsing the string(s). \u2502 \u2502 create_date_array.max_index integer The maximum index until whic to parse no -- no default -- \u2502 \u2502 the string(s). \u2502 \u2502 create_date_array.remove_tokens list A list of tokens/characters to no [] \u2502 \u2502 replace with a single white-space \u2502 \u2502 before parsing the input. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_date_array.date_array array The resulting array with items of a date data type. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'create_date_array' workflow . connect_fields ( \"create_date_array.array\" , \"extract_filename_column.array\" ) # Creating step: tokenize_content workflow . add_step ( operation = \"tokenize.texts_array\" , step_id = \"tokenize_content\" ) \u256d\u2500 Step: tokenize_content \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id tokenize_content \u2502 \u2502 module type tokenize.texts_array \u2502 \u2502 module doc Split sentences into words or words into characters. \u2502 \u2502 \u2502 \u2502 In other words, this operation establishes the word boundaries (i.e., tokens) a very helpful way of finding patterns. \u2502 \u2502 It is also the typical step prior to stemming and lemmatization \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 tokenize_content.texts_array array An array of text items to be yes -- no default -- \u2502 \u2502 tokenized. \u2502 \u2502 tokenize_content.tokenize_by_word boolean Whether to tokenize by word (default), no True \u2502 \u2502 or character. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 tokenize_content.tokens_array array The tokenized content, as an array of lists of strings. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'tokenize_content' workflow . connect_fields ( \"tokenize_content.texts_array\" , \"extract_texts_column.array\" ) # Creating step: preprocess_corpus workflow . add_step ( operation = \"preprocess.tokens_array\" , step_id = \"preprocess_corpus\" ) \u256d\u2500 Step: preprocess_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id preprocess_corpus \u2502 \u2502 module type preprocess.tokens_array \u2502 \u2502 module doc Preprocess lists of tokens, incl. lowercasing, remove special characers, etc. \u2502 \u2502 \u2502 \u2502 Lowercasing: Lowercase the words. This operation is a double-edged sword. It can be effective at yielding potentially \u2502 \u2502 better results in the case of relatively small datasets or datatsets with a high percentage of OCR mistakes. For \u2502 \u2502 instance, if lowercasing is not performed, the algorithm will treat USA, Usa, usa, UsA, uSA, etc. as distinct tokens, \u2502 \u2502 even though they may all refer to the same entity. On the other hand, if the dataset does not contain such OCR \u2502 \u2502 mistakes, then it may become difficult to distinguish between homonyms and make interpreting the topics much harder. \u2502 \u2502 \u2502 \u2502 Removing stopwords and words with less than three characters: Remove low information words. These are typically words \u2502 \u2502 such as articles, pronouns, prepositions, conjunctions, etc. which are not semantically salient. There are numerous \u2502 \u2502 stopword lists available for many, though not all, languages which can be easily adapted to the individual \u2502 \u2502 researcher's needs. Removing words with less than three characters may additionally remove many OCR mistakes. Both \u2502 \u2502 these operations have the dual advantage of yielding more reliable results while reducing the size of the dataset, \u2502 \u2502 thus in turn reducing the required processing power. This step can therefore hardly be considered optional in TM. \u2502 \u2502 \u2502 \u2502 Noise removal: Remove elements such as punctuation marks, special characters, numbers, html formatting, etc. This \u2502 \u2502 operation is again concerned with removing elements that may not be relevant to the text analysis and in fact \u2502 \u2502 interfere with it. Depending on the dataset and research question, this operation can become essential. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 preprocess_corpus.tokens_array array The tokens array to pre-process. yes -- no default -- \u2502 \u2502 preprocess_corpus.to_lowercase boolean Apply lowercasing to the text. no False \u2502 \u2502 preprocess_corpus.remove_alphanumer boolean Remove all tokens that include no False \u2502 \u2502 ic numbers (e.g. ex1ample). \u2502 \u2502 preprocess_corpus.remove_non_alpha boolean Remove all tokens that include no False \u2502 \u2502 punctuation and numbers (e.g. \u2502 \u2502 ex1a.mple). \u2502 \u2502 preprocess_corpus.remove_all_numeri boolean Remove all tokens that contain no False \u2502 \u2502 c numbers only (e.g. 876). \u2502 \u2502 preprocess_corpus.remove_short_toke integer Remove tokens shorter than a certain no False \u2502 \u2502 ns length. If value is <= 0, no \u2502 \u2502 filtering will be done. \u2502 \u2502 preprocess_corpus.remove_stopwords list Remove stopwords. no -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 preprocess_corpus.tokens_array array The pre-processed content, as an array of lists of strings. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'preprocess_corpus' workflow . connect_fields ( \"preprocess_corpus.tokens_array\" , \"tokenize_content.tokens_array\" ) workflow . connect_fields ( \"preprocess_corpus.remove_stopwords\" , \"create_stopwords_list.stopwords_list\" ) # Creating step: generate_lda workflow . add_step ( operation = \"generate.LDA.for.tokens_array\" , step_id = \"generate_lda\" ) \u256d\u2500 Step: generate_lda \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id generate_lda \u2502 \u2502 module type generate.LDA.for.tokens_array \u2502 \u2502 module doc Perform Latent Dirichlet Allocation on a tokenized corpus. \u2502 \u2502 \u2502 \u2502 This module computes models for a range of number of topics provided by the user. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 generate_lda.tokens_array array The text corpus. yes -- no default -- \u2502 \u2502 generate_lda.num_topics_min integer The minimal number of topics. no 7 \u2502 \u2502 generate_lda.num_topics_max integer The max number of topics. no -- no default -- \u2502 \u2502 generate_lda.compute_coherence boolean Whether to compute the coherence score no False \u2502 \u2502 for each model. \u2502 \u2502 generate_lda.words_per_topic integer How many words per topic to put in the no 10 \u2502 \u2502 result model. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 generate_lda.topic_models dict A dictionary with one coherence model table for each number of topics. \u2502 \u2502 generate_lda.coherence_table table Coherence details. \u2502 \u2502 generate_lda.coherence_map dict A map with the coherence value for every number of topics. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'generate_lda' workflow . connect_fields ( \"generate_lda.tokens_array\" , \"preprocess_corpus.tokens_array\" ) Setting workflow input/output names (optional) \u00b6 To make our workflow nicer to use, we can set aliases for its inputs and outputs. workflow . set_input_alias ( input_field = \"extract_texts_column.column_name\" , alias = \"content_column_name\" ) workflow . set_input_alias ( input_field = \"extract_filename_column.column_name\" , alias = \"filename_column_name\" ) workflow . set_input_alias ( input_field = \"import_text_corpus.path\" , alias = \"text_corpus_folder_path\" ) workflow . set_input_alias ( input_field = \"create_date_array.min_index\" , alias = \"date_parse_min\" ) workflow . set_input_alias ( input_field = \"create_date_array.max_index\" , alias = \"date_parse_max\" ) workflow . set_input_alias ( input_field = \"create_date_array.force_non_null\" , alias = \"date_force_non_null\" ) workflow . set_input_alias ( input_field = \"create_date_array.remove_tokens\" , alias = \"date_remove_tokensl\" ) workflow . set_input_alias ( input_field = \"tokenize_content.tokenize_by_word\" , alias = \"tokenize_by_word\" ) workflow . set_input_alias ( input_field = \"generate_lda.num_topics_min\" , alias = \"num_topics_min\" ) workflow . set_input_alias ( input_field = \"generate_lda.num_topics_max\" , alias = \"num_topics_max\" ) workflow . set_input_alias ( input_field = \"generate_lda.compute_coherence\" , alias = \"compute_coherence\" ) workflow . set_input_alias ( input_field = \"generate_lda.words_per_topic\" , alias = \"words_per_topic\" ) workflow . set_input_alias ( input_field = \"create_stopwords_list.languages\" , alias = \"languages\" ) workflow . set_input_alias ( input_field = \"create_stopwords_list.stopword_lists\" , alias = \"stopword_lists\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.to_lowercase\" , alias = \"to_lowercase\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_alphanumeric\" , alias = \"remove_alphanumeric\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_non_alpha\" , alias = \"remove_non_alpha\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_all_numeric\" , alias = \"remove_all_numeric\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_short_tokens\" , alias = \"remove_short_tokens\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_stopwords\" , alias = \"remove_stopwords\" ) workflow . set_output_alias ( output_field = \"import_text_corpus.file_bundle\" , alias = \"text_corpus_file_bundle\" ) workflow . set_output_alias ( output_field = \"create_text_corpus.table\" , alias = \"text_corpus_table\" ) workflow . set_output_alias ( output_field = \"extract_texts_column.array\" , alias = \"content_array\" ) workflow . set_output_alias ( output_field = \"tokenize_content.tokens_array\" , alias = \"tokenized_corpus\" ) workflow . set_output_alias ( output_field = \"preprocess_corpus.tokens_array\" , alias = \"preprocessed_corpus\" ) workflow . set_output_alias ( output_field = \"generate_lda.topic_models\" , alias = \"topic_models\" ) workflow . set_output_alias ( output_field = \"generate_lda.coherence_map\" , alias = \"coherence_map\" ) workflow . set_output_alias ( output_field = \"generate_lda.coherence_table\" , alias = \"coherence_table\" ) workflow . set_output_alias ( output_field = \"create_date_array.date_array\" , alias = \"date_array\" ) Workflow information \u00b6 After our workflow is wired up, we look can look at its structure, and other properties. Workflow status \u00b6 A workflow consists of a series of 'states', the most relevant is always the most recent one. We can investigate that latest states details like so: workflow . current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuAuzjRbxHaGKvGVJ7rxJQ27Hfy2k7qLTxC3vxowNLwnH4U \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_stopwords_list__stopword_lists valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 import_text_corpus__path not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_filename_column__column_name not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_texts_column__column_name not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__max_index valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__min_index valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000001 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__compute_coherence valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__num_topics_max valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__num_topics_min valid no 7 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 path : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 text_file_bundle : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 table : not set \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 column_name : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u251c\u2500\u2500 table : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 column_name : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 array : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 texts_array : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 tokens_array : not set \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2514\u2500\u2500 tokens_array : not set \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 import_text_corpus__file_bundle not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_text_corpus__table not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_filename_column__array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_texts_column__array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__date_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 tokenize_content__tokens_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__tokens_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__coherence_map not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__coherence_table not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__topic_models not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Pipeline execution graph \u00b6 Let's look at the current execution graph for the current workflow pipeline: graph_to_image ( workflow . pipeline . execution_graph ) Workflow inputs \u00b6 Once a workflow has an assembled pipeline, we can set it's inputs. We use the input field names that we got from the result of the workflow.current_state call. workflow . set_input ( \"text_corpus_folder_path\" , \"/home/markus/projects/kiara/dev/kiara.examples/examples/pipelines/topic_modeling/../../data/text_corpus/data\" ) workflow . set_input ( \"content_column_name\" , \"content\" ) workflow . set_input ( \"filename_column_name\" , \"file_name\" ) workflow . set_input ( \"date_force_non_null\" , None ) workflow . set_input ( \"date_parse_min\" , 11 ) workflow . set_input ( \"date_parse_max\" , 21 ) workflow . set_input ( \"date_remove_tokensl\" , None ) workflow . set_input ( \"tokenize_by_word\" , None ) workflow . set_input ( \"languages\" , [ 'italian' ]) workflow . set_input ( \"stopword_lists\" , []) workflow . set_input ( \"to_lowercase\" , None ) workflow . set_input ( \"remove_alphanumeric\" , None ) workflow . set_input ( \"remove_non_alpha\" , None ) workflow . set_input ( \"remove_all_numeric\" , None ) workflow . set_input ( \"remove_short_tokens\" , None ) workflow . set_input ( \"num_topics_min\" , 7 ) workflow . set_input ( \"num_topics_max\" , 9 ) workflow . set_input ( \"compute_coherence\" , True ) workflow . set_input ( \"words_per_topic\" , None ) # process all workflow steps that can be processed workflow . process_steps () # print the current state, after we set our inputs workflow . current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 76394b45-2dcb-44ca-b22b-01e0ee25bd9f \u2502 \u2502 create_stopwords_list__stopword_lists valid no cfd4f58b-358d-4640-af08-b745ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa90eec13b \u2502 \u2502 extract_filename_column__column_name valid yes 0b6bd257-60c6-4434-b66c-e855aa203622 \u2502 \u2502 extract_texts_column__column_name valid yes fd3ef854-c982-4589-b5c4-112aae1c597e \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-400746a2215b \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000002 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 generate_lda__compute_coherence valid no False 0f2ecd3e-15a8-482b-b0e2-20b65d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-73142b8522ae \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list valid list c4c81256-c387-471e-8a05-76890eaefbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79afff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a089e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Workflow outputs \u00b6 To print the actual data of the workflows' current outputs, we call the current_output_values property of the workflow object: workflow . current_output_values \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 coherence_map \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : 0.23418388139804186 , \u2502 \u2502 \"8\" : 0.2320449393569416 , \u2502 \u2502 \"9\" : 0.232008834255219 \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 coherence_table \u2502 \u2502 topic_id words num_topics \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 sempre, j, perch\u00e8, 1, degenerato, mente, mai, no, solo, re, altri, to, te, egl 7 \u2502 \u2502 2 no, j, re, perch\u00e8, to, 1, sempre, te, egli, degenerato, mente, do, fatto, essi 7 \u2502 \u2502 3 perch\u00e8, 1, sempre, no, j, to, degenerato, egli, te, re, mente, oggi, essi, far 7 \u2502 \u2502 4 sempre, j, no, altri, perch\u00e8, te, 1, degenerato, solo, to, re, fatto, egli, ta 7 \u2502 \u2502 5 sempre, perch\u00e8, j, no, degenerato, te, solo, 1, egli, re, altri, do, essi, ri, 7 \u2502 \u2502 6 perch\u00e8, degenerato, egli, no, j, re, 1, sempre, fatto, te, ta, to, oggi, quel, 7 \u2502 \u2502 7 j, sempre, degenerato, 1, egli, no, to, oggi, te, re, mente, perch\u00e8, quando, e 7 \u2502 \u2502 1 sempre, perch\u00e8, altri, 1, j, te, no, Figli, solo, re, po, n\u00e8, degenerato, to, 8 \u2502 \u2502 2 j, sempre, degenerato, te, re, to, 1, perch\u00e8, mai, ta, egli, altri, no, oggi, 8 \u2502 \u2502 3 sempre, 1, j, perch\u00e8, no, degenerato, fare, re, altri, solo, mente, n\u00e8, Figli, 8 \u2502 \u2502 4 no, perch\u00e8, sempre, j, degenerato, 1, egli, to, re, te, mente, essi, solo, fat 8 \u2502 \u2502 5 sempre, perch\u00e8, degenerato, 1, egli, j, re, mai, altri, no, do, te, giornale, 8 \u2502 \u2502 6 sempre, altri, solo, to, j, perch\u00e8, mente, 1, re, State, ta, mai, n\u00e8, te, Figl 8 \u2502 \u2502 7 sempre, j, re, perch\u00e8, degenerato, 1, egli, no, te, to, mai, mente, solo, oggi 8 \u2502 \u2502 8 sempre, perch\u00e8, te, 1, j, re, egli, degenerato, no, to, fare, ta, oggi, mai, r 8 \u2502 \u2502 1 sempre, perch\u00e8, j, no, altri, degenerato, re, te, 1, mente, essi, mai, egli, t 9 \u2502 \u2502 2 no, perch\u00e8, sempre, j, 1, degenerato, to, egli, oggi, fatto, re, te, solo, mai 9 \u2502 \u2502 3 sempre, te, perch\u00e8, j, no, to, 1, egli, altri, re, mente, mai, degenerato, sol 9 \u2502 \u2502 4 sempre, j, degenerato, no, 1, re, te, perch\u00e8, fare, fatto, to, mente, mai, egl 9 \u2502 \u2502 5 sempre, no, perch\u00e8, 1, j, altri, mente, to, fatto, degenerato, n\u00e8, re, solo, e 9 \u2502 \u2502 6 sempre, egli, j, 1, no, degenerato, perch\u00e8, te, essi, quel, fatto, re, ta, ogg 9 \u2502 \u2502 7 sempre, to, perch\u00e8, j, 1, mente, altri, re, solo, essi, te, fare, po, degenera 9 \u2502 \u2502 8 sempre, perch\u00e8, egli, no, j, 1, degenerato, re, te, due, solo, to, altri, ment 9 \u2502 \u2502 9 perch\u00e8, j, sempre, no, degenerato, egli, 1, to, re, te, oggi, giornale, solo, 9 \u2502 \u2502 \u2502 \u2502 content_array \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAG ONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 LA RAGIONA \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 LA RAG ONE \u2502 \u2502 contro 1 vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 \u25a0\u25a0\u25a0 \u2502 \u2502 La Rassegna \u2502 \u2502 Both Phones \u2502 \u2502 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- i^M \u2502 \u2502 \u25a0Both Phones \u2502 \u2502 \u2502 \u2502 date_array \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-04-07 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 \u2502 \u2502 preprocessed_corpus \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", '1', 'vili', ',', 'camorristi', ' ... \u2502 \u2502 ['RAG', 'ONE', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austri ... \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', 's ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['RAGIONA', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', 's ... \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", 'vili', ',', 'camorristi', ',', ' ... \u2502 \u2502 ['RAGIONE', 'vili', ',', '1', 'camorristi', ',', 'sicari', ',', 'falsari', 'aust ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['RAG', 'ONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', \"''\", 'vili', ',', 'camorristi' ... \u2502 \u2502 ['1', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ... \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'Rassegna', '_', 'Both', 'Phones', 'ANNO', 'No', '.', '1', 'perche', \"'\" ... \u2502 \u2502 ['Rassegna', 'Jjoth', 'Phones', 'ANNO', 'No', '.', '2', 'BASTA', '!', '...', 'qu ... \u2502 \u2502 ['Both', 'Phones', 'ANNO', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', 'quai ... \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', ' ... \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'COSE', 'POSTO', 'va', 'd ... \u2502 \u2502 \u2502 \u2502 text_corpus_file_bundle \u2502 \u2502 bundle name data \u2502 \u2502 number_of_files 16 \u2502 \u2502 size 298452 \u2502 \u2502 included files \u2502 \u2502 (relative) path size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-1_seq-1_ocr.txt 16613 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-2_seq-1_ocr.txt 16679 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-3_seq-1_ocr.txt 16793 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-4_seq-1_ocr.txt 16235 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-1_seq-1_ocr.txt 18346 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-2_seq-1_ocr.txt 18474 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-3_seq-1_ocr.txt 18280 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-4_seq-1_ocr.txt 18481 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-1_seq-1_ocr.txt 18620 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-2_seq-1_ocr.txt 18698 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-3_seq-1_ocr.txt 18540 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-07_ed-1_seq-1_ocr.txt 19397 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-1_seq-1_ocr.txt 20647 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-2_seq-1_ocr.txt 20650 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-1_seq-1_ocr.txt 21017 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-2_seq-1_ocr.txt 20982 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 text_corpus_table \u2502 \u2502 id rel_path mime_type size content file_name \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 0 La_Ragione/sn84037024_1 text/plain 16613 LA RAGIONE sn84037024_1917-04-25_e \u2502 \u2502 1 La_Ragione/sn84037024_1 text/plain 16679 LA RAG ONE sn84037024_1917-04-25_e \u2502 \u2502 2 La_Ragione/sn84037024_1 text/plain 16793 LA RAGIONE sn84037024_1917-04-25_e \u2502 \u2502 3 La_Ragione/sn84037024_1 text/plain 16235 contro i vili, i camorri sn84037024_1917-04-25_e \u2502 \u2502 4 La_Ragione/sn84037024_1 text/plain 18346 contro i vili, i camorri sn84037024_1917-05-05_e \u2502 \u2502 5 La_Ragione/sn84037024_1 text/plain 18474 LA RAGIONA sn84037024_1917-05-05_e \u2502 \u2502 6 La_Ragione/sn84037024_1 text/plain 18280 LA RAGIONE sn84037024_1917-05-05_e \u2502 \u2502 7 La_Ragione/sn84037024_1 text/plain 18481 LA RAGIONE sn84037024_1917-05-05_e \u2502 \u2502 8 La_Ragione/sn84037024_1 text/plain 18620 contro i vili, i camorri sn84037024_1917-05-16_e \u2502 \u2502 9 La_Ragione/sn84037024_1 text/plain 18698 LA RAG ONE sn84037024_1917-05-16_e \u2502 \u2502 10 La_Ragione/sn84037024_1 text/plain 18540 contro 1 vili, i camorri sn84037024_1917-05-16_e \u2502 \u2502 11 La_Rassegna/sn84037025_ text/plain 19397 \u25a0\u25a0\u25a0 sn84037025_1917-04-07_e \u2502 \u2502 12 La_Rassegna/sn84037025_ text/plain 20647 La Rassegna sn84037025_1917-04-14_e \u2502 \u2502 13 La_Rassegna/sn84037025_ text/plain 20650 Both Phones sn84037025_1917-04-14_e \u2502 \u2502 14 La_Rassegna/sn84037025_ text/plain 21017 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- sn84037025_1917-04-21_e \u2502 \u2502 15 La_Rassegna/sn84037025_ text/plain 20982 \u25a0Both Phones sn84037025_1917-04-21_e \u2502 \u2502 \u2502 \u2502 tokenized_corpus \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', '1 ... \u2502 \u2502 ['LA', 'RAG', 'ONE', 'contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 's ... \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', 'i' ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['LA', 'RAGIONA', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', 'i' ... \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', 'i ... \u2502 \u2502 ['LA', 'RAGIONE', 'contro', 'i', 'vili', ',', '1', 'camorristi', ',', 'i', 'sica ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['LA', 'RAG', 'ONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', \"''\", 'con ... \u2502 \u2502 ['contro', '1', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'La', 'Rassegna', '_', 'I', 'Both', 'Phones', 'ANNO', 'L', 'No', '.', '1 ... \u2502 \u2502 ['La', 'Rassegna', 'Jjoth', 'Phones', 'ANNO', 'L', 'No', '.', '2', 'BASTA', '!', ... \u2502 \u2502 ['Both', 'Phones', 'ANNO', 'I', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', ... \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', ' ... \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'LE', 'COSE', 'A', 'POSTO ... \u2502 \u2502 \u2502 \u2502 topic_models \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.085*\\\",\\\" + 0.028*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + 0.005*\\\"!\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.089*\\\",\\\" + 0.035*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.101*\\\",\\\" + 0.031*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + 0.006*\\\"!\\\" + 0.005*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.067*\\\",\\\" + 0.032*\\\".\\\" + 0.013*\\\";\\\" + 0.007*\\\"'\\\" + 0.006*\\\"!\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.075*\\\",\\\" + 0.037*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.073*\\\",\\\" + 0.030*\\\".\\\" + 0.014*\\\";\\\" + 0.007*\\\"!\\\" + 0.004*\\\"'\\\" + 0.003*\\\"pe\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.026*\\\".\\\" + 0.007*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"8\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.028*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.004*\\\"'\\\" + 0.003*\\\"!\\\" + 0.003*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.025*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.005*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.056*\\\",\\\" + 0.027*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + 0.005*\\\"!\\\" + 0.005*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.110*\\\",\\\" + 0.040*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"!\\\" + 0.006*\\\"'\\\" + 0.005*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.029*\\\",\\\" + 0.017*\\\".\\\" + 0.006*\\\";\\\" + 0.004*\\\"!\\\" + 0.003*\\\"'\\\" + 0.002*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.015*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.003*\\\"'\\\" + 0.002*\\\"!\\\" + 0.002*\\\"''\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.057*\\\",\\\" + 0.033*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.007*\\\"'\\\" + 0.005*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.077*\\\",\\\" + 0.022*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"9\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.064*\\\",\\\" + 0.023*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.004*\\\"'\\\" + 0.004*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.049*\\\",\\\" + 0.032*\\\".\\\" + 0.009*\\\";\\\" + 0.005*\\\"'\\\" + 0.004*\\\"!\\\" + 0.003*\\\"``\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.020*\\\".\\\" + 0.010*\\\";\\\" + 0.004*\\\":\\\" + 0.004*\\\"'\\\" + 0.004*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.109*\\\",\\\" + 0.030*\\\".\\\" + 0.015*\\\";\\\" + 0.007*\\\"!\\\" + 0.007*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.051*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.005*\\\"''\\\" + 0.004*\\\"'\\\" + 0.004*\\\"!\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.047*\\\",\\\" + 0.016*\\\".\\\" + 0.008*\\\";\\\" + 0.005*\\\"!\\\" + 0.003*\\\"''\\\" + 0.003*\\\"'\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.074*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.005*\\\"''\\\" + 0.005*\\\"'\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.039*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 8 , \u2502 \u2502 \"0.094*\\\",\\\" + 0.041*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + 0.007*\\\"!\\\" + 0.004*\\\"*\\\u2026 \u2502 \u2502 ] \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Workflow snapshot \u00b6 So far, our workflow only exists in memory. If we want to save it so we can have a look at it again at a later stage, we can snapshot the current state, which will save the current structure of the internal pipeline, as well as all inputs that are currently used. In addition, this will register the workflow under the alias we specified on top of this file when creating the Workflow object (in our case: topic_modeling ). If we would not not specify save=True , the structure of the pipeline and inputs would still be frozen and kept, but only in memory, and we'd only be able to access it in our current session. workflow . snapshot ( save = True ) \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 76394b45-2dcb-44ca-b22b-01e0ee25bd9f \u2502 \u2502 create_stopwords_list__stopword_lists valid no cfd4f58b-358d-4640-af08-b745ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa90eec13b \u2502 \u2502 extract_filename_column__column_name valid yes 0b6bd257-60c6-4434-b66c-e855aa203622 \u2502 \u2502 extract_texts_column__column_name valid yes fd3ef854-c982-4589-b5c4-112aae1c597e \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-400746a2215b \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000002 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 generate_lda__compute_coherence valid no False 0f2ecd3e-15a8-482b-b0e2-20b65d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-73142b8522ae \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list valid list c4c81256-c387-471e-8a05-76890eaefbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79afff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a089e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now, we can access our workflow in other environments, for example from the commandline: ! kiara workflow list alias(es) workflow_id # steps # stages # states description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 topic_modeling 1a0f56d8-bfb6-459a-b7ad-ad52ea1828ff 9 6 1 Example topic-modeling end-to-end workflow. ! kiara workflow explain topic_modeling \u256d\u2500 Workflow: topic_modeling \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 documentation \u2502 \u2502 Example topic-modeling end-to-end workflow. \u2502 \u2502 \u2502 \u2502 author(s) \u2502 \u2502 \u2502 \u2502 workflow id 1a0f56d8-bfb6-459a-b7ad-ad52ea1828ff \u2502 \u2502 context \u2502 \u2502 \u2502 \u2502 current aliases { \"inputs\" :{ \"extract_texts_column__column_name\" : \"content_column_name\" , \"extract_filename_column__column_name\" : \"fi\u2026 \u2502 \u2502 current inputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 compute_coherence True \u2502 \u2502 content_column_name content \u2502 \u2502 date_force_non_null -- none/not set -- \u2502 \u2502 date_parse_max 21 \u2502 \u2502 date_parse_min 11 \u2502 \u2502 date_remove_tokensl -- none/not set -- \u2502 \u2502 filename_column_name file_name \u2502 \u2502 languages \u2502 \u2502 Field Type Value Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 item_schema object { The schema. \u2502 \u2502 \"title\": \"list\", \u2502 \u2502 \"type\": \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 list_data array italian The data. \u2502 \u2502 \u2502 \u2502 python_class -- check source -- The python class of \u2502 \u2502 pytho\u2026 list which model \u2502 \u2502 pytho\u2026 built\u2026 instances are \u2502 \u2502 full_\u2026 list created. This is \u2502 \u2502 mostly meant as a \u2502 \u2502 hint for client \u2502 \u2502 applications. \u2502 \u2502 \u2502 \u2502 num_topics_max 9 \u2502 \u2502 num_topics_min 7 \u2502 \u2502 remove_all_numeric -- none/not set -- \u2502 \u2502 remove_alphanumeric -- none/not set -- \u2502 \u2502 remove_non_alpha -- none/not set -- \u2502 \u2502 remove_short_tokens -- none/not set -- \u2502 \u2502 stopword_lists \u2502 \u2502 Field Type Value Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 item_schema object { The schema. \u2502 \u2502 \"title\": \"list\", \u2502 \u2502 \"type\": \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 list_data array The data. \u2502 \u2502 \u2502 \u2502 python_class -- check source -- The python class of \u2502 \u2502 pytho\u2026 list which model \u2502 \u2502 pytho\u2026 built\u2026 instances are \u2502 \u2502 full_\u2026 list created. This is \u2502 \u2502 mostly meant as a \u2502 \u2502 hint for client \u2502 \u2502 applications. \u2502 \u2502 \u2502 \u2502 text_corpus_folder_path /home/markus/projects/kiara/dev/kiara.examples/examples/pipelines/topic_modeling/\u2026 \u2502 \u2502 to_lowercase -- none/not set -- \u2502 \u2502 tokenize_by_word -- none/not set -- \u2502 \u2502 words_per_topic -- none/not set -- \u2502 \u2502 \u2502 \u2502 current outputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 coherence_map \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : 0.23418388139804186 , \u2502 \u2502 \"8\" : 0.2320449393569416 , \u2502 \u2502 \"9\" : 0.232008834255219 \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 coherence_table \u2502 \u2502 topic_id words num_topics \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 sempre, j, perch\u00e8, 1, degenerato, mente, mai, no, solo 7 \u2502 \u2502 2 no, j, re, perch\u00e8, to, 1, sempre, te, egli, degenerato 7 \u2502 \u2502 3 perch\u00e8, 1, sempre, no, j, to, degenerato, egli, te, re 7 \u2502 \u2502 4 sempre, j, no, altri, perch\u00e8, te, 1, degenerato, solo, 7 \u2502 \u2502 5 sempre, perch\u00e8, j, no, degenerato, te, solo, 1, egli, 7 \u2502 \u2502 6 perch\u00e8, degenerato, egli, no, j, re, 1, sempre, fatto, 7 \u2502 \u2502 7 j, sempre, degenerato, 1, egli, no, to, oggi, te, re, 7 \u2502 \u2502 1 sempre, perch\u00e8, altri, 1, j, te, no, Figli, solo, re, 8 \u2502 \u2502 2 j, sempre, degenerato, te, re, to, 1, perch\u00e8, mai, ta, 8 \u2502 \u2502 3 sempre, 1, j, perch\u00e8, no, degenerato, fare, re, altri, 8 \u2502 \u2502 4 no, perch\u00e8, sempre, j, degenerato, 1, egli, to, re, te 8 \u2502 \u2502 5 sempre, perch\u00e8, degenerato, 1, egli, j, re, mai, altri 8 \u2502 \u2502 6 sempre, altri, solo, to, j, perch\u00e8, mente, 1, re, Stat 8 \u2502 \u2502 7 sempre, j, re, perch\u00e8, degenerato, 1, egli, no, te, to 8 \u2502 \u2502 8 sempre, perch\u00e8, te, 1, j, re, egli, degenerato, no, to 8 \u2502 \u2502 1 sempre, perch\u00e8, j, no, altri, degenerato, re, te, 1, m 9 \u2502 \u2502 2 no, perch\u00e8, sempre, j, 1, degenerato, to, egli, oggi, 9 \u2502 \u2502 3 sempre, te, perch\u00e8, j, no, to, 1, egli, altri, re, men 9 \u2502 \u2502 4 sempre, j, degenerato, no, 1, re, te, perch\u00e8, fare, fa 9 \u2502 \u2502 5 sempre, no, perch\u00e8, 1, j, altri, mente, to, fatto, deg 9 \u2502 \u2502 6 sempre, egli, j, 1, no, degenerato, perch\u00e8, te, essi, 9 \u2502 \u2502 7 sempre, to, perch\u00e8, j, 1, mente, altri, re, solo, essi 9 \u2502 \u2502 8 sempre, perch\u00e8, egli, no, j, 1, degenerato, re, te, du 9 \u2502 \u2502 9 perch\u00e8, j, sempre, no, degenerato, egli, 1, to, re, te 9 \u2502 \u2502 \u2502 \u2502 content_array \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAG ONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 LA RAGIONA \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 LA RAG ONE \u2502 \u2502 contro 1 vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 \u25a0\u25a0\u25a0 \u2502 \u2502 La Rassegna \u2502 \u2502 Both Phones \u2502 \u2502 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- i^M \u2502 \u2502 \u25a0Both Phones \u2502 \u2502 \u2502 \u2502 date_array \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-04-07 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 \u2502 \u2502 preprocessed_corpus \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", '1', 'vili', ',', 'camorristi', \u2502 \u2502 ['RAG', 'ONE', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'aust \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['RAGIONA', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['RAGIONE', 'vili', ',', '1', 'camorristi', ',', 'sicari', ',', 'falsari', 'au \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['RAG', 'ONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', \"''\", 'vili', ',', 'camorrist \u2502 \u2502 ['1', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti' \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'Rassegna', '_', 'Both', 'Phones', 'ANNO', 'No', '.', '1', 'perche', \" \u2502 \u2502 ['Rassegna', 'Jjoth', 'Phones', 'ANNO', 'No', '.', '2', 'BASTA', '!', '...', ' \u2502 \u2502 ['Both', 'Phones', 'ANNO', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', 'qu \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'COSE', 'POSTO', 'va', \u2502 \u2502 \u2502 \u2502 text_corpus_file_bundle \u2502 \u2502 bundle name data \u2502 \u2502 number_of_files 16 \u2502 \u2502 size 298452 \u2502 \u2502 included files \u2502 \u2502 (relative) path size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-1_seq-1_ocr\u2026 16613 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-2_seq-1_ocr\u2026 16679 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-3_seq-1_ocr\u2026 16793 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-4_seq-1_ocr\u2026 16235 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-1_seq-1_ocr\u2026 18346 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-2_seq-1_ocr\u2026 18474 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-3_seq-1_ocr\u2026 18280 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-4_seq-1_ocr\u2026 18481 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-1_seq-1_ocr\u2026 18620 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-2_seq-1_ocr\u2026 18698 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-3_seq-1_ocr\u2026 18540 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-07_ed-1_seq-1_oc\u2026 19397 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-1_seq-1_oc\u2026 20647 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-2_seq-1_oc\u2026 20650 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-1_seq-1_oc\u2026 21017 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-2_seq-1_oc\u2026 20982 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 text_corpus_table \u2502 \u2502 id rel_path mime_type size content file_name \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 0 La_Ragione/sn84 text/plain 16613 LA RAGIONE sn84037024_1917 \u2502 \u2502 1 La_Ragione/sn84 text/plain 16679 LA RAG ONE sn84037024_1917 \u2502 \u2502 2 La_Ragione/sn84 text/plain 16793 LA RAGIONE sn84037024_1917 \u2502 \u2502 3 La_Ragione/sn84 text/plain 16235 contro i vili, i sn84037024_1917 \u2502 \u2502 4 La_Ragione/sn84 text/plain 18346 contro i vili, i sn84037024_1917 \u2502 \u2502 5 La_Ragione/sn84 text/plain 18474 LA RAGIONA sn84037024_1917 \u2502 \u2502 6 La_Ragione/sn84 text/plain 18280 LA RAGIONE sn84037024_1917 \u2502 \u2502 7 La_Ragione/sn84 text/plain 18481 LA RAGIONE sn84037024_1917 \u2502 \u2502 8 La_Ragione/sn84 text/plain 18620 contro i vili, i sn84037024_1917 \u2502 \u2502 9 La_Ragione/sn84 text/plain 18698 LA RAG ONE sn84037024_1917 \u2502 \u2502 10 La_Ragione/sn84 text/plain 18540 contro 1 vili, i sn84037024_1917 \u2502 \u2502 11 La_Rassegna/sn8 text/plain 19397 \u25a0\u25a0\u25a0 sn84037025_1917 \u2502 \u2502 12 La_Rassegna/sn8 text/plain 20647 La Rassegna sn84037025_1917 \u2502 \u2502 13 La_Rassegna/sn8 text/plain 20650 Both Phones sn84037025_1917 \u2502 \u2502 14 La_Rassegna/sn8 text/plain 21017 \u25a0 jSr\u00ect** W?? iI sn84037025_1917 \u2502 \u2502 15 La_Rassegna/sn8 text/plain 20982 \u25a0Both Phones sn84037025_1917 \u2502 \u2502 \u2502 \u2502 tokenized_corpus \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', \u2502 \u2502 ['LA', 'RAG', 'ONE', 'contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', ' \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['LA', 'RAGIONA', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', ' \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', \u2502 \u2502 ['LA', 'RAGIONE', 'contro', 'i', 'vili', ',', '1', 'camorristi', ',', 'i', 'si \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['LA', 'RAG', 'ONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', \"''\", 'c \u2502 \u2502 ['contro', '1', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'La', 'Rassegna', '_', 'I', 'Both', 'Phones', 'ANNO', 'L', 'No', '.', \u2502 \u2502 ['La', 'Rassegna', 'Jjoth', 'Phones', 'ANNO', 'L', 'No', '.', '2', 'BASTA', '! \u2502 \u2502 ['Both', 'Phones', 'ANNO', 'I', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0' \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'LE', 'COSE', 'A', 'POS \u2502 \u2502 \u2502 \u2502 topic_models \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.085*\\\",\\\" + 0.028*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.089*\\\",\\\" + 0.035*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.101*\\\",\\\" + 0.031*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.067*\\\",\\\" + 0.032*\\\".\\\" + 0.013*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.075*\\\",\\\" + 0.037*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.073*\\\",\\\" + 0.030*\\\".\\\" + 0.014*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.026*\\\".\\\" + 0.007*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"8\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.028*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.004*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.025*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.056*\\\",\\\" + 0.027*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.110*\\\",\\\" + 0.040*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.029*\\\",\\\" + 0.017*\\\".\\\" + 0.006*\\\";\\\" + 0.004*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.015*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.003*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.057*\\\",\\\" + 0.033*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.077*\\\",\\\" + 0.022*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"9\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.064*\\\",\\\" + 0.023*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.049*\\\",\\\" + 0.032*\\\".\\\" + 0.009*\\\";\\\" + 0.005*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.020*\\\".\\\" + 0.010*\\\";\\\" + 0.004*\\\":\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.109*\\\",\\\" + 0.030*\\\".\\\" + 0.015*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.051*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.005*\\\"''\\\" +\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.047*\\\",\\\" + 0.016*\\\".\\\" + 0.008*\\\";\\\" + 0.005*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.074*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.039*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 8 , \u2502 \u2502 \"0.094*\\\",\\\" + 0.041*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 snapshot timeline \u2502 \u2502 2022-10-03 13:07:56.228937+00:00 zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 \u2502 \u2502 current state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 current state details \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__lang\u2026 valid no 76394b45-2dcb-44ca-b22b-01e0 \u2502 \u2502 ee25bd9f \u2502 \u2502 create_stopwords_list__stop\u2026 valid no cfd4f58b-358d-4640-af08-b745 \u2502 \u2502 ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa \u2502 \u2502 90eec13b \u2502 \u2502 extract_filename_column__co\u2026 valid yes 0b6bd257-60c6-4434-b66c-e855 \u2502 \u2502 aa203622 \u2502 \u2502 extract_texts_column__colum\u2026 valid yes fd3ef854-c982-4589-b5c4-112a \u2502 \u2502 ae1c597e \u2502 \u2502 create_date_array__force_no\u2026 valid no True 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9 \u2502 \u2502 bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-4007 \u2502 \u2502 46a2215b \u2502 \u2502 create_date_array__remove_t\u2026 valid no [] 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 tokenize_content__tokenize_\u2026 valid no True 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_a\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_a\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_n\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_s\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__to_lower\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 generate_lda__compute_coher\u2026 valid no False 0f2ecd3e-15a8-482b-b0e2-20b6 \u2502 \u2502 5d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc \u2502 \u2502 01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-7314 \u2502 \u2502 2b8522ae \u2502 \u2502 generate_lda__words_per_top\u2026 valid no 10 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopword\u2026 valid list c4c81256-c387-471e-8a05-76890ea \u2502 \u2502 efbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934 \u2502 \u2502 f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617 \u2502 \u2502 ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048 \u2502 \u2502 d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b \u2502 \u2502 1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac \u2502 \u2502 38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79af \u2502 \u2502 ff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a08 \u2502 \u2502 9e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789 \u2502 \u2502 bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361 \u2502 \u2502 d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e \u2502 \u2502 361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Topic modeling"},{"location":"workflows/topic_modeling/#creating-the-workflow-object","text":"As the first step we create a Workflow object, which is a convenience class that manages workflow state, internal consistency and history for us: doc = \"\"\"Example topic-modeling end-to-end workflow.\"\"\" workflow = Workflow . create ( \"topic_modeling\" , doc = doc , replace_existing_alias = True )","title":"Creating the workflow object "},{"location":"workflows/topic_modeling/#assembling-the-workflow","text":"The first step in the creation of our workflow is to create the individual steps from the available kiara modules. A list of available modules and their aliases can be found here: TODO","title":"Assembling the workflow "},{"location":"workflows/topic_modeling/#creating-the-steps-of-the-workflow","text":"# Creating step: import_text_corpus workflow . add_step ( operation = \"import.file_bundle\" , step_id = \"import_text_corpus\" ) \u256d\u2500 Step: import_text_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id import_text_corpus \u2502 \u2502 module type import.file_bundle \u2502 \u2502 module doc Import a folder (file_bundle) from the local filesystem. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_text_corpus.path string The local path of the folder to import. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 import_text_corpus.file_bundle file_bundle The imported file bundle. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: create_stopwords_list workflow . add_step ( operation = \"create.stopwords_list\" , step_id = \"create_stopwords_list\" ) \u256d\u2500 Step: create_stopwords_list \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_stopwords_list \u2502 \u2502 module type create.stopwords_list \u2502 \u2502 module doc Create a list of stopwords from one or multiple sources. \u2502 \u2502 \u2502 \u2502 This will download nltk stopwords if necessary, and merge all input lists into a single, sorted list without \u2502 \u2502 duplicates. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list.languages list A list of languages, will be used to no -- no default -- \u2502 \u2502 retrieve language-specific stopword \u2502 \u2502 from nltk. \u2502 \u2502 create_stopwords_list.stopword_lists list A list of lists of stopwords. no -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list.stopwords_list list A sorted list of unique stopwords. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: create_text_corpus step_create_text_corpus_config = { 'constants' : {}, 'defaults' : {}, 'source_type' : 'text_file_bundle' , 'target_type' : 'table' , 'ignore_errors' : False } workflow . add_step ( operation = \"create.table\" , module_config = step_create_text_corpus_config , step_id = \"create_text_corpus\" ) \u256d\u2500 Step: create_text_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_text_corpus \u2502 \u2502 module type create.table \u2502 \u2502 module_config { \u2502 \u2502 \"source_type\" : \"text_file_bundle\" , \u2502 \u2502 \"target_type\" : \"table\" , \u2502 \u2502 \"ignore_errors\" : false \u2502 \u2502 } \u2502 \u2502 module doc -- n/a -- \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_text_corpus.text_file_b text_file_bundle The type of the source value. yes -- no default -- \u2502 \u2502 undle \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_text_corpus.table table The result value. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'create_text_corpus' workflow . connect_fields ( \"create_text_corpus.text_file_bundle\" , \"import_text_corpus.file_bundle\" ) # Creating step: extract_texts_column workflow . add_step ( operation = \"table.cut_column\" , step_id = \"extract_texts_column\" ) \u256d\u2500 Step: extract_texts_column \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id extract_texts_column \u2502 \u2502 module type table.cut_column \u2502 \u2502 module doc Cut off one column from a table, returning an array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_texts_column.table table A table. yes -- no default -- \u2502 \u2502 extract_texts_column.column_name string The name of the column to extract. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_texts_column.array array The column. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'extract_texts_column' workflow . connect_fields ( \"extract_texts_column.table\" , \"create_text_corpus.table\" ) # Creating step: extract_filename_column workflow . add_step ( operation = \"table.cut_column\" , step_id = \"extract_filename_column\" ) \u256d\u2500 Step: extract_filename_column \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id extract_filename_column \u2502 \u2502 module type table.cut_column \u2502 \u2502 module doc Cut off one column from a table, returning an array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_filename_column.table table A table. yes -- no default -- \u2502 \u2502 extract_filename_column.column_name string The name of the column to extract. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 extract_filename_column.array array The column. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'extract_filename_column' workflow . connect_fields ( \"extract_filename_column.table\" , \"create_text_corpus.table\" ) # Creating step: create_date_array workflow . add_step ( operation = \"parse.date_array\" , step_id = \"create_date_array\" ) \u256d\u2500 Step: create_date_array \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id create_date_array \u2502 \u2502 module type parse.date_array \u2502 \u2502 module_config { \u2502 \u2502 \"add_inputs\" : true , \u2502 \u2502 \"input_fields\" : [], \u2502 \u2502 \"force_non_null\" : true , \u2502 \u2502 \"min_index\" : null , \u2502 \u2502 \"max_index\" : null , \u2502 \u2502 \"remove_tokens\" : [] \u2502 \u2502 } \u2502 \u2502 module doc Create an array of date objects from an array of strings. \u2502 \u2502 \u2502 \u2502 This module is very simplistic at the moment, more functionality and options will be added in the future. \u2502 \u2502 \u2502 \u2502 At its core, this module uses the standard parser from the dateutil package to parse strings into dates. As this \u2502 \u2502 parser can't handle complex strings, the input strings can be pre-processed in the following ways: \u2502 \u2502 \u2502 \u2502 \u2022 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options) \u2502 \u2502 \u2022 remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' \u2502 \u2502 option) \u2502 \u2502 \u2502 \u2502 By default, if an input string can't be parsed this module will raise an exception. This can be prevented by setting \u2502 \u2502 this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings will appear as \u2502 \u2502 'NULL' value in the resulting array. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_date_array.array array The input array. yes -- no default -- \u2502 \u2502 create_date_array.force_non_null boolean If set to 'True', raise an error if no True \u2502 \u2502 any of the strings in the array can't \u2502 \u2502 be parsed. \u2502 \u2502 create_date_array.min_index integer The minimum index from where to start no -- no default -- \u2502 \u2502 parsing the string(s). \u2502 \u2502 create_date_array.max_index integer The maximum index until whic to parse no -- no default -- \u2502 \u2502 the string(s). \u2502 \u2502 create_date_array.remove_tokens list A list of tokens/characters to no [] \u2502 \u2502 replace with a single white-space \u2502 \u2502 before parsing the input. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_date_array.date_array array The resulting array with items of a date data type. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'create_date_array' workflow . connect_fields ( \"create_date_array.array\" , \"extract_filename_column.array\" ) # Creating step: tokenize_content workflow . add_step ( operation = \"tokenize.texts_array\" , step_id = \"tokenize_content\" ) \u256d\u2500 Step: tokenize_content \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id tokenize_content \u2502 \u2502 module type tokenize.texts_array \u2502 \u2502 module doc Split sentences into words or words into characters. \u2502 \u2502 \u2502 \u2502 In other words, this operation establishes the word boundaries (i.e., tokens) a very helpful way of finding patterns. \u2502 \u2502 It is also the typical step prior to stemming and lemmatization \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 tokenize_content.texts_array array An array of text items to be yes -- no default -- \u2502 \u2502 tokenized. \u2502 \u2502 tokenize_content.tokenize_by_word boolean Whether to tokenize by word (default), no True \u2502 \u2502 or character. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 tokenize_content.tokens_array array The tokenized content, as an array of lists of strings. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'tokenize_content' workflow . connect_fields ( \"tokenize_content.texts_array\" , \"extract_texts_column.array\" ) # Creating step: preprocess_corpus workflow . add_step ( operation = \"preprocess.tokens_array\" , step_id = \"preprocess_corpus\" ) \u256d\u2500 Step: preprocess_corpus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id preprocess_corpus \u2502 \u2502 module type preprocess.tokens_array \u2502 \u2502 module doc Preprocess lists of tokens, incl. lowercasing, remove special characers, etc. \u2502 \u2502 \u2502 \u2502 Lowercasing: Lowercase the words. This operation is a double-edged sword. It can be effective at yielding potentially \u2502 \u2502 better results in the case of relatively small datasets or datatsets with a high percentage of OCR mistakes. For \u2502 \u2502 instance, if lowercasing is not performed, the algorithm will treat USA, Usa, usa, UsA, uSA, etc. as distinct tokens, \u2502 \u2502 even though they may all refer to the same entity. On the other hand, if the dataset does not contain such OCR \u2502 \u2502 mistakes, then it may become difficult to distinguish between homonyms and make interpreting the topics much harder. \u2502 \u2502 \u2502 \u2502 Removing stopwords and words with less than three characters: Remove low information words. These are typically words \u2502 \u2502 such as articles, pronouns, prepositions, conjunctions, etc. which are not semantically salient. There are numerous \u2502 \u2502 stopword lists available for many, though not all, languages which can be easily adapted to the individual \u2502 \u2502 researcher's needs. Removing words with less than three characters may additionally remove many OCR mistakes. Both \u2502 \u2502 these operations have the dual advantage of yielding more reliable results while reducing the size of the dataset, \u2502 \u2502 thus in turn reducing the required processing power. This step can therefore hardly be considered optional in TM. \u2502 \u2502 \u2502 \u2502 Noise removal: Remove elements such as punctuation marks, special characters, numbers, html formatting, etc. This \u2502 \u2502 operation is again concerned with removing elements that may not be relevant to the text analysis and in fact \u2502 \u2502 interfere with it. Depending on the dataset and research question, this operation can become essential. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 preprocess_corpus.tokens_array array The tokens array to pre-process. yes -- no default -- \u2502 \u2502 preprocess_corpus.to_lowercase boolean Apply lowercasing to the text. no False \u2502 \u2502 preprocess_corpus.remove_alphanumer boolean Remove all tokens that include no False \u2502 \u2502 ic numbers (e.g. ex1ample). \u2502 \u2502 preprocess_corpus.remove_non_alpha boolean Remove all tokens that include no False \u2502 \u2502 punctuation and numbers (e.g. \u2502 \u2502 ex1a.mple). \u2502 \u2502 preprocess_corpus.remove_all_numeri boolean Remove all tokens that contain no False \u2502 \u2502 c numbers only (e.g. 876). \u2502 \u2502 preprocess_corpus.remove_short_toke integer Remove tokens shorter than a certain no False \u2502 \u2502 ns length. If value is <= 0, no \u2502 \u2502 filtering will be done. \u2502 \u2502 preprocess_corpus.remove_stopwords list Remove stopwords. no -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 preprocess_corpus.tokens_array array The pre-processed content, as an array of lists of strings. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'preprocess_corpus' workflow . connect_fields ( \"preprocess_corpus.tokens_array\" , \"tokenize_content.tokens_array\" ) workflow . connect_fields ( \"preprocess_corpus.remove_stopwords\" , \"create_stopwords_list.stopwords_list\" ) # Creating step: generate_lda workflow . add_step ( operation = \"generate.LDA.for.tokens_array\" , step_id = \"generate_lda\" ) \u256d\u2500 Step: generate_lda \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id generate_lda \u2502 \u2502 module type generate.LDA.for.tokens_array \u2502 \u2502 module doc Perform Latent Dirichlet Allocation on a tokenized corpus. \u2502 \u2502 \u2502 \u2502 This module computes models for a range of number of topics provided by the user. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 generate_lda.tokens_array array The text corpus. yes -- no default -- \u2502 \u2502 generate_lda.num_topics_min integer The minimal number of topics. no 7 \u2502 \u2502 generate_lda.num_topics_max integer The max number of topics. no -- no default -- \u2502 \u2502 generate_lda.compute_coherence boolean Whether to compute the coherence score no False \u2502 \u2502 for each model. \u2502 \u2502 generate_lda.words_per_topic integer How many words per topic to put in the no 10 \u2502 \u2502 result model. \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 generate_lda.topic_models dict A dictionary with one coherence model table for each number of topics. \u2502 \u2502 generate_lda.coherence_table table Coherence details. \u2502 \u2502 generate_lda.coherence_map dict A map with the coherence value for every number of topics. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'generate_lda' workflow . connect_fields ( \"generate_lda.tokens_array\" , \"preprocess_corpus.tokens_array\" )","title":"Creating the steps of the workflow "},{"location":"workflows/topic_modeling/#setting-workflow-inputoutput-names-optional","text":"To make our workflow nicer to use, we can set aliases for its inputs and outputs. workflow . set_input_alias ( input_field = \"extract_texts_column.column_name\" , alias = \"content_column_name\" ) workflow . set_input_alias ( input_field = \"extract_filename_column.column_name\" , alias = \"filename_column_name\" ) workflow . set_input_alias ( input_field = \"import_text_corpus.path\" , alias = \"text_corpus_folder_path\" ) workflow . set_input_alias ( input_field = \"create_date_array.min_index\" , alias = \"date_parse_min\" ) workflow . set_input_alias ( input_field = \"create_date_array.max_index\" , alias = \"date_parse_max\" ) workflow . set_input_alias ( input_field = \"create_date_array.force_non_null\" , alias = \"date_force_non_null\" ) workflow . set_input_alias ( input_field = \"create_date_array.remove_tokens\" , alias = \"date_remove_tokensl\" ) workflow . set_input_alias ( input_field = \"tokenize_content.tokenize_by_word\" , alias = \"tokenize_by_word\" ) workflow . set_input_alias ( input_field = \"generate_lda.num_topics_min\" , alias = \"num_topics_min\" ) workflow . set_input_alias ( input_field = \"generate_lda.num_topics_max\" , alias = \"num_topics_max\" ) workflow . set_input_alias ( input_field = \"generate_lda.compute_coherence\" , alias = \"compute_coherence\" ) workflow . set_input_alias ( input_field = \"generate_lda.words_per_topic\" , alias = \"words_per_topic\" ) workflow . set_input_alias ( input_field = \"create_stopwords_list.languages\" , alias = \"languages\" ) workflow . set_input_alias ( input_field = \"create_stopwords_list.stopword_lists\" , alias = \"stopword_lists\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.to_lowercase\" , alias = \"to_lowercase\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_alphanumeric\" , alias = \"remove_alphanumeric\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_non_alpha\" , alias = \"remove_non_alpha\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_all_numeric\" , alias = \"remove_all_numeric\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_short_tokens\" , alias = \"remove_short_tokens\" ) workflow . set_input_alias ( input_field = \"preprocess_corpus.remove_stopwords\" , alias = \"remove_stopwords\" ) workflow . set_output_alias ( output_field = \"import_text_corpus.file_bundle\" , alias = \"text_corpus_file_bundle\" ) workflow . set_output_alias ( output_field = \"create_text_corpus.table\" , alias = \"text_corpus_table\" ) workflow . set_output_alias ( output_field = \"extract_texts_column.array\" , alias = \"content_array\" ) workflow . set_output_alias ( output_field = \"tokenize_content.tokens_array\" , alias = \"tokenized_corpus\" ) workflow . set_output_alias ( output_field = \"preprocess_corpus.tokens_array\" , alias = \"preprocessed_corpus\" ) workflow . set_output_alias ( output_field = \"generate_lda.topic_models\" , alias = \"topic_models\" ) workflow . set_output_alias ( output_field = \"generate_lda.coherence_map\" , alias = \"coherence_map\" ) workflow . set_output_alias ( output_field = \"generate_lda.coherence_table\" , alias = \"coherence_table\" ) workflow . set_output_alias ( output_field = \"create_date_array.date_array\" , alias = \"date_array\" )","title":"Setting workflow input/output names (optional)"},{"location":"workflows/topic_modeling/#workflow-information","text":"After our workflow is wired up, we look can look at its structure, and other properties.","title":"Workflow information "},{"location":"workflows/topic_modeling/#workflow-status","text":"A workflow consists of a series of 'states', the most relevant is always the most recent one. We can investigate that latest states details like so: workflow . current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuAuzjRbxHaGKvGVJ7rxJQ27Hfy2k7qLTxC3vxowNLwnH4U \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_stopwords_list__stopword_lists valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 import_text_corpus__path not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_filename_column__column_name not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_texts_column__column_name not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__max_index valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__min_index valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000001 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__compute_coherence valid no False 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__num_topics_max valid no 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__num_topics_min valid no 7 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 path : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 text_file_bundle : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 table : not set \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 column_name : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u251c\u2500\u2500 table : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 column_name : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 array : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 texts_array : not set \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2514\u2500\u2500 tokens_array : not set \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2514\u2500\u2500 tokens_array : not set \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 import_text_corpus__file_bundle not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_text_corpus__table not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_filename_column__array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 extract_texts_column__array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 create_date_array__date_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 tokenize_content__tokens_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 preprocess_corpus__tokens_array not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__coherence_map not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__coherence_table not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 generate_lda__topic_models not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow status"},{"location":"workflows/topic_modeling/#pipeline-execution-graph","text":"Let's look at the current execution graph for the current workflow pipeline: graph_to_image ( workflow . pipeline . execution_graph )","title":"Pipeline execution graph"},{"location":"workflows/topic_modeling/#workflow-inputs","text":"Once a workflow has an assembled pipeline, we can set it's inputs. We use the input field names that we got from the result of the workflow.current_state call. workflow . set_input ( \"text_corpus_folder_path\" , \"/home/markus/projects/kiara/dev/kiara.examples/examples/pipelines/topic_modeling/../../data/text_corpus/data\" ) workflow . set_input ( \"content_column_name\" , \"content\" ) workflow . set_input ( \"filename_column_name\" , \"file_name\" ) workflow . set_input ( \"date_force_non_null\" , None ) workflow . set_input ( \"date_parse_min\" , 11 ) workflow . set_input ( \"date_parse_max\" , 21 ) workflow . set_input ( \"date_remove_tokensl\" , None ) workflow . set_input ( \"tokenize_by_word\" , None ) workflow . set_input ( \"languages\" , [ 'italian' ]) workflow . set_input ( \"stopword_lists\" , []) workflow . set_input ( \"to_lowercase\" , None ) workflow . set_input ( \"remove_alphanumeric\" , None ) workflow . set_input ( \"remove_non_alpha\" , None ) workflow . set_input ( \"remove_all_numeric\" , None ) workflow . set_input ( \"remove_short_tokens\" , None ) workflow . set_input ( \"num_topics_min\" , 7 ) workflow . set_input ( \"num_topics_max\" , 9 ) workflow . set_input ( \"compute_coherence\" , True ) workflow . set_input ( \"words_per_topic\" , None ) # process all workflow steps that can be processed workflow . process_steps () # print the current state, after we set our inputs workflow . current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 76394b45-2dcb-44ca-b22b-01e0ee25bd9f \u2502 \u2502 create_stopwords_list__stopword_lists valid no cfd4f58b-358d-4640-af08-b745ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa90eec13b \u2502 \u2502 extract_filename_column__column_name valid yes 0b6bd257-60c6-4434-b66c-e855aa203622 \u2502 \u2502 extract_texts_column__column_name valid yes fd3ef854-c982-4589-b5c4-112aae1c597e \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-400746a2215b \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000002 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 generate_lda__compute_coherence valid no False 0f2ecd3e-15a8-482b-b0e2-20b65d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-73142b8522ae \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list valid list c4c81256-c387-471e-8a05-76890eaefbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79afff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a089e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow inputs "},{"location":"workflows/topic_modeling/#workflow-outputs","text":"To print the actual data of the workflows' current outputs, we call the current_output_values property of the workflow object: workflow . current_output_values \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 coherence_map \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : 0.23418388139804186 , \u2502 \u2502 \"8\" : 0.2320449393569416 , \u2502 \u2502 \"9\" : 0.232008834255219 \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 coherence_table \u2502 \u2502 topic_id words num_topics \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 sempre, j, perch\u00e8, 1, degenerato, mente, mai, no, solo, re, altri, to, te, egl 7 \u2502 \u2502 2 no, j, re, perch\u00e8, to, 1, sempre, te, egli, degenerato, mente, do, fatto, essi 7 \u2502 \u2502 3 perch\u00e8, 1, sempre, no, j, to, degenerato, egli, te, re, mente, oggi, essi, far 7 \u2502 \u2502 4 sempre, j, no, altri, perch\u00e8, te, 1, degenerato, solo, to, re, fatto, egli, ta 7 \u2502 \u2502 5 sempre, perch\u00e8, j, no, degenerato, te, solo, 1, egli, re, altri, do, essi, ri, 7 \u2502 \u2502 6 perch\u00e8, degenerato, egli, no, j, re, 1, sempre, fatto, te, ta, to, oggi, quel, 7 \u2502 \u2502 7 j, sempre, degenerato, 1, egli, no, to, oggi, te, re, mente, perch\u00e8, quando, e 7 \u2502 \u2502 1 sempre, perch\u00e8, altri, 1, j, te, no, Figli, solo, re, po, n\u00e8, degenerato, to, 8 \u2502 \u2502 2 j, sempre, degenerato, te, re, to, 1, perch\u00e8, mai, ta, egli, altri, no, oggi, 8 \u2502 \u2502 3 sempre, 1, j, perch\u00e8, no, degenerato, fare, re, altri, solo, mente, n\u00e8, Figli, 8 \u2502 \u2502 4 no, perch\u00e8, sempre, j, degenerato, 1, egli, to, re, te, mente, essi, solo, fat 8 \u2502 \u2502 5 sempre, perch\u00e8, degenerato, 1, egli, j, re, mai, altri, no, do, te, giornale, 8 \u2502 \u2502 6 sempre, altri, solo, to, j, perch\u00e8, mente, 1, re, State, ta, mai, n\u00e8, te, Figl 8 \u2502 \u2502 7 sempre, j, re, perch\u00e8, degenerato, 1, egli, no, te, to, mai, mente, solo, oggi 8 \u2502 \u2502 8 sempre, perch\u00e8, te, 1, j, re, egli, degenerato, no, to, fare, ta, oggi, mai, r 8 \u2502 \u2502 1 sempre, perch\u00e8, j, no, altri, degenerato, re, te, 1, mente, essi, mai, egli, t 9 \u2502 \u2502 2 no, perch\u00e8, sempre, j, 1, degenerato, to, egli, oggi, fatto, re, te, solo, mai 9 \u2502 \u2502 3 sempre, te, perch\u00e8, j, no, to, 1, egli, altri, re, mente, mai, degenerato, sol 9 \u2502 \u2502 4 sempre, j, degenerato, no, 1, re, te, perch\u00e8, fare, fatto, to, mente, mai, egl 9 \u2502 \u2502 5 sempre, no, perch\u00e8, 1, j, altri, mente, to, fatto, degenerato, n\u00e8, re, solo, e 9 \u2502 \u2502 6 sempre, egli, j, 1, no, degenerato, perch\u00e8, te, essi, quel, fatto, re, ta, ogg 9 \u2502 \u2502 7 sempre, to, perch\u00e8, j, 1, mente, altri, re, solo, essi, te, fare, po, degenera 9 \u2502 \u2502 8 sempre, perch\u00e8, egli, no, j, 1, degenerato, re, te, due, solo, to, altri, ment 9 \u2502 \u2502 9 perch\u00e8, j, sempre, no, degenerato, egli, 1, to, re, te, oggi, giornale, solo, 9 \u2502 \u2502 \u2502 \u2502 content_array \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAG ONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 LA RAGIONA \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 LA RAG ONE \u2502 \u2502 contro 1 vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici dell ... \u2502 \u2502 \u25a0\u25a0\u25a0 \u2502 \u2502 La Rassegna \u2502 \u2502 Both Phones \u2502 \u2502 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- i^M \u2502 \u2502 \u25a0Both Phones \u2502 \u2502 \u2502 \u2502 date_array \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-04-07 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 \u2502 \u2502 preprocessed_corpus \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", '1', 'vili', ',', 'camorristi', ' ... \u2502 \u2502 ['RAG', 'ONE', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austri ... \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', 's ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['RAGIONA', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', 's ... \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", 'vili', ',', 'camorristi', ',', ' ... \u2502 \u2502 ['RAGIONE', 'vili', ',', '1', 'camorristi', ',', 'sicari', ',', 'falsari', 'aust ... \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',', ... \u2502 \u2502 ['RAG', 'ONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', \"''\", 'vili', ',', 'camorristi' ... \u2502 \u2502 ['1', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ... \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'Rassegna', '_', 'Both', 'Phones', 'ANNO', 'No', '.', '1', 'perche', \"'\" ... \u2502 \u2502 ['Rassegna', 'Jjoth', 'Phones', 'ANNO', 'No', '.', '2', 'BASTA', '!', '...', 'qu ... \u2502 \u2502 ['Both', 'Phones', 'ANNO', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', 'quai ... \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', ' ... \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'COSE', 'POSTO', 'va', 'd ... \u2502 \u2502 \u2502 \u2502 text_corpus_file_bundle \u2502 \u2502 bundle name data \u2502 \u2502 number_of_files 16 \u2502 \u2502 size 298452 \u2502 \u2502 included files \u2502 \u2502 (relative) path size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-1_seq-1_ocr.txt 16613 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-2_seq-1_ocr.txt 16679 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-3_seq-1_ocr.txt 16793 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-4_seq-1_ocr.txt 16235 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-1_seq-1_ocr.txt 18346 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-2_seq-1_ocr.txt 18474 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-3_seq-1_ocr.txt 18280 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-4_seq-1_ocr.txt 18481 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-1_seq-1_ocr.txt 18620 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-2_seq-1_ocr.txt 18698 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-3_seq-1_ocr.txt 18540 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-07_ed-1_seq-1_ocr.txt 19397 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-1_seq-1_ocr.txt 20647 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-2_seq-1_ocr.txt 20650 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-1_seq-1_ocr.txt 21017 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-2_seq-1_ocr.txt 20982 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 text_corpus_table \u2502 \u2502 id rel_path mime_type size content file_name \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 0 La_Ragione/sn84037024_1 text/plain 16613 LA RAGIONE sn84037024_1917-04-25_e \u2502 \u2502 1 La_Ragione/sn84037024_1 text/plain 16679 LA RAG ONE sn84037024_1917-04-25_e \u2502 \u2502 2 La_Ragione/sn84037024_1 text/plain 16793 LA RAGIONE sn84037024_1917-04-25_e \u2502 \u2502 3 La_Ragione/sn84037024_1 text/plain 16235 contro i vili, i camorri sn84037024_1917-04-25_e \u2502 \u2502 4 La_Ragione/sn84037024_1 text/plain 18346 contro i vili, i camorri sn84037024_1917-05-05_e \u2502 \u2502 5 La_Ragione/sn84037024_1 text/plain 18474 LA RAGIONA sn84037024_1917-05-05_e \u2502 \u2502 6 La_Ragione/sn84037024_1 text/plain 18280 LA RAGIONE sn84037024_1917-05-05_e \u2502 \u2502 7 La_Ragione/sn84037024_1 text/plain 18481 LA RAGIONE sn84037024_1917-05-05_e \u2502 \u2502 8 La_Ragione/sn84037024_1 text/plain 18620 contro i vili, i camorri sn84037024_1917-05-16_e \u2502 \u2502 9 La_Ragione/sn84037024_1 text/plain 18698 LA RAG ONE sn84037024_1917-05-16_e \u2502 \u2502 10 La_Ragione/sn84037024_1 text/plain 18540 contro 1 vili, i camorri sn84037024_1917-05-16_e \u2502 \u2502 11 La_Rassegna/sn84037025_ text/plain 19397 \u25a0\u25a0\u25a0 sn84037025_1917-04-07_e \u2502 \u2502 12 La_Rassegna/sn84037025_ text/plain 20647 La Rassegna sn84037025_1917-04-14_e \u2502 \u2502 13 La_Rassegna/sn84037025_ text/plain 20650 Both Phones sn84037025_1917-04-14_e \u2502 \u2502 14 La_Rassegna/sn84037025_ text/plain 21017 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- sn84037025_1917-04-21_e \u2502 \u2502 15 La_Rassegna/sn84037025_ text/plain 20982 \u25a0Both Phones sn84037025_1917-04-21_e \u2502 \u2502 \u2502 \u2502 tokenized_corpus \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', '1 ... \u2502 \u2502 ['LA', 'RAG', 'ONE', 'contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 's ... \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', 'i' ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['LA', 'RAGIONA', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', 'i' ... \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', 'i ... \u2502 \u2502 ['LA', 'RAGIONE', 'contro', 'i', 'vili', ',', '1', 'camorristi', ',', 'i', 'sica ... \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['LA', 'RAG', 'ONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', \"''\", 'con ... \u2502 \u2502 ['contro', '1', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', 'f ... \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'La', 'Rassegna', '_', 'I', 'Both', 'Phones', 'ANNO', 'L', 'No', '.', '1 ... \u2502 \u2502 ['La', 'Rassegna', 'Jjoth', 'Phones', 'ANNO', 'L', 'No', '.', '2', 'BASTA', '!', ... \u2502 \u2502 ['Both', 'Phones', 'ANNO', 'I', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', ... \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', ' ... \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'LE', 'COSE', 'A', 'POSTO ... \u2502 \u2502 \u2502 \u2502 topic_models \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.085*\\\",\\\" + 0.028*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + 0.005*\\\"!\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.089*\\\",\\\" + 0.035*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.101*\\\",\\\" + 0.031*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + 0.006*\\\"!\\\" + 0.005*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.067*\\\",\\\" + 0.032*\\\".\\\" + 0.013*\\\";\\\" + 0.007*\\\"'\\\" + 0.006*\\\"!\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.075*\\\",\\\" + 0.037*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.073*\\\",\\\" + 0.030*\\\".\\\" + 0.014*\\\";\\\" + 0.007*\\\"!\\\" + 0.004*\\\"'\\\" + 0.003*\\\"pe\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.026*\\\".\\\" + 0.007*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"8\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.028*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.004*\\\"'\\\" + 0.003*\\\"!\\\" + 0.003*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.025*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.005*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.056*\\\",\\\" + 0.027*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + 0.005*\\\"!\\\" + 0.005*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.110*\\\",\\\" + 0.040*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"!\\\" + 0.006*\\\"'\\\" + 0.005*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.029*\\\",\\\" + 0.017*\\\".\\\" + 0.006*\\\";\\\" + 0.004*\\\"!\\\" + 0.003*\\\"'\\\" + 0.002*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.015*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.003*\\\"'\\\" + 0.002*\\\"!\\\" + 0.002*\\\"''\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.057*\\\",\\\" + 0.033*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + 0.007*\\\"'\\\" + 0.005*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.077*\\\",\\\" + 0.022*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\"''\u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"9\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.064*\\\",\\\" + 0.023*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.004*\\\"'\\\" + 0.004*\\\"*\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.049*\\\",\\\" + 0.032*\\\".\\\" + 0.009*\\\";\\\" + 0.005*\\\"'\\\" + 0.004*\\\"!\\\" + 0.003*\\\"``\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.020*\\\".\\\" + 0.010*\\\";\\\" + 0.004*\\\":\\\" + 0.004*\\\"'\\\" + 0.004*\\\"se\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.109*\\\",\\\" + 0.030*\\\".\\\" + 0.015*\\\";\\\" + 0.007*\\\"!\\\" + 0.007*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.051*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.005*\\\"''\\\" + 0.004*\\\"'\\\" + 0.004*\\\"!\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.047*\\\",\\\" + 0.016*\\\".\\\" + 0.008*\\\";\\\" + 0.005*\\\"!\\\" + 0.003*\\\"''\\\" + 0.003*\\\"'\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.074*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + 0.005*\\\"''\\\" + 0.005*\\\"'\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.039*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + 0.006*\\\"'\\\" + 0.004*\\\":\\\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 8 , \u2502 \u2502 \"0.094*\\\",\\\" + 0.041*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + 0.007*\\\"!\\\" + 0.004*\\\"*\\\u2026 \u2502 \u2502 ] \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow outputs "},{"location":"workflows/topic_modeling/#workflow-snapshot","text":"So far, our workflow only exists in memory. If we want to save it so we can have a look at it again at a later stage, we can snapshot the current state, which will save the current structure of the internal pipeline, as well as all inputs that are currently used. In addition, this will register the workflow under the alias we specified on top of this file when creating the Workflow object (in our case: topic_modeling ). If we would not not specify save=True , the structure of the pipeline and inputs would still be frozen and kept, but only in memory, and we'd only be able to access it in our current session. workflow . snapshot ( save = True ) \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__languages valid no 76394b45-2dcb-44ca-b22b-01e0ee25bd9f \u2502 \u2502 create_stopwords_list__stopword_lists valid no cfd4f58b-358d-4640-af08-b745ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa90eec13b \u2502 \u2502 extract_filename_column__column_name valid yes 0b6bd257-60c6-4434-b66c-e855aa203622 \u2502 \u2502 extract_texts_column__column_name valid yes fd3ef854-c982-4589-b5c4-112aae1c597e \u2502 \u2502 create_date_array__force_non_null valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-400746a2215b \u2502 \u2502 create_date_array__remove_tokens valid no [] 00000000-0000-0000-0000-000000000002 \u2502 \u2502 tokenize_content__tokenize_by_word valid no True 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_all_numeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_alphanumeric valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_non_alpha valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__remove_short_tokens valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 preprocess_corpus__to_lowercase valid no False 00000000-0000-0000-0000-000000000002 \u2502 \u2502 generate_lda__compute_coherence valid no False 0f2ecd3e-15a8-482b-b0e2-20b65d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-73142b8522ae \u2502 \u2502 generate_lda__words_per_topic valid no 10 00000000-0000-0000-0000-000000000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopwords_list valid list c4c81256-c387-471e-8a05-76890eaefbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79afff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a089e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now, we can access our workflow in other environments, for example from the commandline: ! kiara workflow list alias(es) workflow_id # steps # stages # states description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 topic_modeling 1a0f56d8-bfb6-459a-b7ad-ad52ea1828ff 9 6 1 Example topic-modeling end-to-end workflow. ! kiara workflow explain topic_modeling \u256d\u2500 Workflow: topic_modeling \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 documentation \u2502 \u2502 Example topic-modeling end-to-end workflow. \u2502 \u2502 \u2502 \u2502 author(s) \u2502 \u2502 \u2502 \u2502 workflow id 1a0f56d8-bfb6-459a-b7ad-ad52ea1828ff \u2502 \u2502 context \u2502 \u2502 \u2502 \u2502 current aliases { \"inputs\" :{ \"extract_texts_column__column_name\" : \"content_column_name\" , \"extract_filename_column__column_name\" : \"fi\u2026 \u2502 \u2502 current inputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 compute_coherence True \u2502 \u2502 content_column_name content \u2502 \u2502 date_force_non_null -- none/not set -- \u2502 \u2502 date_parse_max 21 \u2502 \u2502 date_parse_min 11 \u2502 \u2502 date_remove_tokensl -- none/not set -- \u2502 \u2502 filename_column_name file_name \u2502 \u2502 languages \u2502 \u2502 Field Type Value Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 item_schema object { The schema. \u2502 \u2502 \"title\": \"list\", \u2502 \u2502 \"type\": \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 list_data array italian The data. \u2502 \u2502 \u2502 \u2502 python_class -- check source -- The python class of \u2502 \u2502 pytho\u2026 list which model \u2502 \u2502 pytho\u2026 built\u2026 instances are \u2502 \u2502 full_\u2026 list created. This is \u2502 \u2502 mostly meant as a \u2502 \u2502 hint for client \u2502 \u2502 applications. \u2502 \u2502 \u2502 \u2502 num_topics_max 9 \u2502 \u2502 num_topics_min 7 \u2502 \u2502 remove_all_numeric -- none/not set -- \u2502 \u2502 remove_alphanumeric -- none/not set -- \u2502 \u2502 remove_non_alpha -- none/not set -- \u2502 \u2502 remove_short_tokens -- none/not set -- \u2502 \u2502 stopword_lists \u2502 \u2502 Field Type Value Description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 item_schema object { The schema. \u2502 \u2502 \"title\": \"list\", \u2502 \u2502 \"type\": \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 list_data array The data. \u2502 \u2502 \u2502 \u2502 python_class -- check source -- The python class of \u2502 \u2502 pytho\u2026 list which model \u2502 \u2502 pytho\u2026 built\u2026 instances are \u2502 \u2502 full_\u2026 list created. This is \u2502 \u2502 mostly meant as a \u2502 \u2502 hint for client \u2502 \u2502 applications. \u2502 \u2502 \u2502 \u2502 text_corpus_folder_path /home/markus/projects/kiara/dev/kiara.examples/examples/pipelines/topic_modeling/\u2026 \u2502 \u2502 to_lowercase -- none/not set -- \u2502 \u2502 tokenize_by_word -- none/not set -- \u2502 \u2502 words_per_topic -- none/not set -- \u2502 \u2502 \u2502 \u2502 current outputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 coherence_map \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : 0.23418388139804186 , \u2502 \u2502 \"8\" : 0.2320449393569416 , \u2502 \u2502 \"9\" : 0.232008834255219 \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 coherence_table \u2502 \u2502 topic_id words num_topics \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 1 sempre, j, perch\u00e8, 1, degenerato, mente, mai, no, solo 7 \u2502 \u2502 2 no, j, re, perch\u00e8, to, 1, sempre, te, egli, degenerato 7 \u2502 \u2502 3 perch\u00e8, 1, sempre, no, j, to, degenerato, egli, te, re 7 \u2502 \u2502 4 sempre, j, no, altri, perch\u00e8, te, 1, degenerato, solo, 7 \u2502 \u2502 5 sempre, perch\u00e8, j, no, degenerato, te, solo, 1, egli, 7 \u2502 \u2502 6 perch\u00e8, degenerato, egli, no, j, re, 1, sempre, fatto, 7 \u2502 \u2502 7 j, sempre, degenerato, 1, egli, no, to, oggi, te, re, 7 \u2502 \u2502 1 sempre, perch\u00e8, altri, 1, j, te, no, Figli, solo, re, 8 \u2502 \u2502 2 j, sempre, degenerato, te, re, to, 1, perch\u00e8, mai, ta, 8 \u2502 \u2502 3 sempre, 1, j, perch\u00e8, no, degenerato, fare, re, altri, 8 \u2502 \u2502 4 no, perch\u00e8, sempre, j, degenerato, 1, egli, to, re, te 8 \u2502 \u2502 5 sempre, perch\u00e8, degenerato, 1, egli, j, re, mai, altri 8 \u2502 \u2502 6 sempre, altri, solo, to, j, perch\u00e8, mente, 1, re, Stat 8 \u2502 \u2502 7 sempre, j, re, perch\u00e8, degenerato, 1, egli, no, te, to 8 \u2502 \u2502 8 sempre, perch\u00e8, te, 1, j, re, egli, degenerato, no, to 8 \u2502 \u2502 1 sempre, perch\u00e8, j, no, altri, degenerato, re, te, 1, m 9 \u2502 \u2502 2 no, perch\u00e8, sempre, j, 1, degenerato, to, egli, oggi, 9 \u2502 \u2502 3 sempre, te, perch\u00e8, j, no, to, 1, egli, altri, re, men 9 \u2502 \u2502 4 sempre, j, degenerato, no, 1, re, te, perch\u00e8, fare, fa 9 \u2502 \u2502 5 sempre, no, perch\u00e8, 1, j, altri, mente, to, fatto, deg 9 \u2502 \u2502 6 sempre, egli, j, 1, no, degenerato, perch\u00e8, te, essi, 9 \u2502 \u2502 7 sempre, to, perch\u00e8, j, 1, mente, altri, re, solo, essi 9 \u2502 \u2502 8 sempre, perch\u00e8, egli, no, j, 1, degenerato, re, te, du 9 \u2502 \u2502 9 perch\u00e8, j, sempre, no, degenerato, egli, 1, to, re, te 9 \u2502 \u2502 \u2502 \u2502 content_array \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAG ONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 LA RAGIONA \u2502 \u2502 LA RAGIONE \u2502 \u2502 LA RAGIONE \u2502 \u2502 contro i vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 LA RAG ONE \u2502 \u2502 contro 1 vili, i camorristi, i sicari, i falsari e gli austriacanti, nemici de \u2502 \u2502 \u25a0\u25a0\u25a0 \u2502 \u2502 La Rassegna \u2502 \u2502 Both Phones \u2502 \u2502 \u25a0 jSr\u00ect** W?? iIK 38\u00aef- i^M \u2502 \u2502 \u25a0Both Phones \u2502 \u2502 \u2502 \u2502 date_array \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-04-25 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-05 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-05-16 00:00:00 \u2502 \u2502 1917-04-07 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-14 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 1917-04-21 00:00:00 \u2502 \u2502 \u2502 \u2502 preprocessed_corpus \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", '1', 'vili', ',', 'camorristi', \u2502 \u2502 ['RAG', 'ONE', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'aust \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['RAGIONA', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['RAGIONE', 'ORGANO', 'DIFESA', \"ITALIANIT\u00c0'\", 'vili', ',', 'camorristi', ',', \u2502 \u2502 ['RAGIONE', 'vili', ',', '1', 'camorristi', ',', 'sicari', ',', 'falsari', 'au \u2502 \u2502 ['vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti', ',' \u2502 \u2502 ['RAG', 'ONE', 'ORGANO', 'DIFESA', 'ITALIANIT\u00c0', \"''\", 'vili', ',', 'camorrist \u2502 \u2502 ['1', 'vili', ',', 'camorristi', ',', 'sicari', ',', 'falsari', 'austriacanti' \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'Rassegna', '_', 'Both', 'Phones', 'ANNO', 'No', '.', '1', 'perche', \" \u2502 \u2502 ['Rassegna', 'Jjoth', 'Phones', 'ANNO', 'No', '.', '2', 'BASTA', '!', '...', ' \u2502 \u2502 ['Both', 'Phones', 'ANNO', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0', 'qu \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'COSE', 'POSTO', 'va', \u2502 \u2502 \u2502 \u2502 text_corpus_file_bundle \u2502 \u2502 bundle name data \u2502 \u2502 number_of_files 16 \u2502 \u2502 size 298452 \u2502 \u2502 included files \u2502 \u2502 (relative) path size \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-1_seq-1_ocr\u2026 16613 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-2_seq-1_ocr\u2026 16679 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-3_seq-1_ocr\u2026 16793 \u2502 \u2502 La_Ragione/sn84037024_1917-04-25_ed-4_seq-1_ocr\u2026 16235 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-1_seq-1_ocr\u2026 18346 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-2_seq-1_ocr\u2026 18474 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-3_seq-1_ocr\u2026 18280 \u2502 \u2502 La_Ragione/sn84037024_1917-05-05_ed-4_seq-1_ocr\u2026 18481 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-1_seq-1_ocr\u2026 18620 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-2_seq-1_ocr\u2026 18698 \u2502 \u2502 La_Ragione/sn84037024_1917-05-16_ed-3_seq-1_ocr\u2026 18540 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-07_ed-1_seq-1_oc\u2026 19397 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-1_seq-1_oc\u2026 20647 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-14_ed-2_seq-1_oc\u2026 20650 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-1_seq-1_oc\u2026 21017 \u2502 \u2502 La_Rassegna/sn84037025_1917-04-21_ed-2_seq-1_oc\u2026 20982 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 text_corpus_table \u2502 \u2502 id rel_path mime_type size content file_name \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 0 La_Ragione/sn84 text/plain 16613 LA RAGIONE sn84037024_1917 \u2502 \u2502 1 La_Ragione/sn84 text/plain 16679 LA RAG ONE sn84037024_1917 \u2502 \u2502 2 La_Ragione/sn84 text/plain 16793 LA RAGIONE sn84037024_1917 \u2502 \u2502 3 La_Ragione/sn84 text/plain 16235 contro i vili, i sn84037024_1917 \u2502 \u2502 4 La_Ragione/sn84 text/plain 18346 contro i vili, i sn84037024_1917 \u2502 \u2502 5 La_Ragione/sn84 text/plain 18474 LA RAGIONA sn84037024_1917 \u2502 \u2502 6 La_Ragione/sn84 text/plain 18280 LA RAGIONE sn84037024_1917 \u2502 \u2502 7 La_Ragione/sn84 text/plain 18481 LA RAGIONE sn84037024_1917 \u2502 \u2502 8 La_Ragione/sn84 text/plain 18620 contro i vili, i sn84037024_1917 \u2502 \u2502 9 La_Ragione/sn84 text/plain 18698 LA RAG ONE sn84037024_1917 \u2502 \u2502 10 La_Ragione/sn84 text/plain 18540 contro 1 vili, i sn84037024_1917 \u2502 \u2502 11 La_Rassegna/sn8 text/plain 19397 \u25a0\u25a0\u25a0 sn84037025_1917 \u2502 \u2502 12 La_Rassegna/sn8 text/plain 20647 La Rassegna sn84037025_1917 \u2502 \u2502 13 La_Rassegna/sn8 text/plain 20650 Both Phones sn84037025_1917 \u2502 \u2502 14 La_Rassegna/sn8 text/plain 21017 \u25a0 jSr\u00ect** W?? iI sn84037025_1917 \u2502 \u2502 15 La_Rassegna/sn8 text/plain 20982 \u25a0Both Phones sn84037025_1917 \u2502 \u2502 \u2502 \u2502 tokenized_corpus \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', \u2502 \u2502 ['LA', 'RAG', 'ONE', 'contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', ' \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['LA', 'RAGIONA', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', 'contro', ' \u2502 \u2502 ['LA', 'RAGIONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', \"ITALIANIT\u00c0'\", 'contro', \u2502 \u2502 ['LA', 'RAGIONE', 'contro', 'i', 'vili', ',', '1', 'camorristi', ',', 'i', 'si \u2502 \u2502 ['contro', 'i', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['LA', 'RAG', 'ONE', 'ORGANO', 'DI', 'DIFESA', 'DELLA', 'ITALIANIT\u00c0', \"''\", 'c \u2502 \u2502 ['contro', '1', 'vili', ',', 'i', 'camorristi', ',', 'i', 'sicari', ',', 'i', \u2502 \u2502 ['\u25a0\u25a0\u25a0', 'La', 'Rassegna', '_', 'I', 'Both', 'Phones', 'ANNO', 'L', 'No', '.', \u2502 \u2502 ['La', 'Rassegna', 'Jjoth', 'Phones', 'ANNO', 'L', 'No', '.', '2', 'BASTA', '! \u2502 \u2502 ['Both', 'Phones', 'ANNO', 'I', '.', 'No', '.', '2', 'BASTA', '!', '...', 'u\u00e0' \u2502 \u2502 ['\u25a0', 'jSr\u00ect', '*', '*', 'W', '?', '?', 'iIK', '38\u00aef-', 'i^M', 'F', '<', '5\u00c9', \u2502 \u2502 ['\u25a0Both', 'Phones', 'ANNO', '11', '.', 'No', '.', '5', 'LE', 'COSE', 'A', 'POS \u2502 \u2502 \u2502 \u2502 topic_models \u2502 \u2502 dict data { \u2502 \u2502 \"7\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.085*\\\",\\\" + 0.028*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.089*\\\",\\\" + 0.035*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.101*\\\",\\\" + 0.031*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.067*\\\",\\\" + 0.032*\\\".\\\" + 0.013*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.075*\\\",\\\" + 0.037*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.073*\\\",\\\" + 0.030*\\\".\\\" + 0.014*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.026*\\\".\\\" + 0.007*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"8\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.028*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.004*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.069*\\\",\\\" + 0.025*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.056*\\\",\\\" + 0.027*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.110*\\\",\\\" + 0.040*\\\".\\\" + 0.012*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.029*\\\",\\\" + 0.017*\\\".\\\" + 0.006*\\\";\\\" + 0.004*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.015*\\\",\\\" + 0.010*\\\".\\\" + 0.004*\\\";\\\" + 0.003*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.057*\\\",\\\" + 0.033*\\\".\\\" + 0.013*\\\";\\\" + 0.008*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.077*\\\",\\\" + 0.022*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ], \u2502 \u2502 \"9\" : [ \u2502 \u2502 [ \u2502 \u2502 0 , \u2502 \u2502 \"0.064*\\\",\\\" + 0.023*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 1 , \u2502 \u2502 \"0.049*\\\",\\\" + 0.032*\\\".\\\" + 0.009*\\\";\\\" + 0.005*\\\"'\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 2 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.020*\\\".\\\" + 0.010*\\\";\\\" + 0.004*\\\":\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 3 , \u2502 \u2502 \"0.109*\\\",\\\" + 0.030*\\\".\\\" + 0.015*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 4 , \u2502 \u2502 \"0.051*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.005*\\\"''\\\" +\u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 5 , \u2502 \u2502 \"0.047*\\\",\\\" + 0.016*\\\".\\\" + 0.008*\\\";\\\" + 0.005*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 6 , \u2502 \u2502 \"0.074*\\\",\\\" + 0.030*\\\".\\\" + 0.010*\\\";\\\" + 0.006*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 7 , \u2502 \u2502 \"0.079*\\\",\\\" + 0.039*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"!\\\" + \u2026 \u2502 \u2502 ], \u2502 \u2502 [ \u2502 \u2502 8 , \u2502 \u2502 \"0.094*\\\",\\\" + 0.041*\\\".\\\" + 0.012*\\\";\\\" + 0.007*\\\"'\\\" + \u2026 \u2502 \u2502 ] \u2502 \u2502 ] \u2502 \u2502 } \u2502 \u2502 dict schema { \u2502 \u2502 \"title\" : \"dict\" , \u2502 \u2502 \"type\" : \"object\" \u2502 \u2502 } \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 snapshot timeline \u2502 \u2502 2022-10-03 13:07:56.228937+00:00 zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 \u2502 \u2502 current state id zdpuB2sHA2sfuLESmdATMSZm5Bi9TSJS697TGGVuJfvEqGrdT \u2502 \u2502 current state details \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__lang\u2026 valid no 76394b45-2dcb-44ca-b22b-01e0 \u2502 \u2502 ee25bd9f \u2502 \u2502 create_stopwords_list__stop\u2026 valid no cfd4f58b-358d-4640-af08-b745 \u2502 \u2502 ffaa7fd3 \u2502 \u2502 import_text_corpus__path valid yes 8721e6c2-9215-4020-93aa-f2fa \u2502 \u2502 90eec13b \u2502 \u2502 extract_filename_column__co\u2026 valid yes 0b6bd257-60c6-4434-b66c-e855 \u2502 \u2502 aa203622 \u2502 \u2502 extract_texts_column__colum\u2026 valid yes fd3ef854-c982-4589-b5c4-112a \u2502 \u2502 ae1c597e \u2502 \u2502 create_date_array__force_no\u2026 valid no True 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 create_date_array__max_index valid no a3846cdb-68cb-461a-9635-d0e9 \u2502 \u2502 bb73681e \u2502 \u2502 create_date_array__min_index valid no 4e8b9a9d-80e0-4595-a244-4007 \u2502 \u2502 46a2215b \u2502 \u2502 create_date_array__remove_t\u2026 valid no [] 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 tokenize_content__tokenize_\u2026 valid no True 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_a\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_a\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_n\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__remove_s\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 preprocess_corpus__to_lower\u2026 valid no False 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 generate_lda__compute_coher\u2026 valid no False 0f2ecd3e-15a8-482b-b0e2-20b6 \u2502 \u2502 5d5d4f53 \u2502 \u2502 generate_lda__num_topics_max valid no f9e07551-de8d-4e36-a9f6-cffc \u2502 \u2502 01d4c149 \u2502 \u2502 generate_lda__num_topics_min valid no 7 220f512a-03c0-4693-bba7-7314 \u2502 \u2502 2b8522ae \u2502 \u2502 generate_lda__words_per_top\u2026 valid no 10 00000000-0000-0000-0000-0000 \u2502 \u2502 00000002 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_stopwords_list \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: import_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 2 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: create_text_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: extract_filename_column \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: extract_texts_column \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 4 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: create_date_array \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: tokenize_content \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u251c\u2500\u2500 stage: 5 \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: preprocess_corpus \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 6 \u2502 \u2502 \u2514\u2500\u2500 step: generate_lda \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 create_stopwords_list__stopword\u2026 valid list c4c81256-c387-471e-8a05-76890ea \u2502 \u2502 efbcd \u2502 \u2502 import_text_corpus__file_bundle valid file_bundle 9856156c-b8dd-46c4-820d-e7f4934 \u2502 \u2502 f89c9 \u2502 \u2502 create_text_corpus__table valid table 640866c0-dac7-48f3-82d4-8a85617 \u2502 \u2502 ca072 \u2502 \u2502 extract_filename_column__array valid array b74e8402-ee7c-446f-8f3f-6fe9048 \u2502 \u2502 d1e7e \u2502 \u2502 extract_texts_column__array valid array 4b002cd8-2e48-456c-8cae-5479c5b \u2502 \u2502 1d612 \u2502 \u2502 create_date_array__date_array valid array 4abcfa2e-8ba0-4b04-8414-2a3e5ac \u2502 \u2502 38eea \u2502 \u2502 tokenize_content__tokens_array valid array e184c7e5-83c6-4821-ad3a-54b79af \u2502 \u2502 ff9aa \u2502 \u2502 preprocess_corpus__tokens_array valid array 685323a1-0db9-41b8-a518-c247a08 \u2502 \u2502 9e6ca \u2502 \u2502 generate_lda__coherence_map valid dict c746a2dd-a587-42c1-9967-9753789 \u2502 \u2502 bf616 \u2502 \u2502 generate_lda__coherence_table valid table 5fd0a91d-7682-4b08-a0a9-f1eb361 \u2502 \u2502 d60f0 \u2502 \u2502 generate_lda__topic_models valid dict 2c1ad51f-badf-4276-b368-d2e144e \u2502 \u2502 361bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow snapshot "},{"location":"workflows/xor/","text":"(function() { function addWidgetsRenderer() { var requireJsScript = document.createElement('script'); requireJsScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js'; var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var jupyterWidgetsScript = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} jupyterWidgetsScript.src = widgetRendererSrc; document.body.appendChild(requireJsScript); document.body.appendChild(jupyterWidgetsScript); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); %env CONSOLE_WIDTH=140 from kiara.interfaces.python_api.workflow import Workflow from kiara.utils.jupyter import graph_to_image from kiara.utils.cli import terminal_print_model env: CONSOLE_WIDTH=140 Creating the workflow object \u00b6 As the first step we create a Workflow object, which is a convenience class that manages workflow state, internal consistency and history for us: doc = \"\"\"Returns 'True' if exactly one of it's two inputs is 'True'.\"\"\" workflow = Workflow.create(\"logic.xor\", doc=doc, replace_existing_alias=True) Assembling the workflow \u00b6 The first step in the creation of our workflow is to create the individual steps from the available kiara modules. A list of available modules and their aliases can be found here: TODO Creating the steps of the workflow \u00b6 # Creating step: or workflow.add_step(operation=\"logic.or\", step_id=\"or\") \u256d\u2500 Step: or \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id or \u2502 \u2502 module type logic.or \u2502 \u2502 module_config { \u2502 \u2502 \"delay\" : 0.0 \u2502 \u2502 } \u2502 \u2502 module doc Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 or.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 or.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 or.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: nand step_nand_config = {'constants': {}, 'defaults': {}, 'pipeline_name': 'logic.nand', 'steps': [{'module_type': 'logic.and', 'module_config': {}, 'is_resolved': False, 'step_id': 'and', 'manifest_src': {'module_type': 'logic.and', 'module_config': {}, 'is_resolved': False}, 'input_links': {}, 'module_details': {'python_class_name': 'AndModule', 'python_module_name': 'kiara_plugin.core_types.modules.boolean', 'full_name': 'kiara_plugin.core_types.modules.boolean.AndModule', 'module_config': {'constants': {}, 'defaults': {}, 'delay': 0.0}, 'inputs_schema': {'a': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}, 'b': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}}, 'outputs_schema': {'y': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing the module output state.', 'doc': None}}}}, 'doc': {'description': '-- n/a --', 'doc': None}}, {'module_type': 'logic.not', 'module_config': {}, 'is_resolved': False, 'step_id': 'not', 'manifest_src': {'module_type': 'logic.not', 'module_config': {}, 'is_resolved': False}, 'input_links': {'a': [{'step_id': 'and', 'value_name': 'y', 'sub_value': None}]}, 'module_details': {'python_class_name': 'NotModule', 'python_module_name': 'kiara_plugin.core_types.modules.boolean', 'full_name': 'kiara_plugin.core_types.modules.boolean.NotModule', 'module_config': {'constants': {}, 'defaults': {}, 'delay': 0.0}, 'inputs_schema': {'a': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}}, 'outputs_schema': {'y': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing the module output state.', 'doc': None}}}}, 'doc': {'description': '-- n/a --', 'doc': None}}], 'input_aliases': {'and.a': 'a', 'and.b': 'b'}, 'output_aliases': {'not.y': 'y'}, 'doc': {'description': \"Returns 'False' if both inputs are 'True'.\", 'doc': None}, 'context': {}} workflow.add_step( operation=\"pipeline\", module_config=step_nand_config, step_id=\"nand\") \u256d\u2500 Step: nand \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id nand \u2502 \u2502 module type pipeline \u2502 \u2502 module_config { \u2502 \u2502 \"pipeline_name\" : \"logic.nand\" , \u2502 \u2502 \"steps\" : [ \u2502 \u2502 { \u2502 \u2502 \"step_id\" : \"and\" , \u2502 \u2502 \"module_type\" : \"logic.and\" \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"step_id\" : \"not\" , \u2502 \u2502 \"module_type\" : \"logic.not\" \u2502 \u2502 } \u2502 \u2502 ], \u2502 \u2502 \"input_aliases\" : { \u2502 \u2502 \"and.a\" : \"a\" , \u2502 \u2502 \"and.b\" : \"b\" \u2502 \u2502 }, \u2502 \u2502 \"output_aliases\" : { \u2502 \u2502 \"not.y\" : \"y\" \u2502 \u2502 }, \u2502 \u2502 \"doc\" : { \u2502 \u2502 \"description\" : \"Returns 'False' if both inputs are 'True'.\" , \u2502 \u2502 \"doc\" : null \u2502 \u2502 }, \u2502 \u2502 \"context\" : {} \u2502 \u2502 } \u2502 \u2502 module doc A utility module to run multiple connected inner-modules and present it as its own entity. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 nand.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: and workflow.add_step(operation=\"logic.and\", step_id=\"and\") \u256d\u2500 Step: and \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id and \u2502 \u2502 module type logic.and \u2502 \u2502 module_config { \u2502 \u2502 \"delay\" : 0.0 \u2502 \u2502 } \u2502 \u2502 module doc Returns 'True' if both inputs are 'True'. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 and.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 and.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 and.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'and' workflow.connect_fields(\"and.a\", \"or.y\") workflow.connect_fields(\"and.b\", \"nand.y\") Setting workflow input/output names (optional) \u00b6 To make our workflow nicer to use, we can set aliases for its inputs and outputs. workflow.set_input_alias(input_field=\"or.a\", alias=\"a\") workflow.set_input_alias(input_field=\"or.b\", alias=\"b\") workflow.set_input_alias(input_field=\"nand.a\", alias=\"a\") workflow.set_input_alias(input_field=\"nand.b\", alias=\"b\") workflow.set_output_alias(output_field=\"and.y\", alias=\"y\") Workflow information \u00b6 After our workflow is wired up, we look can look at its structure, and other properties. Workflow status \u00b6 A workflow consists of a series of 'states', the most relevant is always the most recent one. We can investigate that latest states details like so: workflow.current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuAkqygSvVA8NiYZdFtbBK2Rs9Y4jGiquJvjPWFYMhQYk8y \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 nand__b not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__a not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__b not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 and__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Pipeline execution graph \u00b6 Let's look at the current execution graph for the current workflow pipeline: graph_to_image(workflow.pipeline.execution_graph) Workflow inputs \u00b6 Once a workflow has an assembled pipeline, we can set it's inputs. We use the input field names that we got from the result of the workflow.current_state call. workflow.set_input(\"a\", True) workflow.set_input(\"b\", True) # process all workflow steps that can be processed workflow.process_steps() # print the current state, after we set our inputs workflow.current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Workflow outputs \u00b6 To print the actual data of the workflows' current outputs, we call the current_output_values property of the workflow object: workflow.current_output_values \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 y False \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Workflow snapshot \u00b6 So far, our workflow only exists in memory. If we want to save it so we can have a look at it again at a later stage, we can snapshot the current state, which will save the current structure of the internal pipeline, as well as all inputs that are currently used. In addition, this will register the workflow under the alias we specified on top of this file when creating the Workflow object (in our case: logic.xor ). If we would not not specify save=True , the structure of the pipeline and inputs would still be frozen and kept, but only in memory, and we'd only be able to access it in our current session. workflow.snapshot(save=True) \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now, we can access our workflow in other environments, for example from the commandline: ! kiara workflow list alias(es) workflow_id # steps # stages # states description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a2 08a53df4-9ea8-480e-9691-1cf9b868fc0c 2 2 1 -- n/a -- logic.xor 0ede1f36-f330-4e1b-8536-761e33f0cc83 3 2 1 Returns 'True' if exactly one of it's two inputs is 'True'. topic-modeling b5cdc05f-86a1-4c62-a2c3-1a854ce454b5 9 6 1 -- n/a -- topic_modeling 2f964a11-f1b8-4b0e-83a6-bce1466a0588 9 6 1 Example topic-modeling end-to-end workflow. topip_modeling 1f04ecfa-0c12-4469-bbe4-0497ee1dacaa 9 6 1 -- n/a -- ! kiara workflow explain logic.xor \u256d\u2500 Workflow: logic.xor \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 documentation \u2502 \u2502 Returns 'True' if exactly one of it's two inputs is 'True'. \u2502 \u2502 \u2502 \u2502 author(s) \u2502 \u2502 \u2502 \u2502 workflow id 0ede1f36-f330-4e1b-8536-761e33f0cc83 \u2502 \u2502 context \u2502 \u2502 \u2502 \u2502 current aliases { \"inputs\" :{ \"or__a\" : \"a\" , \"or__b\" : \"b\" , \"nand__a\" : \"a\" , \"nand__b\" : \"b\" }, \"outputs\" :{ \"and__y\" : \"y\" }} \u2502 \u2502 current inputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 a True \u2502 \u2502 b True \u2502 \u2502 \u2502 \u2502 current outputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 y False \u2502 \u2502 \u2502 \u2502 snapshot timeline \u2502 \u2502 2022-10-03 11:20:36.463088+00:00 zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 \u2502 \u2502 current state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 current state details \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Xor"},{"location":"workflows/xor/#creating-the-workflow-object","text":"As the first step we create a Workflow object, which is a convenience class that manages workflow state, internal consistency and history for us: doc = \"\"\"Returns 'True' if exactly one of it's two inputs is 'True'.\"\"\" workflow = Workflow.create(\"logic.xor\", doc=doc, replace_existing_alias=True)","title":"Creating the workflow object "},{"location":"workflows/xor/#assembling-the-workflow","text":"The first step in the creation of our workflow is to create the individual steps from the available kiara modules. A list of available modules and their aliases can be found here: TODO","title":"Assembling the workflow "},{"location":"workflows/xor/#creating-the-steps-of-the-workflow","text":"# Creating step: or workflow.add_step(operation=\"logic.or\", step_id=\"or\") \u256d\u2500 Step: or \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id or \u2502 \u2502 module type logic.or \u2502 \u2502 module_config { \u2502 \u2502 \"delay\" : 0.0 \u2502 \u2502 } \u2502 \u2502 module doc Returns 'True' if one of the inputs is 'True'. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 or.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 or.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 or.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: nand step_nand_config = {'constants': {}, 'defaults': {}, 'pipeline_name': 'logic.nand', 'steps': [{'module_type': 'logic.and', 'module_config': {}, 'is_resolved': False, 'step_id': 'and', 'manifest_src': {'module_type': 'logic.and', 'module_config': {}, 'is_resolved': False}, 'input_links': {}, 'module_details': {'python_class_name': 'AndModule', 'python_module_name': 'kiara_plugin.core_types.modules.boolean', 'full_name': 'kiara_plugin.core_types.modules.boolean.AndModule', 'module_config': {'constants': {}, 'defaults': {}, 'delay': 0.0}, 'inputs_schema': {'a': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}, 'b': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}}, 'outputs_schema': {'y': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing the module output state.', 'doc': None}}}}, 'doc': {'description': '-- n/a --', 'doc': None}}, {'module_type': 'logic.not', 'module_config': {}, 'is_resolved': False, 'step_id': 'not', 'manifest_src': {'module_type': 'logic.not', 'module_config': {}, 'is_resolved': False}, 'input_links': {'a': [{'step_id': 'and', 'value_name': 'y', 'sub_value': None}]}, 'module_details': {'python_class_name': 'NotModule', 'python_module_name': 'kiara_plugin.core_types.modules.boolean', 'full_name': 'kiara_plugin.core_types.modules.boolean.NotModule', 'module_config': {'constants': {}, 'defaults': {}, 'delay': 0.0}, 'inputs_schema': {'a': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing this input state.', 'doc': None}}}, 'outputs_schema': {'y': {'type': 'boolean', 'type_config': {}, 'default': '__not_set__', 'optional': False, 'is_constant': False, 'doc': {'description': 'A boolean describing the module output state.', 'doc': None}}}}, 'doc': {'description': '-- n/a --', 'doc': None}}], 'input_aliases': {'and.a': 'a', 'and.b': 'b'}, 'output_aliases': {'not.y': 'y'}, 'doc': {'description': \"Returns 'False' if both inputs are 'True'.\", 'doc': None}, 'context': {}} workflow.add_step( operation=\"pipeline\", module_config=step_nand_config, step_id=\"nand\") \u256d\u2500 Step: nand \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id nand \u2502 \u2502 module type pipeline \u2502 \u2502 module_config { \u2502 \u2502 \"pipeline_name\" : \"logic.nand\" , \u2502 \u2502 \"steps\" : [ \u2502 \u2502 { \u2502 \u2502 \"step_id\" : \"and\" , \u2502 \u2502 \"module_type\" : \"logic.and\" \u2502 \u2502 }, \u2502 \u2502 { \u2502 \u2502 \"step_id\" : \"not\" , \u2502 \u2502 \"module_type\" : \"logic.not\" \u2502 \u2502 } \u2502 \u2502 ], \u2502 \u2502 \"input_aliases\" : { \u2502 \u2502 \"and.a\" : \"a\" , \u2502 \u2502 \"and.b\" : \"b\" \u2502 \u2502 }, \u2502 \u2502 \"output_aliases\" : { \u2502 \u2502 \"not.y\" : \"y\" \u2502 \u2502 }, \u2502 \u2502 \"doc\" : { \u2502 \u2502 \"description\" : \"Returns 'False' if both inputs are 'True'.\" , \u2502 \u2502 \"doc\" : null \u2502 \u2502 }, \u2502 \u2502 \"context\" : {} \u2502 \u2502 } \u2502 \u2502 module doc A utility module to run multiple connected inner-modules and present it as its own entity. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 nand.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Creating step: and workflow.add_step(operation=\"logic.and\", step_id=\"and\") \u256d\u2500 Step: and \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 step_id and \u2502 \u2502 module type logic.and \u2502 \u2502 module_config { \u2502 \u2502 \"delay\" : 0.0 \u2502 \u2502 } \u2502 \u2502 module doc Returns 'True' if both inputs are 'True'. \u2502 \u2502 inputs \u2502 \u2502 field name type description Required Default \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 and.a boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 and.b boolean A boolean describing this input state. yes -- no default -- \u2502 \u2502 \u2502 \u2502 outputs \u2502 \u2502 field name type description \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 and.y boolean A boolean describing the module output state. \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f # Connecting input(s) of step 'and' workflow.connect_fields(\"and.a\", \"or.y\") workflow.connect_fields(\"and.b\", \"nand.y\")","title":"Creating the steps of the workflow "},{"location":"workflows/xor/#setting-workflow-inputoutput-names-optional","text":"To make our workflow nicer to use, we can set aliases for its inputs and outputs. workflow.set_input_alias(input_field=\"or.a\", alias=\"a\") workflow.set_input_alias(input_field=\"or.b\", alias=\"b\") workflow.set_input_alias(input_field=\"nand.a\", alias=\"a\") workflow.set_input_alias(input_field=\"nand.b\", alias=\"b\") workflow.set_output_alias(output_field=\"and.y\", alias=\"y\")","title":"Setting workflow input/output names (optional)"},{"location":"workflows/xor/#workflow-information","text":"After our workflow is wired up, we look can look at its structure, and other properties.","title":"Workflow information "},{"location":"workflows/xor/#workflow-status","text":"A workflow consists of a series of 'states', the most relevant is always the most recent one. We can investigate that latest states details like so: workflow.current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuAkqygSvVA8NiYZdFtbBK2Rs9Y4jGiquJvjPWFYMhQYk8y \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 nand__b not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__a not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__b not set yes 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: inputs invalid \u2502 \u2502 \u251c\u2500\u2500 a : not set \u2502 \u2502 \u2514\u2500\u2500 b : not set \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 or__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 and__y not set none 00000000-0000-0000-0000-000000000001 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow status"},{"location":"workflows/xor/#pipeline-execution-graph","text":"Let's look at the current execution graph for the current workflow pipeline: graph_to_image(workflow.pipeline.execution_graph)","title":"Pipeline execution graph"},{"location":"workflows/xor/#workflow-inputs","text":"Once a workflow has an assembled pipeline, we can set it's inputs. We use the input field names that we got from the result of the workflow.current_state call. workflow.set_input(\"a\", True) workflow.set_input(\"b\", True) # process all workflow steps that can be processed workflow.process_steps() # print the current state, after we set our inputs workflow.current_state \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow inputs "},{"location":"workflows/xor/#workflow-outputs","text":"To print the actual data of the workflows' current outputs, we call the current_output_values property of the workflow object: workflow.current_output_values \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 y False \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow outputs "},{"location":"workflows/xor/#workflow-snapshot","text":"So far, our workflow only exists in memory. If we want to save it so we can have a look at it again at a later stage, we can snapshot the current state, which will save the current structure of the internal pipeline, as well as all inputs that are currently used. In addition, this will register the workflow under the alias we specified on top of this file when creating the Workflow object (in our case: logic.xor ). If we would not not specify save=True , the structure of the pipeline and inputs would still be frozen and kept, but only in memory, and we'd only be able to access it in our current session. workflow.snapshot(save=True) \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Now, we can access our workflow in other environments, for example from the commandline: ! kiara workflow list alias(es) workflow_id # steps # stages # states description \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a2 08a53df4-9ea8-480e-9691-1cf9b868fc0c 2 2 1 -- n/a -- logic.xor 0ede1f36-f330-4e1b-8536-761e33f0cc83 3 2 1 Returns 'True' if exactly one of it's two inputs is 'True'. topic-modeling b5cdc05f-86a1-4c62-a2c3-1a854ce454b5 9 6 1 -- n/a -- topic_modeling 2f964a11-f1b8-4b0e-83a6-bce1466a0588 9 6 1 Example topic-modeling end-to-end workflow. topip_modeling 1f04ecfa-0c12-4469-bbe4-0497ee1dacaa 9 6 1 -- n/a -- ! kiara workflow explain logic.xor \u256d\u2500 Workflow: logic.xor \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 documentation \u2502 \u2502 Returns 'True' if exactly one of it's two inputs is 'True'. \u2502 \u2502 \u2502 \u2502 author(s) \u2502 \u2502 \u2502 \u2502 workflow id 0ede1f36-f330-4e1b-8536-761e33f0cc83 \u2502 \u2502 context \u2502 \u2502 \u2502 \u2502 current aliases { \"inputs\" :{ \"or__a\" : \"a\" , \"or__b\" : \"b\" , \"nand__a\" : \"a\" , \"nand__b\" : \"b\" }, \"outputs\" :{ \"and__y\" : \"y\" }} \u2502 \u2502 current inputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 a True \u2502 \u2502 b True \u2502 \u2502 \u2502 \u2502 current outputs \u2502 \u2502 field value \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 y False \u2502 \u2502 \u2502 \u2502 snapshot timeline \u2502 \u2502 2022-10-03 11:20:36.463088+00:00 zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 \u2502 \u2502 current state id zdpuApYDQudSk8nS3yS5dVuRifeF4BnSjTefT336B8b1oq71x \u2502 \u2502 current state details \u2502 \u2502 pipeline inputs \u2502 \u2502 field name status required default value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 nand__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__a valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 or__b valid yes 3ea777df-420b-4bb1-9500-30ef4425e128 \u2502 \u2502 \u2502 \u2502 steps steps \u2502 \u2502 \u251c\u2500\u2500 stage: 1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 step: nand \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2502 \u2514\u2500\u2500 step: or \u2502 \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 \u2514\u2500\u2500 stage: 2 \u2502 \u2502 \u2514\u2500\u2500 step: and \u2502 \u2502 \u2514\u2500\u2500 status: results ready \u2502 \u2502 pipeline outputs \u2502 \u2502 field name status type value id \u2502 \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 \u2502 nand__y valid boolean 19529342-2add-47e5-a802-0aaed0240f97 \u2502 \u2502 or__y valid boolean c298652f-46b6-49c9-b006-5a2f45283c86 \u2502 \u2502 and__y valid boolean 570393c6-d7d7-417e-b97f-550c53c05588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Workflow snapshot "}]}